{"ast":null,"code":"\"use strict\";var _defineProperty=require(\"/Users/fernandorojo/Developer/messing/rea-tree/node_modules/next/dist/compiled/@babel/runtime/helpers/defineProperty\");var _objectWithoutProperties=require(\"/Users/fernandorojo/Developer/messing/rea-tree/node_modules/next/dist/compiled/@babel/runtime/helpers/objectWithoutProperties\");var _regeneratorRuntime=require(\"/Users/fernandorojo/Developer/messing/rea-tree/node_modules/next/dist/compiled/@babel/runtime/regenerator\");var _asyncToGenerator=require(\"/Users/fernandorojo/Developer/messing/rea-tree/node_modules/next/dist/compiled/@babel/runtime/helpers/asyncToGenerator\");var _excluded=[\"providers\"];function ownKeys(object,enumerableOnly){var keys=Object.keys(object);if(Object.getOwnPropertySymbols){var symbols=Object.getOwnPropertySymbols(object);enumerableOnly&&(symbols=symbols.filter(function(sym){return Object.getOwnPropertyDescriptor(object,sym).enumerable;})),keys.push.apply(keys,symbols);}return keys;}function _objectSpread(target){for(var i=1;i<arguments.length;i++){var source=null!=arguments[i]?arguments[i]:{};i%2?ownKeys(Object(source),!0).forEach(function(key){_defineProperty(target,key,source[key]);}):Object.getOwnPropertyDescriptors?Object.defineProperties(target,Object.getOwnPropertyDescriptors(source)):ownKeys(Object(source)).forEach(function(key){Object.defineProperty(target,key,Object.getOwnPropertyDescriptor(source,key));});}return target;}Object.defineProperty(exports,\"__esModule\",{value:true});exports.getAndroidModFileProviders=getAndroidModFileProviders;exports.sortAndroidManifest=sortAndroidManifest;exports.withAndroidBaseMods=withAndroidBaseMods;function _fs(){var data=require(\"fs\");_fs=function _fs(){return data;};return data;}function _path(){var data=_interopRequireDefault(require(\"path\"));_path=function _path(){return data;};return data;}function _android(){var data=require(\"../android\");_android=function _android(){return data;};return data;}function _XML(){var data=require(\"../utils/XML\");_XML=function _XML(){return data;};return data;}function _sortObject(){var data=require(\"../utils/sortObject\");_sortObject=function _sortObject(){return data;};return data;}function _createBaseMod(){var data=require(\"./createBaseMod\");_createBaseMod=function _createBaseMod(){return data;};return data;}function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{\"default\":obj};}var _fs$promises=_fs().promises,readFile=_fs$promises.readFile,writeFile=_fs$promises.writeFile;function getAndroidManifestTemplate(config){var _config$android$packa,_config$android;// Keep in sync with https://github.com/expo/expo/blob/master/templates/expo-template-bare-minimum/android/app/src/main/AndroidManifest.xml\n// TODO: Read from remote template when possible\nreturn(0,_XML().parseXMLAsync)(\"\\n  <manifest xmlns:android=\\\"http://schemas.android.com/apk/res/android\\\" package=\\\"\".concat((_config$android$packa=(_config$android=config.android)===null||_config$android===void 0?void 0:_config$android[\"package\"])!==null&&_config$android$packa!==void 0?_config$android$packa:'com.placeholder.appid',\"\\\">\\n\\n    <uses-permission android:name=\\\"android.permission.INTERNET\\\"/>\\n    <!-- OPTIONAL PERMISSIONS, REMOVE WHATEVER YOU DO NOT NEED -->\\n    <uses-permission android:name=\\\"android.permission.SYSTEM_ALERT_WINDOW\\\"/>\\n    <!-- These require runtime permissions on M -->\\n    <uses-permission android:name=\\\"android.permission.READ_EXTERNAL_STORAGE\\\"/>\\n    <uses-permission android:name=\\\"android.permission.WRITE_EXTERNAL_STORAGE\\\"/>\\n    <!-- END OPTIONAL PERMISSIONS -->\\n\\n    <queries>\\n      <!-- Support checking for http(s) links via the Linking API -->\\n      <intent>\\n        <action android:name=\\\"android.intent.action.VIEW\\\" />\\n        <category android:name=\\\"android.intent.category.BROWSABLE\\\" />\\n        <data android:scheme=\\\"https\\\" />\\n      </intent>\\n    </queries>\\n\\n    <application\\n      android:name=\\\".MainApplication\\\"\\n      android:label=\\\"@string/app_name\\\"\\n      android:icon=\\\"@mipmap/ic_launcher\\\"\\n      android:roundIcon=\\\"@mipmap/ic_launcher_round\\\"\\n      android:allowBackup=\\\"false\\\"\\n      android:theme=\\\"@style/AppTheme\\\"\\n      android:usesCleartextTraffic=\\\"true\\\"\\n    >\\n      <meta-data android:name=\\\"expo.modules.updates.EXPO_UPDATE_URL\\\" android:value=\\\"YOUR-APP-URL-HERE\\\"/>\\n      <meta-data android:name=\\\"expo.modules.updates.EXPO_SDK_VERSION\\\" android:value=\\\"YOUR-APP-SDK-VERSION-HERE\\\"/>\\n      <activity\\n        android:name=\\\".MainActivity\\\"\\n        android:label=\\\"@string/app_name\\\"\\n        android:configChanges=\\\"keyboard|keyboardHidden|orientation|screenSize|uiMode\\\"\\n        android:launchMode=\\\"singleTask\\\"\\n        android:windowSoftInputMode=\\\"adjustResize\\\"\\n        android:theme=\\\"@style/Theme.App.SplashScreen\\\"\\n      >\\n        <intent-filter>\\n          <action android:name=\\\"android.intent.action.MAIN\\\"/>\\n          <category android:name=\\\"android.intent.category.LAUNCHER\\\"/>\\n        </intent-filter>\\n      </activity>\\n      <activity android:name=\\\"com.facebook.react.devsupport.DevSettingsActivity\\\"/>\\n    </application>\\n  </manifest>\\n  \"));}function sortAndroidManifest(obj){if(obj.manifest){// Reverse sort so application is last and permissions are first\nobj.manifest=(0,_sortObject().sortObject)(obj.manifest,_sortObject().reverseSortString);if(Array.isArray(obj.manifest['uses-permission'])){// Sort permissions alphabetically\nobj.manifest['uses-permission'].sort(function(a,b){if(a.$['android:name']<b.$['android:name'])return-1;if(a.$['android:name']>b.$['android:name'])return 1;return 0;});}if(Array.isArray(obj.manifest.application)){// reverse sort applications so activity is towards the end and meta-data is towards the front.\nobj.manifest.application=obj.manifest.application.map(function(application){application=(0,_sortObject().sortObjWithOrder)(application,['meta-data','service','activity']);if(Array.isArray(application['meta-data'])){// Sort metadata alphabetically\napplication['meta-data'].sort(function(a,b){if(a.$['android:name']<b.$['android:name'])return-1;if(a.$['android:name']>b.$['android:name'])return 1;return 0;});}return application;});}}return obj;}var defaultProviders={dangerous:(0,_createBaseMod().provider)({getFilePath:function getFilePath(){return'';},read:function read(){return _asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(){return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:return _context.abrupt(\"return\",{filePath:'',modResults:{}});case 1:case\"end\":return _context.stop();}}},_callee);}))();},write:function write(){return _asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee2(){return _regeneratorRuntime.wrap(function _callee2$(_context2){while(1){switch(_context2.prev=_context2.next){case 0:case\"end\":return _context2.stop();}}},_callee2);}))();}}),// Append a rule to supply gradle.properties data to mods on `mods.android.gradleProperties`\nmanifest:(0,_createBaseMod().provider)({isIntrospective:true,getFilePath:function getFilePath(_ref){var platformProjectRoot=_ref.modRequest.platformProjectRoot;return _path()[\"default\"].join(platformProjectRoot,'app/src/main/AndroidManifest.xml');},read:function read(filePath,config){return _asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee3(){return _regeneratorRuntime.wrap(function _callee3$(_context3){while(1){switch(_context3.prev=_context3.next){case 0:_context3.prev=0;_context3.next=3;return _android().Manifest.readAndroidManifestAsync(filePath);case 3:return _context3.abrupt(\"return\",_context3.sent);case 6:_context3.prev=6;_context3.t0=_context3[\"catch\"](0);if(config.modRequest.introspect){_context3.next=10;break;}throw _context3.t0;case 10:_context3.next=12;return getAndroidManifestTemplate(config);case 12:return _context3.abrupt(\"return\",_context3.sent);case 13:case\"end\":return _context3.stop();}}},_callee3,null,[[0,6]]);}))();},write:function write(filePath,_ref2){return _asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee4(){var modResults,introspect;return _regeneratorRuntime.wrap(function _callee4$(_context4){while(1){switch(_context4.prev=_context4.next){case 0:modResults=_ref2.modResults,introspect=_ref2.modRequest.introspect;if(!introspect){_context4.next=3;break;}return _context4.abrupt(\"return\");case 3:_context4.next=5;return _android().Manifest.writeAndroidManifestAsync(filePath,sortAndroidManifest(modResults));case 5:case\"end\":return _context4.stop();}}},_callee4);}))();}}),// Append a rule to supply gradle.properties data to mods on `mods.android.gradleProperties`\ngradleProperties:(0,_createBaseMod().provider)({isIntrospective:true,getFilePath:function getFilePath(_ref3){var platformProjectRoot=_ref3.modRequest.platformProjectRoot;return _path()[\"default\"].join(platformProjectRoot,'gradle.properties');},read:function read(filePath,config){return _asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee5(){return _regeneratorRuntime.wrap(function _callee5$(_context5){while(1){switch(_context5.prev=_context5.next){case 0:_context5.prev=0;_context5.t0=_android().Properties;_context5.next=4;return readFile(filePath,'utf8');case 4:_context5.t1=_context5.sent;_context5.next=7;return _context5.t0.parsePropertiesFile.call(_context5.t0,_context5.t1);case 7:return _context5.abrupt(\"return\",_context5.sent);case 10:_context5.prev=10;_context5.t2=_context5[\"catch\"](0);if(config.modRequest.introspect){_context5.next=14;break;}throw _context5.t2;case 14:return _context5.abrupt(\"return\",[]);case 15:case\"end\":return _context5.stop();}}},_callee5,null,[[0,10]]);}))();},write:function write(filePath,_ref4){return _asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee6(){var modResults,introspect;return _regeneratorRuntime.wrap(function _callee6$(_context6){while(1){switch(_context6.prev=_context6.next){case 0:modResults=_ref4.modResults,introspect=_ref4.modRequest.introspect;if(!introspect){_context6.next=3;break;}return _context6.abrupt(\"return\");case 3:_context6.next=5;return writeFile(filePath,_android().Properties.propertiesListToString(modResults));case 5:case\"end\":return _context6.stop();}}},_callee6);}))();}}),// Append a rule to supply strings.xml data to mods on `mods.android.strings`\nstrings:(0,_createBaseMod().provider)({isIntrospective:true,getFilePath:function getFilePath(_ref5){return _asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee7(){var _ref5$modRequest,projectRoot,introspect;return _regeneratorRuntime.wrap(function _callee7$(_context7){while(1){switch(_context7.prev=_context7.next){case 0:_ref5$modRequest=_ref5.modRequest,projectRoot=_ref5$modRequest.projectRoot,introspect=_ref5$modRequest.introspect;_context7.prev=1;_context7.next=4;return _android().Strings.getProjectStringsXMLPathAsync(projectRoot);case 4:return _context7.abrupt(\"return\",_context7.sent);case 7:_context7.prev=7;_context7.t0=_context7[\"catch\"](1);if(introspect){_context7.next=11;break;}throw _context7.t0;case 11:return _context7.abrupt(\"return\",'');case 12:case\"end\":return _context7.stop();}}},_callee7,null,[[1,7]]);}))();},read:function read(filePath,config){return _asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee8(){return _regeneratorRuntime.wrap(function _callee8$(_context8){while(1){switch(_context8.prev=_context8.next){case 0:_context8.prev=0;_context8.next=3;return _android().Resources.readResourcesXMLAsync({path:filePath});case 3:return _context8.abrupt(\"return\",_context8.sent);case 6:_context8.prev=6;_context8.t0=_context8[\"catch\"](0);if(config.modRequest.introspect){_context8.next=10;break;}throw _context8.t0;case 10:return _context8.abrupt(\"return\",{resources:{}});case 11:case\"end\":return _context8.stop();}}},_callee8,null,[[0,6]]);}))();},write:function write(filePath,_ref6){return _asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee9(){var modResults,introspect;return _regeneratorRuntime.wrap(function _callee9$(_context9){while(1){switch(_context9.prev=_context9.next){case 0:modResults=_ref6.modResults,introspect=_ref6.modRequest.introspect;if(!introspect){_context9.next=3;break;}return _context9.abrupt(\"return\");case 3:_context9.next=5;return(0,_XML().writeXMLAsync)({path:filePath,xml:modResults});case 5:case\"end\":return _context9.stop();}}},_callee9);}))();}}),colors:(0,_createBaseMod().provider)({isIntrospective:true,getFilePath:function getFilePath(_ref7){return _asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee10(){var _ref7$modRequest,projectRoot,introspect;return _regeneratorRuntime.wrap(function _callee10$(_context10){while(1){switch(_context10.prev=_context10.next){case 0:_ref7$modRequest=_ref7.modRequest,projectRoot=_ref7$modRequest.projectRoot,introspect=_ref7$modRequest.introspect;_context10.prev=1;_context10.next=4;return _android().Colors.getProjectColorsXMLPathAsync(projectRoot);case 4:return _context10.abrupt(\"return\",_context10.sent);case 7:_context10.prev=7;_context10.t0=_context10[\"catch\"](1);if(introspect){_context10.next=11;break;}throw _context10.t0;case 11:return _context10.abrupt(\"return\",'');case 12:case\"end\":return _context10.stop();}}},_callee10,null,[[1,7]]);}))();},read:function read(filePath,_ref8){return _asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee11(){var introspect;return _regeneratorRuntime.wrap(function _callee11$(_context11){while(1){switch(_context11.prev=_context11.next){case 0:introspect=_ref8.modRequest.introspect;_context11.prev=1;_context11.next=4;return _android().Resources.readResourcesXMLAsync({path:filePath});case 4:return _context11.abrupt(\"return\",_context11.sent);case 7:_context11.prev=7;_context11.t0=_context11[\"catch\"](1);if(introspect){_context11.next=11;break;}throw _context11.t0;case 11:return _context11.abrupt(\"return\",{resources:{}});case 12:case\"end\":return _context11.stop();}}},_callee11,null,[[1,7]]);}))();},write:function write(filePath,_ref9){return _asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee12(){var modResults,introspect;return _regeneratorRuntime.wrap(function _callee12$(_context12){while(1){switch(_context12.prev=_context12.next){case 0:modResults=_ref9.modResults,introspect=_ref9.modRequest.introspect;if(!introspect){_context12.next=3;break;}return _context12.abrupt(\"return\");case 3:_context12.next=5;return(0,_XML().writeXMLAsync)({path:filePath,xml:modResults});case 5:case\"end\":return _context12.stop();}}},_callee12);}))();}}),colorsNight:(0,_createBaseMod().provider)({isIntrospective:true,getFilePath:function getFilePath(_ref10){return _asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee13(){var _ref10$modRequest,projectRoot,introspect;return _regeneratorRuntime.wrap(function _callee13$(_context13){while(1){switch(_context13.prev=_context13.next){case 0:_ref10$modRequest=_ref10.modRequest,projectRoot=_ref10$modRequest.projectRoot,introspect=_ref10$modRequest.introspect;_context13.prev=1;_context13.next=4;return _android().Colors.getProjectColorsXMLPathAsync(projectRoot,{kind:'values-night'});case 4:return _context13.abrupt(\"return\",_context13.sent);case 7:_context13.prev=7;_context13.t0=_context13[\"catch\"](1);if(introspect){_context13.next=11;break;}throw _context13.t0;case 11:return _context13.abrupt(\"return\",'');case 12:case\"end\":return _context13.stop();}}},_callee13,null,[[1,7]]);}))();},read:function read(filePath,config){return _asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee14(){return _regeneratorRuntime.wrap(function _callee14$(_context14){while(1){switch(_context14.prev=_context14.next){case 0:_context14.prev=0;_context14.next=3;return _android().Resources.readResourcesXMLAsync({path:filePath});case 3:return _context14.abrupt(\"return\",_context14.sent);case 6:_context14.prev=6;_context14.t0=_context14[\"catch\"](0);if(config.modRequest.introspect){_context14.next=10;break;}throw _context14.t0;case 10:return _context14.abrupt(\"return\",{resources:{}});case 11:case\"end\":return _context14.stop();}}},_callee14,null,[[0,6]]);}))();},write:function write(filePath,_ref11){return _asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee15(){var modResults,introspect;return _regeneratorRuntime.wrap(function _callee15$(_context15){while(1){switch(_context15.prev=_context15.next){case 0:modResults=_ref11.modResults,introspect=_ref11.modRequest.introspect;if(!introspect){_context15.next=3;break;}return _context15.abrupt(\"return\");case 3:_context15.next=5;return(0,_XML().writeXMLAsync)({path:filePath,xml:modResults});case 5:case\"end\":return _context15.stop();}}},_callee15);}))();}}),styles:(0,_createBaseMod().provider)({isIntrospective:true,getFilePath:function getFilePath(_ref12){return _asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee16(){var _ref12$modRequest,projectRoot,introspect;return _regeneratorRuntime.wrap(function _callee16$(_context16){while(1){switch(_context16.prev=_context16.next){case 0:_ref12$modRequest=_ref12.modRequest,projectRoot=_ref12$modRequest.projectRoot,introspect=_ref12$modRequest.introspect;_context16.prev=1;_context16.next=4;return _android().Styles.getProjectStylesXMLPathAsync(projectRoot);case 4:return _context16.abrupt(\"return\",_context16.sent);case 7:_context16.prev=7;_context16.t0=_context16[\"catch\"](1);if(introspect){_context16.next=11;break;}throw _context16.t0;case 11:return _context16.abrupt(\"return\",'');case 12:case\"end\":return _context16.stop();}}},_callee16,null,[[1,7]]);}))();},read:function read(filePath,config){return _asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee17(){var _styles$resources$$,styles;return _regeneratorRuntime.wrap(function _callee17$(_context17){while(1){switch(_context17.prev=_context17.next){case 0:styles={resources:{}};_context17.prev=1;_context17.next=4;return _android().Resources.readResourcesXMLAsync({path:filePath,fallback:\"<?xml version=\\\"1.0\\\" encoding=\\\"utf-8\\\"?><resources xmlns:tools=\\\"http://schemas.android.com/tools\\\"></resources>\"});case 4:styles=_context17.sent;_context17.next=11;break;case 7:_context17.prev=7;_context17.t0=_context17[\"catch\"](1);if(config.modRequest.introspect){_context17.next=11;break;}throw _context17.t0;case 11:// Ensure support for tools is added...\nif(!styles.resources.$){styles.resources.$={};}if(!((_styles$resources$$=styles.resources.$)!==null&&_styles$resources$$!==void 0&&_styles$resources$$['xmlns:tools'])){styles.resources.$['xmlns:tools']='http://schemas.android.com/tools';}return _context17.abrupt(\"return\",styles);case 14:case\"end\":return _context17.stop();}}},_callee17,null,[[1,7]]);}))();},write:function write(filePath,_ref13){return _asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee18(){var modResults,introspect;return _regeneratorRuntime.wrap(function _callee18$(_context18){while(1){switch(_context18.prev=_context18.next){case 0:modResults=_ref13.modResults,introspect=_ref13.modRequest.introspect;if(!introspect){_context18.next=3;break;}return _context18.abrupt(\"return\");case 3:_context18.next=5;return(0,_XML().writeXMLAsync)({path:filePath,xml:modResults});case 5:case\"end\":return _context18.stop();}}},_callee18);}))();}}),projectBuildGradle:(0,_createBaseMod().provider)({getFilePath:function getFilePath(_ref14){var projectRoot=_ref14.modRequest.projectRoot;return _android().Paths.getProjectBuildGradleFilePath(projectRoot);},read:function read(filePath){return _asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee19(){return _regeneratorRuntime.wrap(function _callee19$(_context19){while(1){switch(_context19.prev=_context19.next){case 0:return _context19.abrupt(\"return\",_android().Paths.getFileInfo(filePath));case 1:case\"end\":return _context19.stop();}}},_callee19);}))();},write:function write(filePath,_ref15){return _asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee20(){var contents;return _regeneratorRuntime.wrap(function _callee20$(_context20){while(1){switch(_context20.prev=_context20.next){case 0:contents=_ref15.modResults.contents;_context20.next=3;return writeFile(filePath,contents);case 3:case\"end\":return _context20.stop();}}},_callee20);}))();}}),settingsGradle:(0,_createBaseMod().provider)({getFilePath:function getFilePath(_ref16){var projectRoot=_ref16.modRequest.projectRoot;return _android().Paths.getSettingsGradleFilePath(projectRoot);},read:function read(filePath){return _asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee21(){return _regeneratorRuntime.wrap(function _callee21$(_context21){while(1){switch(_context21.prev=_context21.next){case 0:return _context21.abrupt(\"return\",_android().Paths.getFileInfo(filePath));case 1:case\"end\":return _context21.stop();}}},_callee21);}))();},write:function write(filePath,_ref17){return _asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee22(){var contents;return _regeneratorRuntime.wrap(function _callee22$(_context22){while(1){switch(_context22.prev=_context22.next){case 0:contents=_ref17.modResults.contents;_context22.next=3;return writeFile(filePath,contents);case 3:case\"end\":return _context22.stop();}}},_callee22);}))();}}),appBuildGradle:(0,_createBaseMod().provider)({getFilePath:function getFilePath(_ref18){var projectRoot=_ref18.modRequest.projectRoot;return _android().Paths.getAppBuildGradleFilePath(projectRoot);},read:function read(filePath){return _asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee23(){return _regeneratorRuntime.wrap(function _callee23$(_context23){while(1){switch(_context23.prev=_context23.next){case 0:return _context23.abrupt(\"return\",_android().Paths.getFileInfo(filePath));case 1:case\"end\":return _context23.stop();}}},_callee23);}))();},write:function write(filePath,_ref19){return _asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee24(){var contents;return _regeneratorRuntime.wrap(function _callee24$(_context24){while(1){switch(_context24.prev=_context24.next){case 0:contents=_ref19.modResults.contents;_context24.next=3;return writeFile(filePath,contents);case 3:case\"end\":return _context24.stop();}}},_callee24);}))();}}),mainActivity:(0,_createBaseMod().provider)({getFilePath:function getFilePath(_ref20){var projectRoot=_ref20.modRequest.projectRoot;return _android().Paths.getProjectFilePath(projectRoot,'MainActivity');},read:function read(filePath){return _asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee25(){return _regeneratorRuntime.wrap(function _callee25$(_context25){while(1){switch(_context25.prev=_context25.next){case 0:return _context25.abrupt(\"return\",_android().Paths.getFileInfo(filePath));case 1:case\"end\":return _context25.stop();}}},_callee25);}))();},write:function write(filePath,_ref21){return _asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee26(){var contents;return _regeneratorRuntime.wrap(function _callee26$(_context26){while(1){switch(_context26.prev=_context26.next){case 0:contents=_ref21.modResults.contents;_context26.next=3;return writeFile(filePath,contents);case 3:case\"end\":return _context26.stop();}}},_callee26);}))();}}),mainApplication:(0,_createBaseMod().provider)({getFilePath:function getFilePath(_ref22){var projectRoot=_ref22.modRequest.projectRoot;return _android().Paths.getProjectFilePath(projectRoot,'MainApplication');},read:function read(filePath){return _asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee27(){return _regeneratorRuntime.wrap(function _callee27$(_context27){while(1){switch(_context27.prev=_context27.next){case 0:return _context27.abrupt(\"return\",_android().Paths.getFileInfo(filePath));case 1:case\"end\":return _context27.stop();}}},_callee27);}))();},write:function write(filePath,_ref23){return _asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee28(){var contents;return _regeneratorRuntime.wrap(function _callee28$(_context28){while(1){switch(_context28.prev=_context28.next){case 0:contents=_ref23.modResults.contents;_context28.next=3;return writeFile(filePath,contents);case 3:case\"end\":return _context28.stop();}}},_callee28);}))();}})};function withAndroidBaseMods(config){var _ref24=arguments.length>1&&arguments[1]!==undefined?arguments[1]:{};var providers=_ref24.providers,props=_objectWithoutProperties(_ref24,_excluded);return(0,_createBaseMod().withGeneratedBaseMods)(config,_objectSpread(_objectSpread({},props),{},{platform:'android',providers:providers!==null&&providers!==void 0?providers:getAndroidModFileProviders()}));}function getAndroidModFileProviders(){return defaultProviders;}","map":{"version":3,"sources":["../../src/plugins/withAndroidBaseMods.ts"],"names":["writeFile","promises","config","obj","reverseSortString","Array","a","b","application","defaultProviders","dangerous","getFilePath","filePath","modResults","manifest","isIntrospective","modRequest","platformProjectRoot","path","Manifest","getAndroidManifestTemplate","introspect","sortAndroidManifest","gradleProperties","Properties","readFile","strings","Strings","resources","xml","colors","Colors","colorsNight","kind","styles","Styles","fallback","projectBuildGradle","projectRoot","Paths","contents","settingsGradle","appBuildGradle","mainActivity","mainApplication","props","platform","providers","getAndroidModFileProviders"],"mappings":"omDAAA,QAAA,CAAA,GAAA,EAAA,CAAA,GAAA,CAAA,IAAA,CAAA,OAAA,CAAA,IAAA,CAAA,CAAA,GAAA,CAAA,cAAA,CAAA,MAAA,CAAA,IAAA,CAAA,CAAA,CAAA,MAAA,CAAA,IAAA,CAAA,CACA,QAAA,CAAA,KAAA,EAAA,CAAA,GAAA,CAAA,IAAA,CAAA,sBAAA,CAAA,OAAA,CAAA,MAAA,CAAA,CAAA,CAAA,KAAA,CAAA,gBAAA,CAAA,MAAA,CAAA,IAAA,CAAA,CAAA,CAAA,MAAA,CAAA,IAAA,CAAA,CAGA,QAAA,CAAA,QAAA,EAAA,CAAA,GAAA,CAAA,IAAA,CAAA,OAAA,CAAA,YAAA,CAAA,CAAA,QAAA,CAAA,mBAAA,CAAA,MAAA,CAAA,IAAA,CAAA,CAAA,CAAA,MAAA,CAAA,IAAA,CAAA,CAEA,QAAA,CAAA,IAAA,EAAA,CAAA,GAAA,CAAA,IAAA,CAAA,OAAA,CAAA,cAAA,CAAA,CAAA,IAAA,CAAA,eAAA,CAAA,MAAA,CAAA,IAAA,CAAA,CAAA,CAAA,MAAA,CAAA,IAAA,CAAA,CACA,QAAA,CAAA,WAAA,EAAA,CAAA,GAAA,CAAA,IAAA,CAAA,OAAA,CAAA,qBAAA,CAAA,CAAA,WAAA,CAAA,sBAAA,CAAA,MAAA,CAAA,IAAA,CAAA,CAAA,CAAA,MAAA,CAAA,IAAA,CAAA,CACA,QAAA,CAAA,cAAA,EAAA,CAAA,GAAA,CAAA,IAAA,CAAA,OAAA,CAAA,iBAAA,CAAA,CAAA,cAAA,CAAA,yBAAA,CAAA,MAAA,CAAA,IAAA,CAAA,CAAA,CAAA,MAAA,CAAA,IAAA,CAAA,C,qFAEA,iBAAgCC,GAAAA,GAAhC,QAAA,CAAM,QAAN,cAAM,QAAN,CAAkBD,SAAlB,cAAkBA,SAAlB,CAIA,QAAA,CAAA,0BAAA,CAAA,MAAA,CAA4D,CAAA,GAAA,CAAA,qBAAA,CAAA,eAAA,CAC1D;AACA;AACA,MAAO,CAAA,EAAA,IAAA,GAAA,aAAA,iGAAc,CAAA,qBAAA,CAAA,CAAA,eAAA,CAEnBE,MAAM,CAFa,OAAA,IAAA,IAAA,EAAA,eAAA,GAAA,IAAA,EAAA,CAAA,IAAA,EAAA,CAEnBA,eAFmB,WAAA,IAAA,IAAA,EAAA,qBAAA,GAAA,IAAA,EAAA,CAAA,qBAAA,CAEQ,uBAFtB,ggEAAP,CAkDD,CAEM,QAAA,CAAA,mBAAA,CAAA,GAAA,CAAmD,CACxD,GAAIC,GAAG,CAAP,QAAA,CAAkB,CAChB;AACAA,GAAG,CAAHA,QAAAA,CAAe,CAAA,EAAA,WAAA,GAAA,UAAA,EAAWA,GAAG,CAAd,QAAA,CAAyBC,WAAAA,GAAxCD,iBAAe,CAAfA,CAEA,GAAIE,KAAK,CAALA,OAAAA,CAAcF,GAAG,CAAHA,QAAAA,CAAlB,iBAAkBA,CAAdE,CAAJ,CAAoD,CAClD;AACAF,GAAG,CAAHA,QAAAA,CAAAA,iBAAAA,EAAAA,IAAAA,CAAqC,SAAA,CAAA,CAAA,CAAA,CAAU,CAC7C,GAAIG,CAAC,CAADA,CAAAA,CAAAA,cAAAA,EAAsBC,CAAC,CAADA,CAAAA,CAA1B,cAA0BA,CAA1B,CAA+C,MAAO,CAAP,CAAA,CAC/C,GAAID,CAAC,CAADA,CAAAA,CAAAA,cAAAA,EAAsBC,CAAC,CAADA,CAAAA,CAA1B,cAA0BA,CAA1B,CAA+C,MAAA,EAAA,CAC/C,MAAA,EAAA,CAHFJ,CAAAA,EAKD,CAED,GAAIE,KAAK,CAALA,OAAAA,CAAcF,GAAG,CAAHA,QAAAA,CAAlB,WAAIE,CAAJ,CAA6C,CAC3C;AACAF,GAAG,CAAHA,QAAAA,CAAAA,WAAAA,CAA2B,GAAG,CAAH,QAAA,CAAA,WAAA,CAAA,GAAA,CAA6BK,SAAAA,WAAW,CAAI,CACrEA,WAAW,CAAG,CAAA,EAAA,WAAA,GAAA,gBAAA,EAAA,WAAA,CAA8B,CAAA,WAAA,CAAA,SAAA,CAA5CA,UAA4C,CAA9B,CAAdA,CAEA,GAAIH,KAAK,CAALA,OAAAA,CAAcG,WAAW,CAA7B,WAA6B,CAAzBH,CAAJ,CAA6C,CAC3C;AACAG,WAAW,CAAXA,WAAW,CAAXA,CAAAA,IAAAA,CAA8B,SAAA,CAAA,CAAA,CAAA,CAAU,CACtC,GAAIF,CAAC,CAADA,CAAAA,CAAAA,cAAAA,EAAsBC,CAAC,CAADA,CAAAA,CAA1B,cAA0BA,CAA1B,CAA+C,MAAO,CAAP,CAAA,CAC/C,GAAID,CAAC,CAADA,CAAAA,CAAAA,cAAAA,EAAsBC,CAAC,CAADA,CAAAA,CAA1B,cAA0BA,CAA1B,CAA+C,MAAA,EAAA,CAC/C,MAAA,EAAA,CAHFC,CAAAA,EAKD,CACD,MAAA,CAAA,WAAA,CAXFL,CAA2B,CAA3BA,CAaD,CACF,CACD,MAAA,CAAA,GAAA,CACD,CAED,GAAMM,CAAAA,gBAAgB,CAAG,CACvBC,SAAS,CAAE,CAAA,EAAA,cAAA,GAAA,QAAA,EAAkB,CAC3BC,WAD2B,uBACb,CACZ,MAAA,EAAA,CAFyB,CAAA,CAI3B,IAJ2B,gBAId,mOACJ,CAAEC,QAAQ,CAAV,EAAA,CAAgBC,UAAU,CAAE,EAA5B,CADI,6DAJc,CAAA,CAO3B,KAP2B,iBAOb,8PAAE,CAPW,CAAlB,CADY,CAWvB;AACAC,QAAQ,CAAE,CAAA,EAAA,cAAA,GAAA,QAAA,EAAmC,CAC3CC,eAAe,CAD4B,IAAA,CAE3CJ,WAF2C,2BAEU,IAAzBM,CAAAA,mBAAyB,MAAvCD,UAAuC,CAAzBC,mBAAyB,CACnD,MAAOC,CAAAA,KAAAA,aAAAA,CAAAA,IAAAA,CAAAA,mBAAAA,CAAP,kCAAOA,CAAP,CAHyC,CAAA,CAK3C,IAL2C,eAK3C,QAL2C,CAK3C,MAL2C,CAKd,gPAEZC,CAAAA,QAAAA,GAAAA,QAAAA,CAAAA,wBAAAA,CAAb,QAAaA,CAFY,uHAIpBjB,MAAM,CAANA,UAAAA,CAAL,UAJyB,8EAQdkB,CAAAA,0BAA0B,CAAvC,MAAuC,CARZ,qIALc,CAAA,CAe3C,KAf2C,gBAe3C,QAf2C,OAeuB,kOAA5C,UAA4C,OAA5C,UAA4C,CAAhBC,UAAgB,OAA9BL,UAA8B,CAAhBK,UAAgB,KAChE,UADgE,0FAE1DF,CAAAA,QAAAA,GAAAA,QAAAA,CAAAA,yBAAAA,CAAAA,QAAAA,CAA6CG,mBAAmB,CAAtE,UAAsE,CAAhEH,CAF0D,8DAGjE,CAlB0C,CAAnC,CAZa,CAiCvB;AACAI,gBAAgB,CAAE,CAAA,EAAA,cAAA,GAAA,QAAA,EAAsC,CACtDR,eAAe,CADuC,IAAA,CAGtDJ,WAHsD,4BAGD,IAAzBM,CAAAA,mBAAyB,OAAvCD,UAAuC,CAAzBC,mBAAyB,CACnD,MAAOC,CAAAA,KAAAA,aAAAA,CAAAA,IAAAA,CAAAA,mBAAAA,CAAP,mBAAOA,CAAP,CAJoD,CAAA,CAMtD,IANsD,eAMtD,QANsD,CAMtD,MANsD,CAMzB,sOAEZM,QAAAA,GAAAA,UAFY,wBAEyBC,CAAAA,QAAQ,CAAA,QAAA,CAA1D,MAA0D,CAFjC,yEAEZD,mBAFY,yJAIpBtB,MAAM,CAANA,UAAAA,CAAL,UAJyB,uFAQ3B,EAR2B,8EANyB,CAAA,CAgBtD,KAhBsD,gBAgBtD,QAhBsD,OAgBY,kOAA5C,UAA4C,OAA5C,UAA4C,CAAhBmB,UAAgB,OAA9BL,UAA8B,CAAhBK,UAAgB,KAChE,UADgE,0FAE1DrB,CAAAA,SAAS,CAAA,QAAA,CAAWwB,QAAAA,GAAAA,UAAAA,CAAAA,sBAAAA,CAA1B,UAA0BA,CAAX,CAFiD,8DAGjE,CAnBqD,CAAtC,CAlCK,CAwDvB;AACAE,OAAO,CAAE,CAAA,EAAA,cAAA,GAAA,QAAA,EAAgC,CACvCX,eAAe,CADwB,IAAA,CAGvC,WAHuC,4BAGwB,2QAA3CC,UAA2C,CAA/B,WAA+B,kBAA/B,WAA+B,CAAhBK,UAAgB,kBAAhBA,UAAgB,yCAE9CM,CAAAA,QAAAA,GAAAA,OAAAA,CAAAA,6BAAAA,CAAb,WAAaA,CAF8C,uHAI3D,UAJ2D,uFAQ7D,EAR6D,6EAHxB,CAAA,CAcvC,IAduC,eAcvC,QAduC,CAcvC,MAduC,CAcV,gPAEZ,CAAA,QAAA,GAAA,SAAA,CAAA,qBAAA,CAAgC,CAAET,IAAI,CAAEN,QAAR,CAAhC,CAFY,uHAIpBV,MAAM,CAANA,UAAAA,CAAL,UAJyB,uFAQpB,CAAE0B,SAAS,CAAE,EAAb,CARoB,6EAdU,CAAA,CAwBvC,KAxBuC,gBAwBvC,QAxBuC,OAwB2B,kOAA5C,UAA4C,OAA5C,UAA4C,CAAhBP,UAAgB,OAA9BL,UAA8B,CAAhBK,UAAgB,KAChE,UADgE,0FAE1D,CAAA,EAAA,IAAA,GAAA,aAAA,EAAc,CAAEH,IAAI,CAAN,QAAA,CAAkBW,GAAG,CAAEhB,UAAvB,CAAd,CAF0D,8DAGjE,CA3BsC,CAAhC,CAzDc,CAuFvBiB,MAAM,CAAE,CAAA,EAAA,cAAA,GAAA,QAAA,EAAgC,CACtCf,eAAe,CADuB,IAAA,CAGtC,WAHsC,4BAGyB,gRAA3CC,UAA2C,CAA/B,WAA+B,kBAA/B,WAA+B,CAAhBK,UAAgB,kBAAhBA,UAAgB,2CAE9CU,CAAAA,QAAAA,GAAAA,MAAAA,CAAAA,4BAAAA,CAAb,WAAaA,CAF8C,4HAI3D,UAJ2D,0FAQ7D,EAR6D,+EAHzB,CAAA,CActC,IAdsC,eActC,QAdsC,OAce,4NAAhBV,UAAgB,OAA9BL,UAA8B,CAAhBK,UAAgB,2CAEpC,CAAA,QAAA,GAAA,SAAA,CAAA,qBAAA,CAAgC,CAAEH,IAAI,CAAEN,QAAR,CAAhC,CAFoC,4HAIjD,UAJiD,0FAQ5C,CAAEgB,SAAS,CAAE,EAAb,CAR4C,+EAdf,CAAA,CAwBtC,KAxBsC,gBAwBtC,QAxBsC,OAwB4B,uOAA5C,UAA4C,OAA5C,UAA4C,CAAhBP,UAAgB,OAA9BL,UAA8B,CAAhBK,UAAgB,KAChE,UADgE,6FAE1D,CAAA,EAAA,IAAA,GAAA,aAAA,EAAc,CAAEH,IAAI,CAAN,QAAA,CAAkBW,GAAG,CAAEhB,UAAvB,CAAd,CAF0D,gEAGjE,CA3BqC,CAAhC,CAvFe,CAqHvBmB,WAAW,CAAE,CAAA,EAAA,cAAA,GAAA,QAAA,EAAgC,CAC3CjB,eAAe,CAD4B,IAAA,CAG3C,WAH2C,6BAGoB,mRAA3CC,UAA2C,CAA/B,WAA+B,mBAA/B,WAA+B,CAAhBK,UAAgB,mBAAhBA,UAAgB,2CAE9C,CAAA,QAAA,GAAA,MAAA,CAAA,4BAAA,CAAA,WAAA,CAAiD,CAAEY,IAAI,CAAE,cAAR,CAAjD,CAF8C,4HAI3D,UAJ2D,0FAQ7D,EAR6D,+EAHpB,CAAA,CAa3C,IAb2C,eAa3C,QAb2C,CAa3C,MAb2C,CAad,uPAEZ,CAAA,QAAA,GAAA,SAAA,CAAA,qBAAA,CAAgC,CAAEf,IAAI,CAAEN,QAAR,CAAhC,CAFY,4HAIpBV,MAAM,CAANA,UAAAA,CAAL,UAJyB,0FAQpB,CAAE0B,SAAS,CAAE,EAAb,CARoB,+EAbc,CAAA,CAuB3C,KAvB2C,gBAuB3C,QAvB2C,QAuBuB,uOAA5C,UAA4C,QAA5C,UAA4C,CAAhBP,UAAgB,QAA9BL,UAA8B,CAAhBK,UAAgB,KAChE,UADgE,6FAE1D,CAAA,EAAA,IAAA,GAAA,aAAA,EAAc,CAAEH,IAAI,CAAN,QAAA,CAAkBW,GAAG,CAAEhB,UAAvB,CAAd,CAF0D,gEAGjE,CA1B0C,CAAhC,CArHU,CAkJvBqB,MAAM,CAAE,CAAA,EAAA,cAAA,GAAA,QAAA,EAAgC,CACtCnB,eAAe,CADuB,IAAA,CAGtC,WAHsC,6BAGyB,mRAA3CC,UAA2C,CAA/B,WAA+B,mBAA/B,WAA+B,CAAhBK,UAAgB,mBAAhBA,UAAgB,2CAE9Cc,CAAAA,QAAAA,GAAAA,MAAAA,CAAAA,4BAAAA,CAAb,WAAaA,CAF8C,4HAI3D,UAJ2D,0FAQ7D,EAR6D,+EAHzB,CAAA,CAatC,IAbsC,eAatC,QAbsC,CAatC,MAbsC,CAaT,4OACvBD,MADuB,CACS,CAAEN,SAAS,CAAE,EAAb,CADT,2CAKV,CAAA,QAAA,GAAA,SAAA,CAAA,qBAAA,CAAgC,CAC7CV,IAAI,CADyC,QAAA,CAE7CkB,QAAQ,qHAFqC,CAAhC,CALU,QAKzBF,MALyB,2GAUpBhC,MAAM,CAANA,UAAAA,CAAL,UAVyB,wDAe3B;AACA,GAAI,CAACgC,MAAM,CAANA,SAAAA,CAAL,CAAA,CAAyB,CACvBA,MAAM,CAANA,SAAAA,CAAAA,CAAAA,CAAAA,EAAAA,CACD,CACD,GAAI,EAAA,CAAA,mBAAA,CAACA,MAAM,CAANA,SAAAA,CAAD,CAAA,IAAA,IAAA,EAAA,mBAAA,GAAA,IAAA,EAAA,EAACA,mBAAAA,CAAL,aAAKA,CAAD,CAAJ,CAA0C,CACxCA,MAAM,CAANA,SAAAA,CAAAA,CAAAA,CAAAA,aAAAA,EAAAA,kCAAAA,CACD,CArB0B,kCAsB3B,MAtB2B,+EAbS,CAAA,CAqCtC,KArCsC,gBAqCtC,QArCsC,QAqC4B,uOAA5C,UAA4C,QAA5C,UAA4C,CAAhBb,UAAgB,QAA9BL,UAA8B,CAAhBK,UAAgB,KAChE,UADgE,6FAE1D,CAAA,EAAA,IAAA,GAAA,aAAA,EAAc,CAAEH,IAAI,CAAN,QAAA,CAAkBW,GAAG,CAAEhB,UAAvB,CAAd,CAF0D,gEAGjE,CAxCqC,CAAhC,CAlJe,CA6LvBwB,kBAAkB,CAAE,CAAA,EAAA,cAAA,GAAA,QAAA,EAAkC,CACpD1B,WADoD,6BACP,IAAjB2B,CAAAA,WAAiB,QAA/BtB,UAA+B,CAAjBsB,WAAiB,CAC3C,MAAOC,CAAAA,QAAAA,GAAAA,KAAAA,CAAAA,6BAAAA,CAAP,WAAOA,CAAP,CAFkD,CAAA,CAIpD,IAJoD,eAIpD,QAJoD,CAI/B,+OACZA,QAAAA,GAAAA,KAAAA,CAAAA,WAAAA,CAAP,QAAOA,CADY,iEAJ+B,CAAA,CAOpD,KAPoD,gBAOpD,QAPoD,QAOA,0NAAdC,QAAc,QAA5B3B,UAA4B,CAAd2B,QAAc,yBAC5CxC,CAAAA,SAAS,CAAA,QAAA,CAAf,QAAe,CADmC,gEAEnD,CATmD,CAAlC,CA7LG,CAyMvByC,cAAc,CAAE,CAAA,EAAA,cAAA,GAAA,QAAA,EAAkC,CAChD9B,WADgD,6BACH,IAAjB2B,CAAAA,WAAiB,QAA/BtB,UAA+B,CAAjBsB,WAAiB,CAC3C,MAAOC,CAAAA,QAAAA,GAAAA,KAAAA,CAAAA,yBAAAA,CAAP,WAAOA,CAAP,CAF8C,CAAA,CAIhD,IAJgD,eAIhD,QAJgD,CAI3B,+OACZA,QAAAA,GAAAA,KAAAA,CAAAA,WAAAA,CAAP,QAAOA,CADY,iEAJ2B,CAAA,CAOhD,KAPgD,gBAOhD,QAPgD,QAOI,0NAAdC,QAAc,QAA5B3B,UAA4B,CAAd2B,QAAc,yBAC5CxC,CAAAA,SAAS,CAAA,QAAA,CAAf,QAAe,CADmC,gEAEnD,CAT+C,CAAlC,CAzMO,CAqNvB0C,cAAc,CAAE,CAAA,EAAA,cAAA,GAAA,QAAA,EAAkC,CAChD/B,WADgD,6BACH,IAAjB2B,CAAAA,WAAiB,QAA/BtB,UAA+B,CAAjBsB,WAAiB,CAC3C,MAAOC,CAAAA,QAAAA,GAAAA,KAAAA,CAAAA,yBAAAA,CAAP,WAAOA,CAAP,CAF8C,CAAA,CAIhD,IAJgD,eAIhD,QAJgD,CAI3B,+OACZA,QAAAA,GAAAA,KAAAA,CAAAA,WAAAA,CAAP,QAAOA,CADY,iEAJ2B,CAAA,CAOhD,KAPgD,gBAOhD,QAPgD,QAOI,0NAAdC,QAAc,QAA5B3B,UAA4B,CAAd2B,QAAc,yBAC5CxC,CAAAA,SAAS,CAAA,QAAA,CAAf,QAAe,CADmC,gEAEnD,CAT+C,CAAlC,CArNO,CAiOvB2C,YAAY,CAAE,CAAA,EAAA,cAAA,GAAA,QAAA,EAAuC,CACnDhC,WADmD,6BACN,IAAjB2B,CAAAA,WAAiB,QAA/BtB,UAA+B,CAAjBsB,WAAiB,CAC3C,MAAOC,CAAAA,QAAAA,GAAAA,KAAAA,CAAAA,kBAAAA,CAAAA,WAAAA,CAAP,cAAOA,CAAP,CAFiD,CAAA,CAInD,IAJmD,eAInD,QAJmD,CAI9B,+OACZA,QAAAA,GAAAA,KAAAA,CAAAA,WAAAA,CAAP,QAAOA,CADY,iEAJ8B,CAAA,CAOnD,KAPmD,gBAOnD,QAPmD,QAOC,0NAAdC,QAAc,QAA5B3B,UAA4B,CAAd2B,QAAc,yBAC5CxC,CAAAA,SAAS,CAAA,QAAA,CAAf,QAAe,CADmC,gEAEnD,CATkD,CAAvC,CAjOS,CA6OvB4C,eAAe,CAAE,CAAA,EAAA,cAAA,GAAA,QAAA,EAAuC,CACtDjC,WADsD,6BACT,IAAjB2B,CAAAA,WAAiB,QAA/BtB,UAA+B,CAAjBsB,WAAiB,CAC3C,MAAOC,CAAAA,QAAAA,GAAAA,KAAAA,CAAAA,kBAAAA,CAAAA,WAAAA,CAAP,iBAAOA,CAAP,CAFoD,CAAA,CAItD,IAJsD,eAItD,QAJsD,CAIjC,+OACZA,QAAAA,GAAAA,KAAAA,CAAAA,WAAAA,CAAP,QAAOA,CADY,iEAJiC,CAAA,CAOtD,KAPsD,gBAOtD,QAPsD,QAOF,0NAAdC,QAAc,QAA5B3B,UAA4B,CAAd2B,QAAc,yBAC5CxC,CAAAA,SAAS,CAAA,QAAA,CAAf,QAAe,CADmC,gEAEnD,CATqD,CAAvC,CA7OM,CAAzB,CA4PO,QAAA,CAAA,mBAAA,CAAA,MAAA,CAMW,sEANX,EAMW,IAJhB,CAAA,SAIgB,QAJhB,SAIgB,CAFX6C,KAEW,4CAChB,MAAO,CAAA,EAAA,cAAA,GAAA,qBAAA,EAAA,MAAA,gCAA8C,KAA9C,MAELC,QAAQ,CAF2C,SAA9C,CAGLC,SAAS,CAAEA,SAAF,GAAA,IAAEA,EAAAA,SAAF,GAAA,IAAA,EAAEA,CAAF,SAAEA,CAAaC,0BAA0B,EAH7C,GAAP,CAKD,CAEM,QAAA,CAAA,0BAAA,EAAsC,CAC3C,MAAA,CAAA,gBAAA,CACD","sourcesContent":["import { promises } from 'fs';\nimport path from 'path';\n\nimport { ExportedConfig, ModConfig } from '../Plugin.types';\nimport { Colors, Manifest, Paths, Properties, Resources, Strings, Styles } from '../android';\nimport { AndroidManifest } from '../android/Manifest';\nimport { parseXMLAsync, writeXMLAsync } from '../utils/XML';\nimport { reverseSortString, sortObject, sortObjWithOrder } from '../utils/sortObject';\nimport { ForwardedBaseModOptions, provider, withGeneratedBaseMods } from './createBaseMod';\n\nconst { readFile, writeFile } = promises;\n\ntype AndroidModName = keyof Required<ModConfig>['android'];\n\nfunction getAndroidManifestTemplate(config: ExportedConfig) {\n  // Keep in sync with https://github.com/expo/expo/blob/master/templates/expo-template-bare-minimum/android/app/src/main/AndroidManifest.xml\n  // TODO: Read from remote template when possible\n  return parseXMLAsync(`\n  <manifest xmlns:android=\"http://schemas.android.com/apk/res/android\" package=\"${\n    config.android?.package ?? 'com.placeholder.appid'\n  }\">\n\n    <uses-permission android:name=\"android.permission.INTERNET\"/>\n    <!-- OPTIONAL PERMISSIONS, REMOVE WHATEVER YOU DO NOT NEED -->\n    <uses-permission android:name=\"android.permission.SYSTEM_ALERT_WINDOW\"/>\n    <!-- These require runtime permissions on M -->\n    <uses-permission android:name=\"android.permission.READ_EXTERNAL_STORAGE\"/>\n    <uses-permission android:name=\"android.permission.WRITE_EXTERNAL_STORAGE\"/>\n    <!-- END OPTIONAL PERMISSIONS -->\n\n    <queries>\n      <!-- Support checking for http(s) links via the Linking API -->\n      <intent>\n        <action android:name=\"android.intent.action.VIEW\" />\n        <category android:name=\"android.intent.category.BROWSABLE\" />\n        <data android:scheme=\"https\" />\n      </intent>\n    </queries>\n\n    <application\n      android:name=\".MainApplication\"\n      android:label=\"@string/app_name\"\n      android:icon=\"@mipmap/ic_launcher\"\n      android:roundIcon=\"@mipmap/ic_launcher_round\"\n      android:allowBackup=\"false\"\n      android:theme=\"@style/AppTheme\"\n      android:usesCleartextTraffic=\"true\"\n    >\n      <meta-data android:name=\"expo.modules.updates.EXPO_UPDATE_URL\" android:value=\"YOUR-APP-URL-HERE\"/>\n      <meta-data android:name=\"expo.modules.updates.EXPO_SDK_VERSION\" android:value=\"YOUR-APP-SDK-VERSION-HERE\"/>\n      <activity\n        android:name=\".MainActivity\"\n        android:label=\"@string/app_name\"\n        android:configChanges=\"keyboard|keyboardHidden|orientation|screenSize|uiMode\"\n        android:launchMode=\"singleTask\"\n        android:windowSoftInputMode=\"adjustResize\"\n        android:theme=\"@style/Theme.App.SplashScreen\"\n      >\n        <intent-filter>\n          <action android:name=\"android.intent.action.MAIN\"/>\n          <category android:name=\"android.intent.category.LAUNCHER\"/>\n        </intent-filter>\n      </activity>\n      <activity android:name=\"com.facebook.react.devsupport.DevSettingsActivity\"/>\n    </application>\n  </manifest>\n  `) as Promise<AndroidManifest>;\n}\n\nexport function sortAndroidManifest(obj: AndroidManifest) {\n  if (obj.manifest) {\n    // Reverse sort so application is last and permissions are first\n    obj.manifest = sortObject(obj.manifest, reverseSortString);\n\n    if (Array.isArray(obj.manifest['uses-permission'])) {\n      // Sort permissions alphabetically\n      obj.manifest['uses-permission'].sort((a, b) => {\n        if (a.$['android:name'] < b.$['android:name']) return -1;\n        if (a.$['android:name'] > b.$['android:name']) return 1;\n        return 0;\n      });\n    }\n\n    if (Array.isArray(obj.manifest.application)) {\n      // reverse sort applications so activity is towards the end and meta-data is towards the front.\n      obj.manifest.application = obj.manifest.application.map(application => {\n        application = sortObjWithOrder(application, ['meta-data', 'service', 'activity']);\n\n        if (Array.isArray(application['meta-data'])) {\n          // Sort metadata alphabetically\n          application['meta-data'].sort((a, b) => {\n            if (a.$['android:name'] < b.$['android:name']) return -1;\n            if (a.$['android:name'] > b.$['android:name']) return 1;\n            return 0;\n          });\n        }\n        return application;\n      });\n    }\n  }\n  return obj;\n}\n\nconst defaultProviders = {\n  dangerous: provider<unknown>({\n    getFilePath() {\n      return '';\n    },\n    async read() {\n      return { filePath: '', modResults: {} };\n    },\n    async write() {},\n  }),\n\n  // Append a rule to supply gradle.properties data to mods on `mods.android.gradleProperties`\n  manifest: provider<Manifest.AndroidManifest>({\n    isIntrospective: true,\n    getFilePath({ modRequest: { platformProjectRoot } }) {\n      return path.join(platformProjectRoot, 'app/src/main/AndroidManifest.xml');\n    },\n    async read(filePath, config) {\n      try {\n        return await Manifest.readAndroidManifestAsync(filePath);\n      } catch (error: any) {\n        if (!config.modRequest.introspect) {\n          throw error;\n        }\n      }\n      return await getAndroidManifestTemplate(config);\n    },\n    async write(filePath, { modResults, modRequest: { introspect } }) {\n      if (introspect) return;\n      await Manifest.writeAndroidManifestAsync(filePath, sortAndroidManifest(modResults));\n    },\n  }),\n\n  // Append a rule to supply gradle.properties data to mods on `mods.android.gradleProperties`\n  gradleProperties: provider<Properties.PropertiesItem[]>({\n    isIntrospective: true,\n\n    getFilePath({ modRequest: { platformProjectRoot } }) {\n      return path.join(platformProjectRoot, 'gradle.properties');\n    },\n    async read(filePath, config) {\n      try {\n        return await Properties.parsePropertiesFile(await readFile(filePath, 'utf8'));\n      } catch (error) {\n        if (!config.modRequest.introspect) {\n          throw error;\n        }\n      }\n      return [];\n    },\n    async write(filePath, { modResults, modRequest: { introspect } }) {\n      if (introspect) return;\n      await writeFile(filePath, Properties.propertiesListToString(modResults));\n    },\n  }),\n\n  // Append a rule to supply strings.xml data to mods on `mods.android.strings`\n  strings: provider<Resources.ResourceXML>({\n    isIntrospective: true,\n\n    async getFilePath({ modRequest: { projectRoot, introspect } }) {\n      try {\n        return await Strings.getProjectStringsXMLPathAsync(projectRoot);\n      } catch (error: any) {\n        if (!introspect) {\n          throw error;\n        }\n      }\n      return '';\n    },\n\n    async read(filePath, config) {\n      try {\n        return await Resources.readResourcesXMLAsync({ path: filePath });\n      } catch (error) {\n        if (!config.modRequest.introspect) {\n          throw error;\n        }\n      }\n      return { resources: {} };\n    },\n    async write(filePath, { modResults, modRequest: { introspect } }) {\n      if (introspect) return;\n      await writeXMLAsync({ path: filePath, xml: modResults });\n    },\n  }),\n\n  colors: provider<Resources.ResourceXML>({\n    isIntrospective: true,\n\n    async getFilePath({ modRequest: { projectRoot, introspect } }) {\n      try {\n        return await Colors.getProjectColorsXMLPathAsync(projectRoot);\n      } catch (error: any) {\n        if (!introspect) {\n          throw error;\n        }\n      }\n      return '';\n    },\n\n    async read(filePath, { modRequest: { introspect } }) {\n      try {\n        return await Resources.readResourcesXMLAsync({ path: filePath });\n      } catch (error: any) {\n        if (!introspect) {\n          throw error;\n        }\n      }\n      return { resources: {} };\n    },\n    async write(filePath, { modResults, modRequest: { introspect } }) {\n      if (introspect) return;\n      await writeXMLAsync({ path: filePath, xml: modResults });\n    },\n  }),\n\n  colorsNight: provider<Resources.ResourceXML>({\n    isIntrospective: true,\n\n    async getFilePath({ modRequest: { projectRoot, introspect } }) {\n      try {\n        return await Colors.getProjectColorsXMLPathAsync(projectRoot, { kind: 'values-night' });\n      } catch (error: any) {\n        if (!introspect) {\n          throw error;\n        }\n      }\n      return '';\n    },\n    async read(filePath, config) {\n      try {\n        return await Resources.readResourcesXMLAsync({ path: filePath });\n      } catch (error: any) {\n        if (!config.modRequest.introspect) {\n          throw error;\n        }\n      }\n      return { resources: {} };\n    },\n    async write(filePath, { modResults, modRequest: { introspect } }) {\n      if (introspect) return;\n      await writeXMLAsync({ path: filePath, xml: modResults });\n    },\n  }),\n\n  styles: provider<Resources.ResourceXML>({\n    isIntrospective: true,\n\n    async getFilePath({ modRequest: { projectRoot, introspect } }) {\n      try {\n        return await Styles.getProjectStylesXMLPathAsync(projectRoot);\n      } catch (error: any) {\n        if (!introspect) {\n          throw error;\n        }\n      }\n      return '';\n    },\n    async read(filePath, config) {\n      let styles: Resources.ResourceXML = { resources: {} };\n\n      try {\n        // Adds support for `tools:x`\n        styles = await Resources.readResourcesXMLAsync({\n          path: filePath,\n          fallback: `<?xml version=\"1.0\" encoding=\"utf-8\"?><resources xmlns:tools=\"http://schemas.android.com/tools\"></resources>`,\n        });\n      } catch (error: any) {\n        if (!config.modRequest.introspect) {\n          throw error;\n        }\n      }\n\n      // Ensure support for tools is added...\n      if (!styles.resources.$) {\n        styles.resources.$ = {};\n      }\n      if (!styles.resources.$?.['xmlns:tools']) {\n        styles.resources.$['xmlns:tools'] = 'http://schemas.android.com/tools';\n      }\n      return styles;\n    },\n    async write(filePath, { modResults, modRequest: { introspect } }) {\n      if (introspect) return;\n      await writeXMLAsync({ path: filePath, xml: modResults });\n    },\n  }),\n\n  projectBuildGradle: provider<Paths.GradleProjectFile>({\n    getFilePath({ modRequest: { projectRoot } }) {\n      return Paths.getProjectBuildGradleFilePath(projectRoot);\n    },\n    async read(filePath) {\n      return Paths.getFileInfo(filePath);\n    },\n    async write(filePath, { modResults: { contents } }) {\n      await writeFile(filePath, contents);\n    },\n  }),\n\n  settingsGradle: provider<Paths.GradleProjectFile>({\n    getFilePath({ modRequest: { projectRoot } }) {\n      return Paths.getSettingsGradleFilePath(projectRoot);\n    },\n    async read(filePath) {\n      return Paths.getFileInfo(filePath);\n    },\n    async write(filePath, { modResults: { contents } }) {\n      await writeFile(filePath, contents);\n    },\n  }),\n\n  appBuildGradle: provider<Paths.GradleProjectFile>({\n    getFilePath({ modRequest: { projectRoot } }) {\n      return Paths.getAppBuildGradleFilePath(projectRoot);\n    },\n    async read(filePath) {\n      return Paths.getFileInfo(filePath);\n    },\n    async write(filePath, { modResults: { contents } }) {\n      await writeFile(filePath, contents);\n    },\n  }),\n\n  mainActivity: provider<Paths.ApplicationProjectFile>({\n    getFilePath({ modRequest: { projectRoot } }) {\n      return Paths.getProjectFilePath(projectRoot, 'MainActivity');\n    },\n    async read(filePath) {\n      return Paths.getFileInfo(filePath);\n    },\n    async write(filePath, { modResults: { contents } }) {\n      await writeFile(filePath, contents);\n    },\n  }),\n\n  mainApplication: provider<Paths.ApplicationProjectFile>({\n    getFilePath({ modRequest: { projectRoot } }) {\n      return Paths.getProjectFilePath(projectRoot, 'MainApplication');\n    },\n    async read(filePath) {\n      return Paths.getFileInfo(filePath);\n    },\n    async write(filePath, { modResults: { contents } }) {\n      await writeFile(filePath, contents);\n    },\n  }),\n};\n\ntype AndroidDefaultProviders = typeof defaultProviders;\n\nexport function withAndroidBaseMods(\n  config: ExportedConfig,\n  {\n    providers,\n    ...props\n  }: ForwardedBaseModOptions & { providers?: Partial<AndroidDefaultProviders> } = {}\n): ExportedConfig {\n  return withGeneratedBaseMods<AndroidModName>(config, {\n    ...props,\n    platform: 'android',\n    providers: providers ?? getAndroidModFileProviders(),\n  });\n}\n\nexport function getAndroidModFileProviders() {\n  return defaultProviders;\n}\n"]},"metadata":{},"sourceType":"script"}