{"ast":null,"code":"\"use strict\";var _slicedToArray=require(\"/Users/fernandorojo/Developer/messing/rea-tree/node_modules/next/dist/compiled/@babel/runtime/helpers/slicedToArray\");var _toConsumableArray=require(\"/Users/fernandorojo/Developer/messing/rea-tree/node_modules/next/dist/compiled/@babel/runtime/helpers/toConsumableArray\");var _defineProperty=require(\"/Users/fernandorojo/Developer/messing/rea-tree/node_modules/next/dist/compiled/@babel/runtime/helpers/defineProperty\");function ownKeys(object,enumerableOnly){var keys=Object.keys(object);if(Object.getOwnPropertySymbols){var symbols=Object.getOwnPropertySymbols(object);enumerableOnly&&(symbols=symbols.filter(function(sym){return Object.getOwnPropertyDescriptor(object,sym).enumerable;})),keys.push.apply(keys,symbols);}return keys;}function _objectSpread(target){for(var i=1;i<arguments.length;i++){var source=null!=arguments[i]?arguments[i]:{};i%2?ownKeys(Object(source),!0).forEach(function(key){_defineProperty(target,key,source[key]);}):Object.getOwnPropertyDescriptors?Object.defineProperties(target,Object.getOwnPropertyDescriptors(source)):ownKeys(Object(source)).forEach(function(key){Object.defineProperty(target,key,Object.getOwnPropertyDescriptor(source,key));});}return target;}Object.defineProperty(exports,\"__esModule\",{value:true});exports.reverseSortString=void 0;exports.sortObjWithOrder=sortObjWithOrder;exports.sortObject=sortObject;exports.sortWithOrder=sortWithOrder;function sortObject(obj,compareFn){return Object.keys(obj).sort(compareFn).reduce(function(acc,key){return _objectSpread(_objectSpread({},acc),{},_defineProperty({},key,obj[key]));},{});}function sortObjWithOrder(obj,order){var sorted=sortWithOrder(Object.keys(obj),order);return sorted.reduce(function(acc,key){return _objectSpread(_objectSpread({},acc),{},_defineProperty({},key,obj[key]));},{});}function sortWithOrder(obj,order){var groupOrder=_toConsumableArray(new Set(order.concat(obj)));var sorted=[];while(groupOrder.length){var key=groupOrder.shift();var index=obj.indexOf(key);if(index>-1){var _obj$splice=obj.splice(index,1),_obj$splice2=_slicedToArray(_obj$splice,1),item=_obj$splice2[0];sorted.push(item);}}return sorted;}var reverseSortString=function reverseSortString(a,b){if(a<b)return 1;if(a>b)return-1;return 0;};exports.reverseSortString=reverseSortString;","map":{"version":3,"sources":["../../src/utils/sortObject.ts"],"names":["obj","sorted","sortWithOrder","Object","groupOrder","order","key","index","reverseSortString","a"],"mappings":"w5CAAO,QAAA,CAAA,UAAA,CAAA,GAAA,CAAA,SAAA,CAGF,CACH,MAAO,CAAA,MAAM,CAAN,IAAA,CAAA,GAAA,EAAA,IAAA,CAAA,SAAA,EAAA,MAAA,CAGH,SAAA,GAAA,CAAA,GAAA,wCAAe,GAAf,wBAEE,GAFF,CAESA,GAAG,CAAA,GAAA,CAFZ,IAHG,CAAP,EAAO,CAAP,CASD,CAEM,QAAA,CAAA,gBAAA,CAAA,GAAA,CAAA,KAAA,CAGF,CACH,GAAMC,CAAAA,MAAM,CAAGC,aAAa,CAACC,MAAM,CAANA,IAAAA,CAAD,GAACA,CAAD,CAA5B,KAA4B,CAA5B,CAEA,MAAO,CAAA,MAAM,CAAN,MAAA,CACL,SAAA,GAAA,CAAA,GAAA,wCAAe,GAAf,wBAEE,GAFF,CAESH,GAAG,CAAA,GAAA,CAFZ,IADK,CAAP,EAAO,CAAP,CAOD,CAEM,QAAA,CAAA,aAAA,CAAA,GAAA,CAAA,KAAA,CAAiE,CACtE,GAAMI,CAAAA,UAAU,oBAAO,GAAA,CAAA,GAAA,CAAQC,KAAK,CAALA,MAAAA,CAA/B,GAA+BA,CAAR,CAAP,CAAhB,CACA,GAAMJ,CAAAA,MAAgB,CAAtB,EAAA,CAEA,MAAOG,UAAU,CAAjB,MAAA,CAA0B,CACxB,GAAME,CAAAA,GAAG,CAAGF,UAAU,CAAtB,KAAYA,EAAZ,CACA,GAAMG,CAAAA,KAAK,CAAGP,GAAG,CAAHA,OAAAA,CAAd,GAAcA,CAAd,CACA,GAAIO,KAAK,CAAG,CAAZ,CAAA,CAAgB,CACd,gBAAeP,GAAG,CAAHA,MAAAA,CAAAA,KAAAA,CAAf,CAAeA,CAAf,4CAAM,IAAN,iBACAC,MAAM,CAANA,IAAAA,CAAAA,IAAAA,EACD,CACF,CAED,MAAA,CAAA,MAAA,CACD,CAEM,GAAMO,CAAAA,iBAAiB,CAAG,QAApBA,CAAAA,iBAAoB,CAAA,CAAA,CAAA,CAAA,CAA0B,CACzD,GAAIC,CAAC,CAAL,CAAA,CAAW,MAAA,EAAA,CACX,GAAIA,CAAC,CAAL,CAAA,CAAW,MAAO,CAAP,CAAA,CACX,MAAA,EAAA,CAHK,CAAA,C","sourcesContent":["export function sortObject<T extends Record<string, any> = Record<string, any>>(\n  obj: T,\n  compareFn?: (a: string, b: string) => number\n): T {\n  return Object.keys(obj)\n    .sort(compareFn)\n    .reduce(\n      (acc, key) => ({\n        ...acc,\n        [key]: obj[key],\n      }),\n      {}\n    ) as T;\n}\n\nexport function sortObjWithOrder<T extends Record<string, any> = Record<string, any>>(\n  obj: T,\n  order: string[]\n): T {\n  const sorted = sortWithOrder(Object.keys(obj), order);\n\n  return sorted.reduce(\n    (acc, key) => ({\n      ...acc,\n      [key]: obj[key],\n    }),\n    {}\n  ) as T;\n}\n\nexport function sortWithOrder(obj: string[], order: string[]): string[] {\n  const groupOrder = [...new Set(order.concat(obj))];\n  const sorted: string[] = [];\n\n  while (groupOrder.length) {\n    const key = groupOrder.shift()!;\n    const index = obj.indexOf(key);\n    if (index > -1) {\n      const [item] = obj.splice(index, 1);\n      sorted.push(item);\n    }\n  }\n\n  return sorted;\n}\n\nexport const reverseSortString = (a: string, b: string) => {\n  if (a < b) return 1;\n  if (a > b) return -1;\n  return 0;\n};\n"]},"metadata":{},"sourceType":"script"}