{"ast":null,"code":"'use strict';// we can't use path.win32.isAbsolute because it also matches paths starting with a forward slash\nvar matchNativeWin32Path=/^[A-Z]:[/\\\\]|^\\\\\\\\/i;function urlToRequest(url,root){// Do not rewrite an empty url\nif(url===''){return'';}var moduleRequestRegex=/^[^?]*~/;var request;if(matchNativeWin32Path.test(url)){// absolute windows path, keep it\nrequest=url;}else if(root!==undefined&&root!==false&&/^\\//.test(url)){// if root is set and the url is root-relative\nswitch(typeof root){// 1. root is a string: root is prefixed to the url\ncase'string':// special case: `~` roots convert to module request\nif(moduleRequestRegex.test(root)){request=root.replace(/([^~/])$/,'$1/')+url.slice(1);}else{request=root+url;}break;// 2. root is `true`: absolute paths are allowed\n//    *nix only, windows-style absolute paths are always allowed as they doesn't start with a `/`\ncase'boolean':request=url;break;default:throw new Error(\"Unexpected parameters to loader-utils 'urlToRequest': url = \"+url+', root = '+root+'.');}}else if(/^\\.\\.?\\//.test(url)){// A relative url stays\nrequest=url;}else{// every other url is threaded like a relative url\nrequest='./'+url;}// A `~` makes the url an module\nif(moduleRequestRegex.test(request)){request=request.replace(moduleRequestRegex,'');}return request;}module.exports=urlToRequest;","map":{"version":3,"names":["matchNativeWin32Path","urlToRequest","url","root","moduleRequestRegex","request","test","undefined","replace","slice","Error","module","exports"],"sources":["/Users/fernandorojo/Developer/messing/rea-tree/node_modules/@expo/webpack-config/node_modules/babel-loader/node_modules/loader-utils/lib/urlToRequest.js"],"sourcesContent":["'use strict';\n\n// we can't use path.win32.isAbsolute because it also matches paths starting with a forward slash\nconst matchNativeWin32Path = /^[A-Z]:[/\\\\]|^\\\\\\\\/i;\n\nfunction urlToRequest(url, root) {\n  // Do not rewrite an empty url\n  if (url === '') {\n    return '';\n  }\n\n  const moduleRequestRegex = /^[^?]*~/;\n  let request;\n\n  if (matchNativeWin32Path.test(url)) {\n    // absolute windows path, keep it\n    request = url;\n  } else if (root !== undefined && root !== false && /^\\//.test(url)) {\n    // if root is set and the url is root-relative\n    switch (typeof root) {\n      // 1. root is a string: root is prefixed to the url\n      case 'string':\n        // special case: `~` roots convert to module request\n        if (moduleRequestRegex.test(root)) {\n          request = root.replace(/([^~/])$/, '$1/') + url.slice(1);\n        } else {\n          request = root + url;\n        }\n        break;\n      // 2. root is `true`: absolute paths are allowed\n      //    *nix only, windows-style absolute paths are always allowed as they doesn't start with a `/`\n      case 'boolean':\n        request = url;\n        break;\n      default:\n        throw new Error(\n          \"Unexpected parameters to loader-utils 'urlToRequest': url = \" +\n            url +\n            ', root = ' +\n            root +\n            '.'\n        );\n    }\n  } else if (/^\\.\\.?\\//.test(url)) {\n    // A relative url stays\n    request = url;\n  } else {\n    // every other url is threaded like a relative url\n    request = './' + url;\n  }\n\n  // A `~` makes the url an module\n  if (moduleRequestRegex.test(request)) {\n    request = request.replace(moduleRequestRegex, '');\n  }\n\n  return request;\n}\n\nmodule.exports = urlToRequest;\n"],"mappings":"AAAA,aAEA;AACA,GAAMA,CAAAA,oBAAoB,CAAG,qBAA7B,CAEA,QAASC,CAAAA,YAAT,CAAsBC,GAAtB,CAA2BC,IAA3B,CAAiC,CAC/B;AACA,GAAID,GAAG,GAAK,EAAZ,CAAgB,CACd,MAAO,EAAP,CACD,CAED,GAAME,CAAAA,kBAAkB,CAAG,SAA3B,CACA,GAAIC,CAAAA,OAAJ,CAEA,GAAIL,oBAAoB,CAACM,IAArB,CAA0BJ,GAA1B,CAAJ,CAAoC,CAClC;AACAG,OAAO,CAAGH,GAAV,CACD,CAHD,IAGO,IAAIC,IAAI,GAAKI,SAAT,EAAsBJ,IAAI,GAAK,KAA/B,EAAwC,MAAMG,IAAN,CAAWJ,GAAX,CAA5C,CAA6D,CAClE;AACA,OAAQ,MAAOC,CAAAA,IAAf,EACE;AACA,IAAK,QAAL,CACE;AACA,GAAIC,kBAAkB,CAACE,IAAnB,CAAwBH,IAAxB,CAAJ,CAAmC,CACjCE,OAAO,CAAGF,IAAI,CAACK,OAAL,CAAa,UAAb,CAAyB,KAAzB,EAAkCN,GAAG,CAACO,KAAJ,CAAU,CAAV,CAA5C,CACD,CAFD,IAEO,CACLJ,OAAO,CAAGF,IAAI,CAAGD,GAAjB,CACD,CACD,MACF;AACA;AACA,IAAK,SAAL,CACEG,OAAO,CAAGH,GAAV,CACA,MACF,QACE,KAAM,IAAIQ,CAAAA,KAAJ,CACJ,+DACER,GADF,CAEE,WAFF,CAGEC,IAHF,CAIE,GALE,CAAN,CAhBJ,CAwBD,CA1BM,IA0BA,IAAI,WAAWG,IAAX,CAAgBJ,GAAhB,CAAJ,CAA0B,CAC/B;AACAG,OAAO,CAAGH,GAAV,CACD,CAHM,IAGA,CACL;AACAG,OAAO,CAAG,KAAOH,GAAjB,CACD,CAED;AACA,GAAIE,kBAAkB,CAACE,IAAnB,CAAwBD,OAAxB,CAAJ,CAAsC,CACpCA,OAAO,CAAGA,OAAO,CAACG,OAAR,CAAgBJ,kBAAhB,CAAoC,EAApC,CAAV,CACD,CAED,MAAOC,CAAAA,OAAP,CACD,CAEDM,MAAM,CAACC,OAAP,CAAiBX,YAAjB"},"metadata":{},"sourceType":"script"}