{"ast":null,"code":"\"use strict\";var _toConsumableArray=require(\"/Users/fernandorojo/Developer/messing/rea-tree/node_modules/next/dist/compiled/@babel/runtime/helpers/toConsumableArray\");var _toArray=require(\"/Users/fernandorojo/Developer/messing/rea-tree/node_modules/next/dist/compiled/@babel/runtime/helpers/toArray\");var _slicedToArray=require(\"/Users/fernandorojo/Developer/messing/rea-tree/node_modules/next/dist/compiled/@babel/runtime/helpers/slicedToArray\");var _classCallCheck=require(\"/Users/fernandorojo/Developer/messing/rea-tree/node_modules/next/dist/compiled/@babel/runtime/helpers/classCallCheck\");var _createClass=require(\"/Users/fernandorojo/Developer/messing/rea-tree/node_modules/next/dist/compiled/@babel/runtime/helpers/createClass\");var _assertThisInitialized=require(\"/Users/fernandorojo/Developer/messing/rea-tree/node_modules/next/dist/compiled/@babel/runtime/helpers/assertThisInitialized\");var _inherits=require(\"/Users/fernandorojo/Developer/messing/rea-tree/node_modules/next/dist/compiled/@babel/runtime/helpers/inherits\");var _possibleConstructorReturn=require(\"/Users/fernandorojo/Developer/messing/rea-tree/node_modules/next/dist/compiled/@babel/runtime/helpers/possibleConstructorReturn\");var _getPrototypeOf=require(\"/Users/fernandorojo/Developer/messing/rea-tree/node_modules/next/dist/compiled/@babel/runtime/helpers/getPrototypeOf\");var _wrapNativeSuper=require(\"/Users/fernandorojo/Developer/messing/rea-tree/node_modules/next/dist/compiled/@babel/runtime/helpers/wrapNativeSuper\");function _createSuper(Derived){var hasNativeReflectConstruct=_isNativeReflectConstruct();return function _createSuperInternal(){var Super=_getPrototypeOf(Derived),result;if(hasNativeReflectConstruct){var NewTarget=_getPrototypeOf(this).constructor;result=Reflect.construct(Super,arguments,NewTarget);}else{result=Super.apply(this,arguments);}return _possibleConstructorReturn(this,result);};}function _isNativeReflectConstruct(){if(typeof Reflect===\"undefined\"||!Reflect.construct)return false;if(Reflect.construct.sham)return false;if(typeof Proxy===\"function\")return true;try{Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],function(){}));return true;}catch(e){return false;}}Object.defineProperty(exports,\"__esModule\",{value:true});exports[\"default\"]=void 0;var _require=require('./util/hints'),stringHints=_require.stringHints,numberHints=_require.numberHints;/** @typedef {import(\"json-schema\").JSONSchema6} JSONSchema6 */ /** @typedef {import(\"json-schema\").JSONSchema7} JSONSchema7 */ /** @typedef {import(\"./validate\").Schema} Schema */ /** @typedef {import(\"./validate\").ValidationErrorConfiguration} ValidationErrorConfiguration */ /** @typedef {import(\"./validate\").PostFormatter} PostFormatter */ /** @typedef {import(\"./validate\").SchemaUtilErrorObject} SchemaUtilErrorObject */ /** @enum {number} */var SPECIFICITY={type:1,not:1,oneOf:1,anyOf:1,\"if\":1,\"enum\":1,\"const\":1,\"instanceof\":1,required:2,pattern:2,patternRequired:2,format:2,formatMinimum:2,formatMaximum:2,minimum:2,exclusiveMinimum:2,maximum:2,exclusiveMaximum:2,multipleOf:2,uniqueItems:2,contains:2,minLength:2,maxLength:2,minItems:2,maxItems:2,minProperties:2,maxProperties:2,dependencies:2,propertyNames:2,additionalItems:2,additionalProperties:2,absolutePath:2};/**\n *\n * @param {Array<SchemaUtilErrorObject>} array\n * @param {(item: SchemaUtilErrorObject) => number} fn\n * @returns {Array<SchemaUtilErrorObject>}\n */function filterMax(array,fn){var evaluatedMax=array.reduce(function(max,item){return Math.max(max,fn(item));},0);return array.filter(function(item){return fn(item)===evaluatedMax;});}/**\n *\n * @param {Array<SchemaUtilErrorObject>} children\n * @returns {Array<SchemaUtilErrorObject>}\n */function filterChildren(children){var newChildren=children;newChildren=filterMax(newChildren,/**\n   *\n   * @param {SchemaUtilErrorObject} error\n   * @returns {number}\n   */function(error){return error.dataPath?error.dataPath.length:0;});newChildren=filterMax(newChildren,/**\n   * @param {SchemaUtilErrorObject} error\n   * @returns {number}\n   */function(error){return SPECIFICITY[/** @type {keyof typeof SPECIFICITY} */error.keyword]||2;});return newChildren;}/**\n * Find all children errors\n * @param {Array<SchemaUtilErrorObject>} children\n * @param {Array<string>} schemaPaths\n * @return {number} returns index of first child\n */function findAllChildren(children,schemaPaths){var i=children.length-1;var predicate=/**\n   * @param {string} schemaPath\n   * @returns {boolean}\n   */function predicate(schemaPath){return children[i].schemaPath.indexOf(schemaPath)!==0;};while(i>-1&&!schemaPaths.every(predicate)){if(children[i].keyword==='anyOf'||children[i].keyword==='oneOf'){var refs=extractRefs(children[i]);var childrenStart=findAllChildren(children.slice(0,i),refs.concat(children[i].schemaPath));i=childrenStart-1;}else{i-=1;}}return i+1;}/**\n * Extracts all refs from schema\n * @param {SchemaUtilErrorObject} error\n * @return {Array<string>}\n */function extractRefs(error){var schema=error.schema;if(!Array.isArray(schema)){return[];}return schema.map(function(_ref){var $ref=_ref.$ref;return $ref;}).filter(function(s){return s;});}/**\n * Groups children by their first level parent (assuming that error is root)\n * @param {Array<SchemaUtilErrorObject>} children\n * @return {Array<SchemaUtilErrorObject>}\n */function groupChildrenByFirstChild(children){var result=[];var i=children.length-1;while(i>0){var child=children[i];if(child.keyword==='anyOf'||child.keyword==='oneOf'){var refs=extractRefs(child);var childrenStart=findAllChildren(children.slice(0,i),refs.concat(child.schemaPath));if(childrenStart!==i){result.push(Object.assign({},child,{children:children.slice(childrenStart,i)}));i=childrenStart;}else{result.push(child);}}else{result.push(child);}i-=1;}if(i===0){result.push(children[i]);}return result.reverse();}/**\n * @param {string} str\n * @param {string} prefix\n * @returns {string}\n */function indent(str,prefix){return str.replace(/\\n(?!$)/g,\"\\n\".concat(prefix));}/**\n * @param {Schema} schema\n * @returns {schema is (Schema & {not: Schema})}\n */function hasNotInSchema(schema){return!!schema.not;}/**\n * @param {Schema} schema\n * @return {Schema}\n */function findFirstTypedSchema(schema){if(hasNotInSchema(schema)){return findFirstTypedSchema(schema.not);}return schema;}/**\n * @param {Schema} schema\n * @return {boolean}\n */function canApplyNot(schema){var typedSchema=findFirstTypedSchema(schema);return likeNumber(typedSchema)||likeInteger(typedSchema)||likeString(typedSchema)||likeNull(typedSchema)||likeBoolean(typedSchema);}/**\n * @param {any} maybeObj\n * @returns {boolean}\n */function isObject(maybeObj){return typeof maybeObj==='object'&&maybeObj!==null;}/**\n * @param {Schema} schema\n * @returns {boolean}\n */function likeNumber(schema){return schema.type==='number'||typeof schema.minimum!=='undefined'||typeof schema.exclusiveMinimum!=='undefined'||typeof schema.maximum!=='undefined'||typeof schema.exclusiveMaximum!=='undefined'||typeof schema.multipleOf!=='undefined';}/**\n * @param {Schema} schema\n * @returns {boolean}\n */function likeInteger(schema){return schema.type==='integer'||typeof schema.minimum!=='undefined'||typeof schema.exclusiveMinimum!=='undefined'||typeof schema.maximum!=='undefined'||typeof schema.exclusiveMaximum!=='undefined'||typeof schema.multipleOf!=='undefined';}/**\n * @param {Schema} schema\n * @returns {boolean}\n */function likeString(schema){return schema.type==='string'||typeof schema.minLength!=='undefined'||typeof schema.maxLength!=='undefined'||typeof schema.pattern!=='undefined'||typeof schema.format!=='undefined'||typeof schema.formatMinimum!=='undefined'||typeof schema.formatMaximum!=='undefined';}/**\n * @param {Schema} schema\n * @returns {boolean}\n */function likeBoolean(schema){return schema.type==='boolean';}/**\n * @param {Schema} schema\n * @returns {boolean}\n */function likeArray(schema){return schema.type==='array'||typeof schema.minItems==='number'||typeof schema.maxItems==='number'||typeof schema.uniqueItems!=='undefined'||typeof schema.items!=='undefined'||typeof schema.additionalItems!=='undefined'||typeof schema.contains!=='undefined';}/**\n * @param {Schema & {patternRequired?: Array<string>}} schema\n * @returns {boolean}\n */function likeObject(schema){return schema.type==='object'||typeof schema.minProperties!=='undefined'||typeof schema.maxProperties!=='undefined'||typeof schema.required!=='undefined'||typeof schema.properties!=='undefined'||typeof schema.patternProperties!=='undefined'||typeof schema.additionalProperties!=='undefined'||typeof schema.dependencies!=='undefined'||typeof schema.propertyNames!=='undefined'||typeof schema.patternRequired!=='undefined';}/**\n * @param {Schema} schema\n * @returns {boolean}\n */function likeNull(schema){return schema.type==='null';}/**\n * @param {string} type\n * @returns {string}\n */function getArticle(type){if(/^[aeiou]/i.test(type)){return'an';}return'a';}/**\n * @param {Schema=} schema\n * @returns {string}\n */function getSchemaNonTypes(schema){if(!schema){return'';}if(!schema.type){if(likeNumber(schema)||likeInteger(schema)){return' | should be any non-number';}if(likeString(schema)){return' | should be any non-string';}if(likeArray(schema)){return' | should be any non-array';}if(likeObject(schema)){return' | should be any non-object';}}return'';}/**\n * @param {Array<string>} hints\n * @returns {string}\n */function formatHints(hints){return hints.length>0?\"(\".concat(hints.join(', '),\")\"):'';}/**\n * @param {Schema} schema\n * @param {boolean} logic\n * @returns {string[]}\n */function getHints(schema,logic){if(likeNumber(schema)||likeInteger(schema)){return numberHints(schema,logic);}else if(likeString(schema)){return stringHints(schema,logic);}return[];}var ValidationError=/*#__PURE__*/function(_Error){_inherits(ValidationError,_Error);var _super=_createSuper(ValidationError);/**\n   * @param {Array<SchemaUtilErrorObject>} errors\n   * @param {Schema} schema\n   * @param {ValidationErrorConfiguration} configuration\n   */function ValidationError(errors,schema){var _this;var configuration=arguments.length>2&&arguments[2]!==undefined?arguments[2]:{};_classCallCheck(this,ValidationError);_this=_super.call(this);/** @type {string} */_this.name='ValidationError';/** @type {Array<SchemaUtilErrorObject>} */_this.errors=errors;/** @type {Schema} */_this.schema=schema;var headerNameFromSchema;var baseDataPathFromSchema;if(schema.title&&(!configuration.name||!configuration.baseDataPath)){var splittedTitleFromSchema=schema.title.match(/^(.+) (.+)$/);if(splittedTitleFromSchema){if(!configuration.name){var _splittedTitleFromSch=_slicedToArray(splittedTitleFromSchema,2);headerNameFromSchema=_splittedTitleFromSch[1];}if(!configuration.baseDataPath){var _splittedTitleFromSch2=_slicedToArray(splittedTitleFromSchema,3);baseDataPathFromSchema=_splittedTitleFromSch2[2];}}}/** @type {string} */_this.headerName=configuration.name||headerNameFromSchema||'Object';/** @type {string} */_this.baseDataPath=configuration.baseDataPath||baseDataPathFromSchema||'configuration';/** @type {PostFormatter | null} */_this.postFormatter=configuration.postFormatter||null;var header=\"Invalid \".concat(_this.baseDataPath,\" object. \").concat(_this.headerName,\" has been initialized using \").concat(getArticle(_this.baseDataPath),\" \").concat(_this.baseDataPath,\" object that does not match the API schema.\\n\");/** @type {string} */_this.message=\"\".concat(header).concat(_this.formatValidationErrors(errors));Error.captureStackTrace(_assertThisInitialized(_this),_this.constructor);return _this;}/**\n   * @param {string} path\n   * @returns {Schema}\n   */_createClass(ValidationError,[{key:\"getSchemaPart\",value:function getSchemaPart(path){var newPath=path.split('/');var schemaPart=this.schema;for(var i=1;i<newPath.length;i++){var inner=schemaPart[/** @type {keyof Schema} */newPath[i]];if(!inner){break;}schemaPart=inner;}return schemaPart;}/**\n   * @param {Schema} schema\n   * @param {boolean} logic\n   * @param {Array<Object>} prevSchemas\n   * @returns {string}\n   */},{key:\"formatSchema\",value:function formatSchema(schema){var _this2=this;var logic=arguments.length>1&&arguments[1]!==undefined?arguments[1]:true;var prevSchemas=arguments.length>2&&arguments[2]!==undefined?arguments[2]:[];var newLogic=logic;var formatInnerSchema=/**\n     *\n     * @param {Object} innerSchema\n     * @param {boolean=} addSelf\n     * @returns {string}\n     */function formatInnerSchema(innerSchema,addSelf){if(!addSelf){return _this2.formatSchema(innerSchema,newLogic,prevSchemas);}if(prevSchemas.includes(innerSchema)){return'(recursive)';}return _this2.formatSchema(innerSchema,newLogic,prevSchemas.concat(schema));};if(hasNotInSchema(schema)&&!likeObject(schema)){if(canApplyNot(schema.not)){newLogic=!logic;return formatInnerSchema(schema.not);}var needApplyLogicHere=!schema.not.not;var prefix=logic?'':'non ';newLogic=!logic;return needApplyLogicHere?prefix+formatInnerSchema(schema.not):formatInnerSchema(schema.not);}if(/** @type {Schema & {instanceof: string | Array<string>}} */schema[\"instanceof\"]){var value=/** @type {Schema & {instanceof: string | Array<string>}} */schema[\"instanceof\"];var values=!Array.isArray(value)?[value]:value;return values.map(/**\n       * @param {string} item\n       * @returns {string}\n       */function(item){return item==='Function'?'function':item;}).join(' | ');}if(schema[\"enum\"]){return(/** @type {Array<any>} */schema[\"enum\"].map(function(item){return JSON.stringify(item);}).join(' | '));}if(typeof schema[\"const\"]!=='undefined'){return JSON.stringify(schema[\"const\"]);}if(schema.oneOf){return(/** @type {Array<Schema>} */schema.oneOf.map(function(item){return formatInnerSchema(item,true);}).join(' | '));}if(schema.anyOf){return(/** @type {Array<Schema>} */schema.anyOf.map(function(item){return formatInnerSchema(item,true);}).join(' | '));}if(schema.allOf){return(/** @type {Array<Schema>} */schema.allOf.map(function(item){return formatInnerSchema(item,true);}).join(' & '));}if(/** @type {JSONSchema7} */schema[\"if\"]){var ifValue=/** @type {JSONSchema7} */schema[\"if\"],thenValue=/** @type {JSONSchema7} */schema.then,elseValue=/** @type {JSONSchema7} */schema[\"else\"];return\"\".concat(ifValue?\"if \".concat(formatInnerSchema(ifValue)):'').concat(thenValue?\" then \".concat(formatInnerSchema(thenValue)):'').concat(elseValue?\" else \".concat(formatInnerSchema(elseValue)):'');}if(schema.$ref){return formatInnerSchema(this.getSchemaPart(schema.$ref),true);}if(likeNumber(schema)||likeInteger(schema)){var _getHints=getHints(schema,logic),_getHints2=_toArray(_getHints),type=_getHints2[0],hints=_getHints2.slice(1);var str=\"\".concat(type).concat(hints.length>0?\" \".concat(formatHints(hints)):'');return logic?str:hints.length>0?\"non-\".concat(type,\" | \").concat(str):\"non-\".concat(type);}if(likeString(schema)){var _getHints3=getHints(schema,logic),_getHints4=_toArray(_getHints3),_type=_getHints4[0],_hints=_getHints4.slice(1);var _str=\"\".concat(_type).concat(_hints.length>0?\" \".concat(formatHints(_hints)):'');return logic?_str:_str==='string'?'non-string':\"non-string | \".concat(_str);}if(likeBoolean(schema)){return\"\".concat(logic?'':'non-',\"boolean\");}if(likeArray(schema)){// not logic already applied in formatValidationError\nnewLogic=true;var _hints2=[];if(typeof schema.minItems==='number'){_hints2.push(\"should not have fewer than \".concat(schema.minItems,\" item\").concat(schema.minItems>1?'s':''));}if(typeof schema.maxItems==='number'){_hints2.push(\"should not have more than \".concat(schema.maxItems,\" item\").concat(schema.maxItems>1?'s':''));}if(schema.uniqueItems){_hints2.push('should not have duplicate items');}var hasAdditionalItems=typeof schema.additionalItems==='undefined'||Boolean(schema.additionalItems);var items='';if(schema.items){if(Array.isArray(schema.items)&&schema.items.length>0){items=\"\".concat(/** @type {Array<Schema>} */schema.items.map(function(item){return formatInnerSchema(item);}).join(', '));if(hasAdditionalItems){if(schema.additionalItems&&isObject(schema.additionalItems)&&Object.keys(schema.additionalItems).length>0){_hints2.push(\"additional items should be \".concat(formatInnerSchema(schema.additionalItems)));}}}else if(schema.items&&Object.keys(schema.items).length>0){// \"additionalItems\" is ignored\nitems=\"\".concat(formatInnerSchema(schema.items));}else{// Fallback for empty `items` value\nitems='any';}}else{// \"additionalItems\" is ignored\nitems='any';}if(schema.contains&&Object.keys(schema.contains).length>0){_hints2.push(\"should contains at least one \".concat(this.formatSchema(schema.contains),\" item\"));}return\"[\".concat(items).concat(hasAdditionalItems?', ...':'',\"]\").concat(_hints2.length>0?\" (\".concat(_hints2.join(', '),\")\"):'');}if(likeObject(schema)){// not logic already applied in formatValidationError\nnewLogic=true;var _hints3=[];if(typeof schema.minProperties==='number'){_hints3.push(\"should not have fewer than \".concat(schema.minProperties,\" \").concat(schema.minProperties>1?'properties':'property'));}if(typeof schema.maxProperties==='number'){_hints3.push(\"should not have more than \".concat(schema.maxProperties,\" \").concat(schema.minProperties&&schema.minProperties>1?'properties':'property'));}if(schema.patternProperties&&Object.keys(schema.patternProperties).length>0){var patternProperties=Object.keys(schema.patternProperties);_hints3.push(\"additional property names should match pattern\".concat(patternProperties.length>1?'s':'',\" \").concat(patternProperties.map(function(pattern){return JSON.stringify(pattern);}).join(' | ')));}var properties=schema.properties?Object.keys(schema.properties):[];var required=schema.required?schema.required:[];var allProperties=_toConsumableArray(new Set(/** @type {Array<string>} */[].concat(required).concat(properties)));var objectStructure=allProperties.map(function(property){var isRequired=required.includes(property);// Some properties need quotes, maybe we should add check\n// Maybe we should output type of property (`foo: string`), but it is looks very unreadable\nreturn\"\".concat(property).concat(isRequired?'':'?');}).concat(typeof schema.additionalProperties==='undefined'||Boolean(schema.additionalProperties)?schema.additionalProperties&&isObject(schema.additionalProperties)?[\"<key>: \".concat(formatInnerSchema(schema.additionalProperties))]:['…']:[]).join(', ');var dependencies=/** @type {Schema & {patternRequired?: Array<string>;}} */schema.dependencies,propertyNames=/** @type {Schema & {patternRequired?: Array<string>;}} */schema.propertyNames,patternRequired=/** @type {Schema & {patternRequired?: Array<string>;}} */schema.patternRequired;if(dependencies){Object.keys(dependencies).forEach(function(dependencyName){var dependency=dependencies[dependencyName];if(Array.isArray(dependency)){_hints3.push(\"should have \".concat(dependency.length>1?'properties':'property',\" \").concat(dependency.map(function(dep){return\"'\".concat(dep,\"'\");}).join(', '),\" when property '\").concat(dependencyName,\"' is present\"));}else{_hints3.push(\"should be valid according to the schema \".concat(formatInnerSchema(dependency),\" when property '\").concat(dependencyName,\"' is present\"));}});}if(propertyNames&&Object.keys(propertyNames).length>0){_hints3.push(\"each property name should match format \".concat(JSON.stringify(schema.propertyNames.format)));}if(patternRequired&&patternRequired.length>0){_hints3.push(\"should have property matching pattern \".concat(patternRequired.map(/**\n         * @param {string} item\n         * @returns {string}\n         */function(item){return JSON.stringify(item);})));}return\"object {\".concat(objectStructure?\" \".concat(objectStructure,\" \"):'',\"}\").concat(_hints3.length>0?\" (\".concat(_hints3.join(', '),\")\"):'');}if(likeNull(schema)){return\"\".concat(logic?'':'non-',\"null\");}if(Array.isArray(schema.type)){// not logic already applied in formatValidationError\nreturn\"\".concat(schema.type.join(' | '));}// Fallback for unknown keywords\n// not logic already applied in formatValidationError\n/* istanbul ignore next */return JSON.stringify(schema,null,2);}/**\n   * @param {Schema=} schemaPart\n   * @param {(boolean | Array<string>)=} additionalPath\n   * @param {boolean=} needDot\n   * @param {boolean=} logic\n   * @returns {string}\n   */},{key:\"getSchemaPartText\",value:function getSchemaPartText(schemaPart,additionalPath){var needDot=arguments.length>2&&arguments[2]!==undefined?arguments[2]:false;var logic=arguments.length>3&&arguments[3]!==undefined?arguments[3]:true;if(!schemaPart){return'';}if(Array.isArray(additionalPath)){for(var i=0;i<additionalPath.length;i++){/** @type {Schema | undefined} */var inner=schemaPart[/** @type {keyof Schema} */additionalPath[i]];if(inner){// eslint-disable-next-line no-param-reassign\nschemaPart=inner;}else{break;}}}while(schemaPart.$ref){// eslint-disable-next-line no-param-reassign\nschemaPart=this.getSchemaPart(schemaPart.$ref);}var schemaText=\"\".concat(this.formatSchema(schemaPart,logic)).concat(needDot?'.':'');if(schemaPart.description){schemaText+=\"\\n-> \".concat(schemaPart.description);}return schemaText;}/**\n   * @param {Schema=} schemaPart\n   * @returns {string}\n   */},{key:\"getSchemaPartDescription\",value:function getSchemaPartDescription(schemaPart){if(!schemaPart){return'';}while(schemaPart.$ref){// eslint-disable-next-line no-param-reassign\nschemaPart=this.getSchemaPart(schemaPart.$ref);}if(schemaPart.description){return\"\\n-> \".concat(schemaPart.description);}return'';}/**\n   * @param {SchemaUtilErrorObject} error\n   * @returns {string}\n   */},{key:\"formatValidationError\",value:function formatValidationError(error){var _this3=this;var keyword=error.keyword,errorDataPath=error.dataPath;var dataPath=\"\".concat(this.baseDataPath).concat(errorDataPath);switch(keyword){case'type':{var parentSchema=error.parentSchema,params=error.params;// eslint-disable-next-line default-case\nswitch(/** @type {import(\"ajv\").TypeParams} */params.type){case'number':return\"\".concat(dataPath,\" should be a \").concat(this.getSchemaPartText(parentSchema,false,true));case'integer':return\"\".concat(dataPath,\" should be a \").concat(this.getSchemaPartText(parentSchema,false,true));case'string':return\"\".concat(dataPath,\" should be a \").concat(this.getSchemaPartText(parentSchema,false,true));case'boolean':return\"\".concat(dataPath,\" should be a \").concat(this.getSchemaPartText(parentSchema,false,true));case'array':return\"\".concat(dataPath,\" should be an array:\\n\").concat(this.getSchemaPartText(parentSchema));case'object':return\"\".concat(dataPath,\" should be an object:\\n\").concat(this.getSchemaPartText(parentSchema));case'null':return\"\".concat(dataPath,\" should be a \").concat(this.getSchemaPartText(parentSchema,false,true));default:return\"\".concat(dataPath,\" should be:\\n\").concat(this.getSchemaPartText(parentSchema));}}case'instanceof':{var _parentSchema=error.parentSchema;return\"\".concat(dataPath,\" should be an instance of \").concat(this.getSchemaPartText(_parentSchema,false,true));}case'pattern':{var _params=error.params,_parentSchema2=error.parentSchema;var pattern=/** @type {import(\"ajv\").PatternParams} */_params.pattern;return\"\".concat(dataPath,\" should match pattern \").concat(JSON.stringify(pattern)).concat(getSchemaNonTypes(_parentSchema2),\".\").concat(this.getSchemaPartDescription(_parentSchema2));}case'format':{var _params2=error.params,_parentSchema3=error.parentSchema;var format=/** @type {import(\"ajv\").FormatParams} */_params2.format;return\"\".concat(dataPath,\" should match format \").concat(JSON.stringify(format)).concat(getSchemaNonTypes(_parentSchema3),\".\").concat(this.getSchemaPartDescription(_parentSchema3));}case'formatMinimum':case'formatMaximum':{var _params3=error.params,_parentSchema4=error.parentSchema;var comparison=/** @type {import(\"ajv\").ComparisonParams} */_params3.comparison,limit=/** @type {import(\"ajv\").ComparisonParams} */_params3.limit;return\"\".concat(dataPath,\" should be \").concat(comparison,\" \").concat(JSON.stringify(limit)).concat(getSchemaNonTypes(_parentSchema4),\".\").concat(this.getSchemaPartDescription(_parentSchema4));}case'minimum':case'maximum':case'exclusiveMinimum':case'exclusiveMaximum':{var _parentSchema5=error.parentSchema,_params4=error.params;var _comparison=/** @type {import(\"ajv\").ComparisonParams} */_params4.comparison,_limit=/** @type {import(\"ajv\").ComparisonParams} */_params4.limit;var _getHints5=getHints(/** @type {Schema} */_parentSchema5,true),_getHints6=_toArray(_getHints5),hints=_getHints6.slice(1);if(hints.length===0){hints.push(\"should be \".concat(_comparison,\" \").concat(_limit));}return\"\".concat(dataPath,\" \").concat(hints.join(' ')).concat(getSchemaNonTypes(_parentSchema5),\".\").concat(this.getSchemaPartDescription(_parentSchema5));}case'multipleOf':{var _params5=error.params,_parentSchema6=error.parentSchema;var multipleOf=/** @type {import(\"ajv\").MultipleOfParams} */_params5.multipleOf;return\"\".concat(dataPath,\" should be multiple of \").concat(multipleOf).concat(getSchemaNonTypes(_parentSchema6),\".\").concat(this.getSchemaPartDescription(_parentSchema6));}case'patternRequired':{var _params6=error.params,_parentSchema7=error.parentSchema;var missingPattern=/** @type {import(\"ajv\").PatternRequiredParams} */_params6.missingPattern;return\"\".concat(dataPath,\" should have property matching pattern \").concat(JSON.stringify(missingPattern)).concat(getSchemaNonTypes(_parentSchema7),\".\").concat(this.getSchemaPartDescription(_parentSchema7));}case'minLength':{var _params7=error.params,_parentSchema8=error.parentSchema;var _limit2=/** @type {import(\"ajv\").LimitParams} */_params7.limit;if(_limit2===1){return\"\".concat(dataPath,\" should be an non-empty string\").concat(getSchemaNonTypes(_parentSchema8),\".\").concat(this.getSchemaPartDescription(_parentSchema8));}var length=_limit2-1;return\"\".concat(dataPath,\" should be longer than \").concat(length,\" character\").concat(length>1?'s':'').concat(getSchemaNonTypes(_parentSchema8),\".\").concat(this.getSchemaPartDescription(_parentSchema8));}case'minItems':{var _params8=error.params,_parentSchema9=error.parentSchema;var _limit3=/** @type {import(\"ajv\").LimitParams} */_params8.limit;if(_limit3===1){return\"\".concat(dataPath,\" should be an non-empty array\").concat(getSchemaNonTypes(_parentSchema9),\".\").concat(this.getSchemaPartDescription(_parentSchema9));}return\"\".concat(dataPath,\" should not have fewer than \").concat(_limit3,\" items\").concat(getSchemaNonTypes(_parentSchema9),\".\").concat(this.getSchemaPartDescription(_parentSchema9));}case'minProperties':{var _params9=error.params,_parentSchema10=error.parentSchema;var _limit4=/** @type {import(\"ajv\").LimitParams} */_params9.limit;if(_limit4===1){return\"\".concat(dataPath,\" should be an non-empty object\").concat(getSchemaNonTypes(_parentSchema10),\".\").concat(this.getSchemaPartDescription(_parentSchema10));}return\"\".concat(dataPath,\" should not have fewer than \").concat(_limit4,\" properties\").concat(getSchemaNonTypes(_parentSchema10),\".\").concat(this.getSchemaPartDescription(_parentSchema10));}case'maxLength':{var _params10=error.params,_parentSchema11=error.parentSchema;var _limit5=/** @type {import(\"ajv\").LimitParams} */_params10.limit;var max=_limit5+1;return\"\".concat(dataPath,\" should be shorter than \").concat(max,\" character\").concat(max>1?'s':'').concat(getSchemaNonTypes(_parentSchema11),\".\").concat(this.getSchemaPartDescription(_parentSchema11));}case'maxItems':{var _params11=error.params,_parentSchema12=error.parentSchema;var _limit6=/** @type {import(\"ajv\").LimitParams} */_params11.limit;return\"\".concat(dataPath,\" should not have more than \").concat(_limit6,\" items\").concat(getSchemaNonTypes(_parentSchema12),\".\").concat(this.getSchemaPartDescription(_parentSchema12));}case'maxProperties':{var _params12=error.params,_parentSchema13=error.parentSchema;var _limit7=/** @type {import(\"ajv\").LimitParams} */_params12.limit;return\"\".concat(dataPath,\" should not have more than \").concat(_limit7,\" properties\").concat(getSchemaNonTypes(_parentSchema13),\".\").concat(this.getSchemaPartDescription(_parentSchema13));}case'uniqueItems':{var _params13=error.params,_parentSchema14=error.parentSchema;var i=/** @type {import(\"ajv\").UniqueItemsParams} */_params13.i;return\"\".concat(dataPath,\" should not contain the item '\").concat(error.data[i],\"' twice\").concat(getSchemaNonTypes(_parentSchema14),\".\").concat(this.getSchemaPartDescription(_parentSchema14));}case'additionalItems':{var _params14=error.params,_parentSchema15=error.parentSchema;var _limit8=/** @type {import(\"ajv\").LimitParams} */_params14.limit;return\"\".concat(dataPath,\" should not have more than \").concat(_limit8,\" items\").concat(getSchemaNonTypes(_parentSchema15),\". These items are valid:\\n\").concat(this.getSchemaPartText(_parentSchema15));}case'contains':{var _parentSchema16=error.parentSchema;return\"\".concat(dataPath,\" should contains at least one \").concat(this.getSchemaPartText(_parentSchema16,['contains']),\" item\").concat(getSchemaNonTypes(_parentSchema16),\".\");}case'required':{var _parentSchema17=error.parentSchema,_params15=error.params;var missingProperty=/** @type {import(\"ajv\").DependenciesParams} */_params15.missingProperty.replace(/^\\./,'');var hasProperty=_parentSchema17&&Boolean(/** @type {Schema} */_parentSchema17.properties&&/** @type {Schema} */_parentSchema17.properties[missingProperty]);return\"\".concat(dataPath,\" misses the property '\").concat(missingProperty,\"'\").concat(getSchemaNonTypes(_parentSchema17),\".\").concat(hasProperty?\" Should be:\\n\".concat(this.getSchemaPartText(_parentSchema17,['properties',missingProperty])):this.getSchemaPartDescription(_parentSchema17));}case'additionalProperties':{var _params16=error.params,_parentSchema18=error.parentSchema;var additionalProperty=/** @type {import(\"ajv\").AdditionalPropertiesParams} */_params16.additionalProperty;return\"\".concat(dataPath,\" has an unknown property '\").concat(additionalProperty,\"'\").concat(getSchemaNonTypes(_parentSchema18),\". These properties are valid:\\n\").concat(this.getSchemaPartText(_parentSchema18));}case'dependencies':{var _params17=error.params,_parentSchema19=error.parentSchema;var property=/** @type {import(\"ajv\").DependenciesParams} */_params17.property,deps=/** @type {import(\"ajv\").DependenciesParams} */_params17.deps;var dependencies=deps.split(',').map(/**\n           * @param {string} dep\n           * @returns {string}\n           */function(dep){return\"'\".concat(dep.trim(),\"'\");}).join(', ');return\"\".concat(dataPath,\" should have properties \").concat(dependencies,\" when property '\").concat(property,\"' is present\").concat(getSchemaNonTypes(_parentSchema19),\".\").concat(this.getSchemaPartDescription(_parentSchema19));}case'propertyNames':{var _params18=error.params,_parentSchema20=error.parentSchema,schema=error.schema;var propertyName=/** @type {import(\"ajv\").PropertyNamesParams} */_params18.propertyName;return\"\".concat(dataPath,\" property name '\").concat(propertyName,\"' is invalid\").concat(getSchemaNonTypes(_parentSchema20),\". Property names should be match format \").concat(JSON.stringify(schema.format),\".\").concat(this.getSchemaPartDescription(_parentSchema20));}case'enum':{var _parentSchema21=error.parentSchema;if(_parentSchema21&&/** @type {Schema} */_parentSchema21[\"enum\"]&&/** @type {Schema} */_parentSchema21[\"enum\"].length===1){return\"\".concat(dataPath,\" should be \").concat(this.getSchemaPartText(_parentSchema21,false,true));}return\"\".concat(dataPath,\" should be one of these:\\n\").concat(this.getSchemaPartText(_parentSchema21));}case'const':{var _parentSchema22=error.parentSchema;return\"\".concat(dataPath,\" should be equal to constant \").concat(this.getSchemaPartText(_parentSchema22,false,true));}case'not':{var postfix=likeObject(/** @type {Schema} */error.parentSchema)?\"\\n\".concat(this.getSchemaPartText(error.parentSchema)):'';var schemaOutput=this.getSchemaPartText(error.schema,false,false,false);if(canApplyNot(error.schema)){return\"\".concat(dataPath,\" should be any \").concat(schemaOutput).concat(postfix,\".\");}var _schema=error.schema,_parentSchema23=error.parentSchema;return\"\".concat(dataPath,\" should not be \").concat(this.getSchemaPartText(_schema,false,true)).concat(_parentSchema23&&likeObject(_parentSchema23)?\"\\n\".concat(this.getSchemaPartText(_parentSchema23)):'');}case'oneOf':case'anyOf':{var _parentSchema24=error.parentSchema,children=error.children;if(children&&children.length>0){if(error.schema.length===1){var lastChild=children[children.length-1];var remainingChildren=children.slice(0,children.length-1);return this.formatValidationError(Object.assign({},lastChild,{children:remainingChildren,parentSchema:Object.assign({},_parentSchema24,lastChild.parentSchema)}));}var filteredChildren=filterChildren(children);if(filteredChildren.length===1){return this.formatValidationError(filteredChildren[0]);}filteredChildren=groupChildrenByFirstChild(filteredChildren);return\"\".concat(dataPath,\" should be one of these:\\n\").concat(this.getSchemaPartText(_parentSchema24),\"\\nDetails:\\n\").concat(filteredChildren.map(/**\n             * @param {SchemaUtilErrorObject} nestedError\n             * @returns {string}\n             */function(nestedError){return\" * \".concat(indent(_this3.formatValidationError(nestedError),'   '));}).join('\\n'));}return\"\".concat(dataPath,\" should be one of these:\\n\").concat(this.getSchemaPartText(_parentSchema24));}case'if':{var _params19=error.params,_parentSchema25=error.parentSchema;var failingKeyword=/** @type {import(\"ajv\").IfParams} */_params19.failingKeyword;return\"\".concat(dataPath,\" should match \\\"\").concat(failingKeyword,\"\\\" schema:\\n\").concat(this.getSchemaPartText(_parentSchema25,[failingKeyword]));}case'absolutePath':{var message=error.message,_parentSchema26=error.parentSchema;return\"\".concat(dataPath,\": \").concat(message).concat(this.getSchemaPartDescription(_parentSchema26));}/* istanbul ignore next */default:{var _message=error.message,_parentSchema27=error.parentSchema;var ErrorInJSON=JSON.stringify(error,null,2);// For `custom`, `false schema`, `$ref` keywords\n// Fallback for unknown keywords\nreturn\"\".concat(dataPath,\" \").concat(_message,\" (\").concat(ErrorInJSON,\").\\n\").concat(this.getSchemaPartText(_parentSchema27,false));}}}/**\n   * @param {Array<SchemaUtilErrorObject>} errors\n   * @returns {string}\n   */},{key:\"formatValidationErrors\",value:function formatValidationErrors(errors){var _this4=this;return errors.map(function(error){var formattedError=_this4.formatValidationError(error);if(_this4.postFormatter){formattedError=_this4.postFormatter(formattedError,error);}return\" - \".concat(indent(formattedError,'   '));}).join('\\n');}}]);return ValidationError;}(/*#__PURE__*/_wrapNativeSuper(Error));var _default=ValidationError;exports[\"default\"]=_default;","map":{"version":3,"names":["Object","defineProperty","exports","value","require","stringHints","numberHints","SPECIFICITY","type","not","oneOf","anyOf","required","pattern","patternRequired","format","formatMinimum","formatMaximum","minimum","exclusiveMinimum","maximum","exclusiveMaximum","multipleOf","uniqueItems","contains","minLength","maxLength","minItems","maxItems","minProperties","maxProperties","dependencies","propertyNames","additionalItems","additionalProperties","absolutePath","filterMax","array","fn","evaluatedMax","reduce","max","item","Math","filter","filterChildren","children","newChildren","error","dataPath","length","keyword","findAllChildren","schemaPaths","i","predicate","schemaPath","indexOf","every","refs","extractRefs","childrenStart","slice","concat","schema","Array","isArray","map","$ref","s","groupChildrenByFirstChild","result","child","push","assign","reverse","indent","str","prefix","replace","hasNotInSchema","findFirstTypedSchema","canApplyNot","typedSchema","likeNumber","likeInteger","likeString","likeNull","likeBoolean","isObject","maybeObj","likeArray","items","likeObject","properties","patternProperties","getArticle","test","getSchemaNonTypes","formatHints","hints","join","getHints","logic","ValidationError","errors","configuration","name","headerNameFromSchema","baseDataPathFromSchema","title","baseDataPath","splittedTitleFromSchema","match","headerName","postFormatter","header","message","formatValidationErrors","Error","captureStackTrace","constructor","path","newPath","split","schemaPart","inner","prevSchemas","newLogic","formatInnerSchema","innerSchema","addSelf","formatSchema","includes","needApplyLogicHere","values","JSON","stringify","allOf","ifValue","thenValue","then","elseValue","getSchemaPart","hasAdditionalItems","Boolean","keys","allProperties","Set","objectStructure","property","isRequired","forEach","dependencyName","dependency","dep","additionalPath","needDot","schemaText","description","errorDataPath","parentSchema","params","getSchemaPartText","getSchemaPartDescription","comparison","limit","missingPattern","data","missingProperty","hasProperty","additionalProperty","deps","trim","propertyName","postfix","schemaOutput","lastChild","remainingChildren","formatValidationError","filteredChildren","nestedError","failingKeyword","ErrorInJSON","formattedError","_default"],"sources":["/Users/fernandorojo/Developer/messing/rea-tree/node_modules/@expo/webpack-config/node_modules/babel-loader/node_modules/schema-utils/dist/ValidationError.js"],"sourcesContent":["\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nconst {\n  stringHints,\n  numberHints\n} = require('./util/hints');\n/** @typedef {import(\"json-schema\").JSONSchema6} JSONSchema6 */\n\n/** @typedef {import(\"json-schema\").JSONSchema7} JSONSchema7 */\n\n/** @typedef {import(\"./validate\").Schema} Schema */\n\n/** @typedef {import(\"./validate\").ValidationErrorConfiguration} ValidationErrorConfiguration */\n\n/** @typedef {import(\"./validate\").PostFormatter} PostFormatter */\n\n/** @typedef {import(\"./validate\").SchemaUtilErrorObject} SchemaUtilErrorObject */\n\n/** @enum {number} */\n\n\nconst SPECIFICITY = {\n  type: 1,\n  not: 1,\n  oneOf: 1,\n  anyOf: 1,\n  if: 1,\n  enum: 1,\n  const: 1,\n  instanceof: 1,\n  required: 2,\n  pattern: 2,\n  patternRequired: 2,\n  format: 2,\n  formatMinimum: 2,\n  formatMaximum: 2,\n  minimum: 2,\n  exclusiveMinimum: 2,\n  maximum: 2,\n  exclusiveMaximum: 2,\n  multipleOf: 2,\n  uniqueItems: 2,\n  contains: 2,\n  minLength: 2,\n  maxLength: 2,\n  minItems: 2,\n  maxItems: 2,\n  minProperties: 2,\n  maxProperties: 2,\n  dependencies: 2,\n  propertyNames: 2,\n  additionalItems: 2,\n  additionalProperties: 2,\n  absolutePath: 2\n};\n/**\n *\n * @param {Array<SchemaUtilErrorObject>} array\n * @param {(item: SchemaUtilErrorObject) => number} fn\n * @returns {Array<SchemaUtilErrorObject>}\n */\n\nfunction filterMax(array, fn) {\n  const evaluatedMax = array.reduce((max, item) => Math.max(max, fn(item)), 0);\n  return array.filter(item => fn(item) === evaluatedMax);\n}\n/**\n *\n * @param {Array<SchemaUtilErrorObject>} children\n * @returns {Array<SchemaUtilErrorObject>}\n */\n\n\nfunction filterChildren(children) {\n  let newChildren = children;\n  newChildren = filterMax(newChildren,\n  /**\n   *\n   * @param {SchemaUtilErrorObject} error\n   * @returns {number}\n   */\n  error => error.dataPath ? error.dataPath.length : 0);\n  newChildren = filterMax(newChildren,\n  /**\n   * @param {SchemaUtilErrorObject} error\n   * @returns {number}\n   */\n  error => SPECIFICITY[\n  /** @type {keyof typeof SPECIFICITY} */\n  error.keyword] || 2);\n  return newChildren;\n}\n/**\n * Find all children errors\n * @param {Array<SchemaUtilErrorObject>} children\n * @param {Array<string>} schemaPaths\n * @return {number} returns index of first child\n */\n\n\nfunction findAllChildren(children, schemaPaths) {\n  let i = children.length - 1;\n\n  const predicate =\n  /**\n   * @param {string} schemaPath\n   * @returns {boolean}\n   */\n  schemaPath => children[i].schemaPath.indexOf(schemaPath) !== 0;\n\n  while (i > -1 && !schemaPaths.every(predicate)) {\n    if (children[i].keyword === 'anyOf' || children[i].keyword === 'oneOf') {\n      const refs = extractRefs(children[i]);\n      const childrenStart = findAllChildren(children.slice(0, i), refs.concat(children[i].schemaPath));\n      i = childrenStart - 1;\n    } else {\n      i -= 1;\n    }\n  }\n\n  return i + 1;\n}\n/**\n * Extracts all refs from schema\n * @param {SchemaUtilErrorObject} error\n * @return {Array<string>}\n */\n\n\nfunction extractRefs(error) {\n  const {\n    schema\n  } = error;\n\n  if (!Array.isArray(schema)) {\n    return [];\n  }\n\n  return schema.map(({\n    $ref\n  }) => $ref).filter(s => s);\n}\n/**\n * Groups children by their first level parent (assuming that error is root)\n * @param {Array<SchemaUtilErrorObject>} children\n * @return {Array<SchemaUtilErrorObject>}\n */\n\n\nfunction groupChildrenByFirstChild(children) {\n  const result = [];\n  let i = children.length - 1;\n\n  while (i > 0) {\n    const child = children[i];\n\n    if (child.keyword === 'anyOf' || child.keyword === 'oneOf') {\n      const refs = extractRefs(child);\n      const childrenStart = findAllChildren(children.slice(0, i), refs.concat(child.schemaPath));\n\n      if (childrenStart !== i) {\n        result.push(Object.assign({}, child, {\n          children: children.slice(childrenStart, i)\n        }));\n        i = childrenStart;\n      } else {\n        result.push(child);\n      }\n    } else {\n      result.push(child);\n    }\n\n    i -= 1;\n  }\n\n  if (i === 0) {\n    result.push(children[i]);\n  }\n\n  return result.reverse();\n}\n/**\n * @param {string} str\n * @param {string} prefix\n * @returns {string}\n */\n\n\nfunction indent(str, prefix) {\n  return str.replace(/\\n(?!$)/g, `\\n${prefix}`);\n}\n/**\n * @param {Schema} schema\n * @returns {schema is (Schema & {not: Schema})}\n */\n\n\nfunction hasNotInSchema(schema) {\n  return !!schema.not;\n}\n/**\n * @param {Schema} schema\n * @return {Schema}\n */\n\n\nfunction findFirstTypedSchema(schema) {\n  if (hasNotInSchema(schema)) {\n    return findFirstTypedSchema(schema.not);\n  }\n\n  return schema;\n}\n/**\n * @param {Schema} schema\n * @return {boolean}\n */\n\n\nfunction canApplyNot(schema) {\n  const typedSchema = findFirstTypedSchema(schema);\n  return likeNumber(typedSchema) || likeInteger(typedSchema) || likeString(typedSchema) || likeNull(typedSchema) || likeBoolean(typedSchema);\n}\n/**\n * @param {any} maybeObj\n * @returns {boolean}\n */\n\n\nfunction isObject(maybeObj) {\n  return typeof maybeObj === 'object' && maybeObj !== null;\n}\n/**\n * @param {Schema} schema\n * @returns {boolean}\n */\n\n\nfunction likeNumber(schema) {\n  return schema.type === 'number' || typeof schema.minimum !== 'undefined' || typeof schema.exclusiveMinimum !== 'undefined' || typeof schema.maximum !== 'undefined' || typeof schema.exclusiveMaximum !== 'undefined' || typeof schema.multipleOf !== 'undefined';\n}\n/**\n * @param {Schema} schema\n * @returns {boolean}\n */\n\n\nfunction likeInteger(schema) {\n  return schema.type === 'integer' || typeof schema.minimum !== 'undefined' || typeof schema.exclusiveMinimum !== 'undefined' || typeof schema.maximum !== 'undefined' || typeof schema.exclusiveMaximum !== 'undefined' || typeof schema.multipleOf !== 'undefined';\n}\n/**\n * @param {Schema} schema\n * @returns {boolean}\n */\n\n\nfunction likeString(schema) {\n  return schema.type === 'string' || typeof schema.minLength !== 'undefined' || typeof schema.maxLength !== 'undefined' || typeof schema.pattern !== 'undefined' || typeof schema.format !== 'undefined' || typeof schema.formatMinimum !== 'undefined' || typeof schema.formatMaximum !== 'undefined';\n}\n/**\n * @param {Schema} schema\n * @returns {boolean}\n */\n\n\nfunction likeBoolean(schema) {\n  return schema.type === 'boolean';\n}\n/**\n * @param {Schema} schema\n * @returns {boolean}\n */\n\n\nfunction likeArray(schema) {\n  return schema.type === 'array' || typeof schema.minItems === 'number' || typeof schema.maxItems === 'number' || typeof schema.uniqueItems !== 'undefined' || typeof schema.items !== 'undefined' || typeof schema.additionalItems !== 'undefined' || typeof schema.contains !== 'undefined';\n}\n/**\n * @param {Schema & {patternRequired?: Array<string>}} schema\n * @returns {boolean}\n */\n\n\nfunction likeObject(schema) {\n  return schema.type === 'object' || typeof schema.minProperties !== 'undefined' || typeof schema.maxProperties !== 'undefined' || typeof schema.required !== 'undefined' || typeof schema.properties !== 'undefined' || typeof schema.patternProperties !== 'undefined' || typeof schema.additionalProperties !== 'undefined' || typeof schema.dependencies !== 'undefined' || typeof schema.propertyNames !== 'undefined' || typeof schema.patternRequired !== 'undefined';\n}\n/**\n * @param {Schema} schema\n * @returns {boolean}\n */\n\n\nfunction likeNull(schema) {\n  return schema.type === 'null';\n}\n/**\n * @param {string} type\n * @returns {string}\n */\n\n\nfunction getArticle(type) {\n  if (/^[aeiou]/i.test(type)) {\n    return 'an';\n  }\n\n  return 'a';\n}\n/**\n * @param {Schema=} schema\n * @returns {string}\n */\n\n\nfunction getSchemaNonTypes(schema) {\n  if (!schema) {\n    return '';\n  }\n\n  if (!schema.type) {\n    if (likeNumber(schema) || likeInteger(schema)) {\n      return ' | should be any non-number';\n    }\n\n    if (likeString(schema)) {\n      return ' | should be any non-string';\n    }\n\n    if (likeArray(schema)) {\n      return ' | should be any non-array';\n    }\n\n    if (likeObject(schema)) {\n      return ' | should be any non-object';\n    }\n  }\n\n  return '';\n}\n/**\n * @param {Array<string>} hints\n * @returns {string}\n */\n\n\nfunction formatHints(hints) {\n  return hints.length > 0 ? `(${hints.join(', ')})` : '';\n}\n/**\n * @param {Schema} schema\n * @param {boolean} logic\n * @returns {string[]}\n */\n\n\nfunction getHints(schema, logic) {\n  if (likeNumber(schema) || likeInteger(schema)) {\n    return numberHints(schema, logic);\n  } else if (likeString(schema)) {\n    return stringHints(schema, logic);\n  }\n\n  return [];\n}\n\nclass ValidationError extends Error {\n  /**\n   * @param {Array<SchemaUtilErrorObject>} errors\n   * @param {Schema} schema\n   * @param {ValidationErrorConfiguration} configuration\n   */\n  constructor(errors, schema, configuration = {}) {\n    super();\n    /** @type {string} */\n\n    this.name = 'ValidationError';\n    /** @type {Array<SchemaUtilErrorObject>} */\n\n    this.errors = errors;\n    /** @type {Schema} */\n\n    this.schema = schema;\n    let headerNameFromSchema;\n    let baseDataPathFromSchema;\n\n    if (schema.title && (!configuration.name || !configuration.baseDataPath)) {\n      const splittedTitleFromSchema = schema.title.match(/^(.+) (.+)$/);\n\n      if (splittedTitleFromSchema) {\n        if (!configuration.name) {\n          [, headerNameFromSchema] = splittedTitleFromSchema;\n        }\n\n        if (!configuration.baseDataPath) {\n          [,, baseDataPathFromSchema] = splittedTitleFromSchema;\n        }\n      }\n    }\n    /** @type {string} */\n\n\n    this.headerName = configuration.name || headerNameFromSchema || 'Object';\n    /** @type {string} */\n\n    this.baseDataPath = configuration.baseDataPath || baseDataPathFromSchema || 'configuration';\n    /** @type {PostFormatter | null} */\n\n    this.postFormatter = configuration.postFormatter || null;\n    const header = `Invalid ${this.baseDataPath} object. ${this.headerName} has been initialized using ${getArticle(this.baseDataPath)} ${this.baseDataPath} object that does not match the API schema.\\n`;\n    /** @type {string} */\n\n    this.message = `${header}${this.formatValidationErrors(errors)}`;\n    Error.captureStackTrace(this, this.constructor);\n  }\n  /**\n   * @param {string} path\n   * @returns {Schema}\n   */\n\n\n  getSchemaPart(path) {\n    const newPath = path.split('/');\n    let schemaPart = this.schema;\n\n    for (let i = 1; i < newPath.length; i++) {\n      const inner = schemaPart[\n      /** @type {keyof Schema} */\n      newPath[i]];\n\n      if (!inner) {\n        break;\n      }\n\n      schemaPart = inner;\n    }\n\n    return schemaPart;\n  }\n  /**\n   * @param {Schema} schema\n   * @param {boolean} logic\n   * @param {Array<Object>} prevSchemas\n   * @returns {string}\n   */\n\n\n  formatSchema(schema, logic = true, prevSchemas = []) {\n    let newLogic = logic;\n\n    const formatInnerSchema =\n    /**\n     *\n     * @param {Object} innerSchema\n     * @param {boolean=} addSelf\n     * @returns {string}\n     */\n    (innerSchema, addSelf) => {\n      if (!addSelf) {\n        return this.formatSchema(innerSchema, newLogic, prevSchemas);\n      }\n\n      if (prevSchemas.includes(innerSchema)) {\n        return '(recursive)';\n      }\n\n      return this.formatSchema(innerSchema, newLogic, prevSchemas.concat(schema));\n    };\n\n    if (hasNotInSchema(schema) && !likeObject(schema)) {\n      if (canApplyNot(schema.not)) {\n        newLogic = !logic;\n        return formatInnerSchema(schema.not);\n      }\n\n      const needApplyLogicHere = !schema.not.not;\n      const prefix = logic ? '' : 'non ';\n      newLogic = !logic;\n      return needApplyLogicHere ? prefix + formatInnerSchema(schema.not) : formatInnerSchema(schema.not);\n    }\n\n    if (\n    /** @type {Schema & {instanceof: string | Array<string>}} */\n    schema.instanceof) {\n      const {\n        instanceof: value\n      } =\n      /** @type {Schema & {instanceof: string | Array<string>}} */\n      schema;\n      const values = !Array.isArray(value) ? [value] : value;\n      return values.map(\n      /**\n       * @param {string} item\n       * @returns {string}\n       */\n      item => item === 'Function' ? 'function' : item).join(' | ');\n    }\n\n    if (schema.enum) {\n      return (\n        /** @type {Array<any>} */\n        schema.enum.map(item => JSON.stringify(item)).join(' | ')\n      );\n    }\n\n    if (typeof schema.const !== 'undefined') {\n      return JSON.stringify(schema.const);\n    }\n\n    if (schema.oneOf) {\n      return (\n        /** @type {Array<Schema>} */\n        schema.oneOf.map(item => formatInnerSchema(item, true)).join(' | ')\n      );\n    }\n\n    if (schema.anyOf) {\n      return (\n        /** @type {Array<Schema>} */\n        schema.anyOf.map(item => formatInnerSchema(item, true)).join(' | ')\n      );\n    }\n\n    if (schema.allOf) {\n      return (\n        /** @type {Array<Schema>} */\n        schema.allOf.map(item => formatInnerSchema(item, true)).join(' & ')\n      );\n    }\n\n    if (\n    /** @type {JSONSchema7} */\n    schema.if) {\n      const {\n        if: ifValue,\n        then: thenValue,\n        else: elseValue\n      } =\n      /** @type {JSONSchema7} */\n      schema;\n      return `${ifValue ? `if ${formatInnerSchema(ifValue)}` : ''}${thenValue ? ` then ${formatInnerSchema(thenValue)}` : ''}${elseValue ? ` else ${formatInnerSchema(elseValue)}` : ''}`;\n    }\n\n    if (schema.$ref) {\n      return formatInnerSchema(this.getSchemaPart(schema.$ref), true);\n    }\n\n    if (likeNumber(schema) || likeInteger(schema)) {\n      const [type, ...hints] = getHints(schema, logic);\n      const str = `${type}${hints.length > 0 ? ` ${formatHints(hints)}` : ''}`;\n      return logic ? str : hints.length > 0 ? `non-${type} | ${str}` : `non-${type}`;\n    }\n\n    if (likeString(schema)) {\n      const [type, ...hints] = getHints(schema, logic);\n      const str = `${type}${hints.length > 0 ? ` ${formatHints(hints)}` : ''}`;\n      return logic ? str : str === 'string' ? 'non-string' : `non-string | ${str}`;\n    }\n\n    if (likeBoolean(schema)) {\n      return `${logic ? '' : 'non-'}boolean`;\n    }\n\n    if (likeArray(schema)) {\n      // not logic already applied in formatValidationError\n      newLogic = true;\n      const hints = [];\n\n      if (typeof schema.minItems === 'number') {\n        hints.push(`should not have fewer than ${schema.minItems} item${schema.minItems > 1 ? 's' : ''}`);\n      }\n\n      if (typeof schema.maxItems === 'number') {\n        hints.push(`should not have more than ${schema.maxItems} item${schema.maxItems > 1 ? 's' : ''}`);\n      }\n\n      if (schema.uniqueItems) {\n        hints.push('should not have duplicate items');\n      }\n\n      const hasAdditionalItems = typeof schema.additionalItems === 'undefined' || Boolean(schema.additionalItems);\n      let items = '';\n\n      if (schema.items) {\n        if (Array.isArray(schema.items) && schema.items.length > 0) {\n          items = `${\n          /** @type {Array<Schema>} */\n          schema.items.map(item => formatInnerSchema(item)).join(', ')}`;\n\n          if (hasAdditionalItems) {\n            if (schema.additionalItems && isObject(schema.additionalItems) && Object.keys(schema.additionalItems).length > 0) {\n              hints.push(`additional items should be ${formatInnerSchema(schema.additionalItems)}`);\n            }\n          }\n        } else if (schema.items && Object.keys(schema.items).length > 0) {\n          // \"additionalItems\" is ignored\n          items = `${formatInnerSchema(schema.items)}`;\n        } else {\n          // Fallback for empty `items` value\n          items = 'any';\n        }\n      } else {\n        // \"additionalItems\" is ignored\n        items = 'any';\n      }\n\n      if (schema.contains && Object.keys(schema.contains).length > 0) {\n        hints.push(`should contains at least one ${this.formatSchema(schema.contains)} item`);\n      }\n\n      return `[${items}${hasAdditionalItems ? ', ...' : ''}]${hints.length > 0 ? ` (${hints.join(', ')})` : ''}`;\n    }\n\n    if (likeObject(schema)) {\n      // not logic already applied in formatValidationError\n      newLogic = true;\n      const hints = [];\n\n      if (typeof schema.minProperties === 'number') {\n        hints.push(`should not have fewer than ${schema.minProperties} ${schema.minProperties > 1 ? 'properties' : 'property'}`);\n      }\n\n      if (typeof schema.maxProperties === 'number') {\n        hints.push(`should not have more than ${schema.maxProperties} ${schema.minProperties && schema.minProperties > 1 ? 'properties' : 'property'}`);\n      }\n\n      if (schema.patternProperties && Object.keys(schema.patternProperties).length > 0) {\n        const patternProperties = Object.keys(schema.patternProperties);\n        hints.push(`additional property names should match pattern${patternProperties.length > 1 ? 's' : ''} ${patternProperties.map(pattern => JSON.stringify(pattern)).join(' | ')}`);\n      }\n\n      const properties = schema.properties ? Object.keys(schema.properties) : [];\n      const required = schema.required ? schema.required : [];\n      const allProperties = [...new Set(\n      /** @type {Array<string>} */\n      [].concat(required).concat(properties))];\n      const objectStructure = allProperties.map(property => {\n        const isRequired = required.includes(property); // Some properties need quotes, maybe we should add check\n        // Maybe we should output type of property (`foo: string`), but it is looks very unreadable\n\n        return `${property}${isRequired ? '' : '?'}`;\n      }).concat(typeof schema.additionalProperties === 'undefined' || Boolean(schema.additionalProperties) ? schema.additionalProperties && isObject(schema.additionalProperties) ? [`<key>: ${formatInnerSchema(schema.additionalProperties)}`] : ['…'] : []).join(', ');\n      const {\n        dependencies,\n        propertyNames,\n        patternRequired\n      } =\n      /** @type {Schema & {patternRequired?: Array<string>;}} */\n      schema;\n\n      if (dependencies) {\n        Object.keys(dependencies).forEach(dependencyName => {\n          const dependency = dependencies[dependencyName];\n\n          if (Array.isArray(dependency)) {\n            hints.push(`should have ${dependency.length > 1 ? 'properties' : 'property'} ${dependency.map(dep => `'${dep}'`).join(', ')} when property '${dependencyName}' is present`);\n          } else {\n            hints.push(`should be valid according to the schema ${formatInnerSchema(dependency)} when property '${dependencyName}' is present`);\n          }\n        });\n      }\n\n      if (propertyNames && Object.keys(propertyNames).length > 0) {\n        hints.push(`each property name should match format ${JSON.stringify(schema.propertyNames.format)}`);\n      }\n\n      if (patternRequired && patternRequired.length > 0) {\n        hints.push(`should have property matching pattern ${patternRequired.map(\n        /**\n         * @param {string} item\n         * @returns {string}\n         */\n        item => JSON.stringify(item))}`);\n      }\n\n      return `object {${objectStructure ? ` ${objectStructure} ` : ''}}${hints.length > 0 ? ` (${hints.join(', ')})` : ''}`;\n    }\n\n    if (likeNull(schema)) {\n      return `${logic ? '' : 'non-'}null`;\n    }\n\n    if (Array.isArray(schema.type)) {\n      // not logic already applied in formatValidationError\n      return `${schema.type.join(' | ')}`;\n    } // Fallback for unknown keywords\n    // not logic already applied in formatValidationError\n\n    /* istanbul ignore next */\n\n\n    return JSON.stringify(schema, null, 2);\n  }\n  /**\n   * @param {Schema=} schemaPart\n   * @param {(boolean | Array<string>)=} additionalPath\n   * @param {boolean=} needDot\n   * @param {boolean=} logic\n   * @returns {string}\n   */\n\n\n  getSchemaPartText(schemaPart, additionalPath, needDot = false, logic = true) {\n    if (!schemaPart) {\n      return '';\n    }\n\n    if (Array.isArray(additionalPath)) {\n      for (let i = 0; i < additionalPath.length; i++) {\n        /** @type {Schema | undefined} */\n        const inner = schemaPart[\n        /** @type {keyof Schema} */\n        additionalPath[i]];\n\n        if (inner) {\n          // eslint-disable-next-line no-param-reassign\n          schemaPart = inner;\n        } else {\n          break;\n        }\n      }\n    }\n\n    while (schemaPart.$ref) {\n      // eslint-disable-next-line no-param-reassign\n      schemaPart = this.getSchemaPart(schemaPart.$ref);\n    }\n\n    let schemaText = `${this.formatSchema(schemaPart, logic)}${needDot ? '.' : ''}`;\n\n    if (schemaPart.description) {\n      schemaText += `\\n-> ${schemaPart.description}`;\n    }\n\n    return schemaText;\n  }\n  /**\n   * @param {Schema=} schemaPart\n   * @returns {string}\n   */\n\n\n  getSchemaPartDescription(schemaPart) {\n    if (!schemaPart) {\n      return '';\n    }\n\n    while (schemaPart.$ref) {\n      // eslint-disable-next-line no-param-reassign\n      schemaPart = this.getSchemaPart(schemaPart.$ref);\n    }\n\n    if (schemaPart.description) {\n      return `\\n-> ${schemaPart.description}`;\n    }\n\n    return '';\n  }\n  /**\n   * @param {SchemaUtilErrorObject} error\n   * @returns {string}\n   */\n\n\n  formatValidationError(error) {\n    const {\n      keyword,\n      dataPath: errorDataPath\n    } = error;\n    const dataPath = `${this.baseDataPath}${errorDataPath}`;\n\n    switch (keyword) {\n      case 'type':\n        {\n          const {\n            parentSchema,\n            params\n          } = error; // eslint-disable-next-line default-case\n\n          switch (\n          /** @type {import(\"ajv\").TypeParams} */\n          params.type) {\n            case 'number':\n              return `${dataPath} should be a ${this.getSchemaPartText(parentSchema, false, true)}`;\n\n            case 'integer':\n              return `${dataPath} should be a ${this.getSchemaPartText(parentSchema, false, true)}`;\n\n            case 'string':\n              return `${dataPath} should be a ${this.getSchemaPartText(parentSchema, false, true)}`;\n\n            case 'boolean':\n              return `${dataPath} should be a ${this.getSchemaPartText(parentSchema, false, true)}`;\n\n            case 'array':\n              return `${dataPath} should be an array:\\n${this.getSchemaPartText(parentSchema)}`;\n\n            case 'object':\n              return `${dataPath} should be an object:\\n${this.getSchemaPartText(parentSchema)}`;\n\n            case 'null':\n              return `${dataPath} should be a ${this.getSchemaPartText(parentSchema, false, true)}`;\n\n            default:\n              return `${dataPath} should be:\\n${this.getSchemaPartText(parentSchema)}`;\n          }\n        }\n\n      case 'instanceof':\n        {\n          const {\n            parentSchema\n          } = error;\n          return `${dataPath} should be an instance of ${this.getSchemaPartText(parentSchema, false, true)}`;\n        }\n\n      case 'pattern':\n        {\n          const {\n            params,\n            parentSchema\n          } = error;\n          const {\n            pattern\n          } =\n          /** @type {import(\"ajv\").PatternParams} */\n          params;\n          return `${dataPath} should match pattern ${JSON.stringify(pattern)}${getSchemaNonTypes(parentSchema)}.${this.getSchemaPartDescription(parentSchema)}`;\n        }\n\n      case 'format':\n        {\n          const {\n            params,\n            parentSchema\n          } = error;\n          const {\n            format\n          } =\n          /** @type {import(\"ajv\").FormatParams} */\n          params;\n          return `${dataPath} should match format ${JSON.stringify(format)}${getSchemaNonTypes(parentSchema)}.${this.getSchemaPartDescription(parentSchema)}`;\n        }\n\n      case 'formatMinimum':\n      case 'formatMaximum':\n        {\n          const {\n            params,\n            parentSchema\n          } = error;\n          const {\n            comparison,\n            limit\n          } =\n          /** @type {import(\"ajv\").ComparisonParams} */\n          params;\n          return `${dataPath} should be ${comparison} ${JSON.stringify(limit)}${getSchemaNonTypes(parentSchema)}.${this.getSchemaPartDescription(parentSchema)}`;\n        }\n\n      case 'minimum':\n      case 'maximum':\n      case 'exclusiveMinimum':\n      case 'exclusiveMaximum':\n        {\n          const {\n            parentSchema,\n            params\n          } = error;\n          const {\n            comparison,\n            limit\n          } =\n          /** @type {import(\"ajv\").ComparisonParams} */\n          params;\n          const [, ...hints] = getHints(\n          /** @type {Schema} */\n          parentSchema, true);\n\n          if (hints.length === 0) {\n            hints.push(`should be ${comparison} ${limit}`);\n          }\n\n          return `${dataPath} ${hints.join(' ')}${getSchemaNonTypes(parentSchema)}.${this.getSchemaPartDescription(parentSchema)}`;\n        }\n\n      case 'multipleOf':\n        {\n          const {\n            params,\n            parentSchema\n          } = error;\n          const {\n            multipleOf\n          } =\n          /** @type {import(\"ajv\").MultipleOfParams} */\n          params;\n          return `${dataPath} should be multiple of ${multipleOf}${getSchemaNonTypes(parentSchema)}.${this.getSchemaPartDescription(parentSchema)}`;\n        }\n\n      case 'patternRequired':\n        {\n          const {\n            params,\n            parentSchema\n          } = error;\n          const {\n            missingPattern\n          } =\n          /** @type {import(\"ajv\").PatternRequiredParams} */\n          params;\n          return `${dataPath} should have property matching pattern ${JSON.stringify(missingPattern)}${getSchemaNonTypes(parentSchema)}.${this.getSchemaPartDescription(parentSchema)}`;\n        }\n\n      case 'minLength':\n        {\n          const {\n            params,\n            parentSchema\n          } = error;\n          const {\n            limit\n          } =\n          /** @type {import(\"ajv\").LimitParams} */\n          params;\n\n          if (limit === 1) {\n            return `${dataPath} should be an non-empty string${getSchemaNonTypes(parentSchema)}.${this.getSchemaPartDescription(parentSchema)}`;\n          }\n\n          const length = limit - 1;\n          return `${dataPath} should be longer than ${length} character${length > 1 ? 's' : ''}${getSchemaNonTypes(parentSchema)}.${this.getSchemaPartDescription(parentSchema)}`;\n        }\n\n      case 'minItems':\n        {\n          const {\n            params,\n            parentSchema\n          } = error;\n          const {\n            limit\n          } =\n          /** @type {import(\"ajv\").LimitParams} */\n          params;\n\n          if (limit === 1) {\n            return `${dataPath} should be an non-empty array${getSchemaNonTypes(parentSchema)}.${this.getSchemaPartDescription(parentSchema)}`;\n          }\n\n          return `${dataPath} should not have fewer than ${limit} items${getSchemaNonTypes(parentSchema)}.${this.getSchemaPartDescription(parentSchema)}`;\n        }\n\n      case 'minProperties':\n        {\n          const {\n            params,\n            parentSchema\n          } = error;\n          const {\n            limit\n          } =\n          /** @type {import(\"ajv\").LimitParams} */\n          params;\n\n          if (limit === 1) {\n            return `${dataPath} should be an non-empty object${getSchemaNonTypes(parentSchema)}.${this.getSchemaPartDescription(parentSchema)}`;\n          }\n\n          return `${dataPath} should not have fewer than ${limit} properties${getSchemaNonTypes(parentSchema)}.${this.getSchemaPartDescription(parentSchema)}`;\n        }\n\n      case 'maxLength':\n        {\n          const {\n            params,\n            parentSchema\n          } = error;\n          const {\n            limit\n          } =\n          /** @type {import(\"ajv\").LimitParams} */\n          params;\n          const max = limit + 1;\n          return `${dataPath} should be shorter than ${max} character${max > 1 ? 's' : ''}${getSchemaNonTypes(parentSchema)}.${this.getSchemaPartDescription(parentSchema)}`;\n        }\n\n      case 'maxItems':\n        {\n          const {\n            params,\n            parentSchema\n          } = error;\n          const {\n            limit\n          } =\n          /** @type {import(\"ajv\").LimitParams} */\n          params;\n          return `${dataPath} should not have more than ${limit} items${getSchemaNonTypes(parentSchema)}.${this.getSchemaPartDescription(parentSchema)}`;\n        }\n\n      case 'maxProperties':\n        {\n          const {\n            params,\n            parentSchema\n          } = error;\n          const {\n            limit\n          } =\n          /** @type {import(\"ajv\").LimitParams} */\n          params;\n          return `${dataPath} should not have more than ${limit} properties${getSchemaNonTypes(parentSchema)}.${this.getSchemaPartDescription(parentSchema)}`;\n        }\n\n      case 'uniqueItems':\n        {\n          const {\n            params,\n            parentSchema\n          } = error;\n          const {\n            i\n          } =\n          /** @type {import(\"ajv\").UniqueItemsParams} */\n          params;\n          return `${dataPath} should not contain the item '${error.data[i]}' twice${getSchemaNonTypes(parentSchema)}.${this.getSchemaPartDescription(parentSchema)}`;\n        }\n\n      case 'additionalItems':\n        {\n          const {\n            params,\n            parentSchema\n          } = error;\n          const {\n            limit\n          } =\n          /** @type {import(\"ajv\").LimitParams} */\n          params;\n          return `${dataPath} should not have more than ${limit} items${getSchemaNonTypes(parentSchema)}. These items are valid:\\n${this.getSchemaPartText(parentSchema)}`;\n        }\n\n      case 'contains':\n        {\n          const {\n            parentSchema\n          } = error;\n          return `${dataPath} should contains at least one ${this.getSchemaPartText(parentSchema, ['contains'])} item${getSchemaNonTypes(parentSchema)}.`;\n        }\n\n      case 'required':\n        {\n          const {\n            parentSchema,\n            params\n          } = error;\n          const missingProperty =\n          /** @type {import(\"ajv\").DependenciesParams} */\n          params.missingProperty.replace(/^\\./, '');\n          const hasProperty = parentSchema && Boolean(\n          /** @type {Schema} */\n          parentSchema.properties &&\n          /** @type {Schema} */\n          parentSchema.properties[missingProperty]);\n          return `${dataPath} misses the property '${missingProperty}'${getSchemaNonTypes(parentSchema)}.${hasProperty ? ` Should be:\\n${this.getSchemaPartText(parentSchema, ['properties', missingProperty])}` : this.getSchemaPartDescription(parentSchema)}`;\n        }\n\n      case 'additionalProperties':\n        {\n          const {\n            params,\n            parentSchema\n          } = error;\n          const {\n            additionalProperty\n          } =\n          /** @type {import(\"ajv\").AdditionalPropertiesParams} */\n          params;\n          return `${dataPath} has an unknown property '${additionalProperty}'${getSchemaNonTypes(parentSchema)}. These properties are valid:\\n${this.getSchemaPartText(parentSchema)}`;\n        }\n\n      case 'dependencies':\n        {\n          const {\n            params,\n            parentSchema\n          } = error;\n          const {\n            property,\n            deps\n          } =\n          /** @type {import(\"ajv\").DependenciesParams} */\n          params;\n          const dependencies = deps.split(',').map(\n          /**\n           * @param {string} dep\n           * @returns {string}\n           */\n          dep => `'${dep.trim()}'`).join(', ');\n          return `${dataPath} should have properties ${dependencies} when property '${property}' is present${getSchemaNonTypes(parentSchema)}.${this.getSchemaPartDescription(parentSchema)}`;\n        }\n\n      case 'propertyNames':\n        {\n          const {\n            params,\n            parentSchema,\n            schema\n          } = error;\n          const {\n            propertyName\n          } =\n          /** @type {import(\"ajv\").PropertyNamesParams} */\n          params;\n          return `${dataPath} property name '${propertyName}' is invalid${getSchemaNonTypes(parentSchema)}. Property names should be match format ${JSON.stringify(schema.format)}.${this.getSchemaPartDescription(parentSchema)}`;\n        }\n\n      case 'enum':\n        {\n          const {\n            parentSchema\n          } = error;\n\n          if (parentSchema &&\n          /** @type {Schema} */\n          parentSchema.enum &&\n          /** @type {Schema} */\n          parentSchema.enum.length === 1) {\n            return `${dataPath} should be ${this.getSchemaPartText(parentSchema, false, true)}`;\n          }\n\n          return `${dataPath} should be one of these:\\n${this.getSchemaPartText(parentSchema)}`;\n        }\n\n      case 'const':\n        {\n          const {\n            parentSchema\n          } = error;\n          return `${dataPath} should be equal to constant ${this.getSchemaPartText(parentSchema, false, true)}`;\n        }\n\n      case 'not':\n        {\n          const postfix = likeObject(\n          /** @type {Schema} */\n          error.parentSchema) ? `\\n${this.getSchemaPartText(error.parentSchema)}` : '';\n          const schemaOutput = this.getSchemaPartText(error.schema, false, false, false);\n\n          if (canApplyNot(error.schema)) {\n            return `${dataPath} should be any ${schemaOutput}${postfix}.`;\n          }\n\n          const {\n            schema,\n            parentSchema\n          } = error;\n          return `${dataPath} should not be ${this.getSchemaPartText(schema, false, true)}${parentSchema && likeObject(parentSchema) ? `\\n${this.getSchemaPartText(parentSchema)}` : ''}`;\n        }\n\n      case 'oneOf':\n      case 'anyOf':\n        {\n          const {\n            parentSchema,\n            children\n          } = error;\n\n          if (children && children.length > 0) {\n            if (error.schema.length === 1) {\n              const lastChild = children[children.length - 1];\n              const remainingChildren = children.slice(0, children.length - 1);\n              return this.formatValidationError(Object.assign({}, lastChild, {\n                children: remainingChildren,\n                parentSchema: Object.assign({}, parentSchema, lastChild.parentSchema)\n              }));\n            }\n\n            let filteredChildren = filterChildren(children);\n\n            if (filteredChildren.length === 1) {\n              return this.formatValidationError(filteredChildren[0]);\n            }\n\n            filteredChildren = groupChildrenByFirstChild(filteredChildren);\n            return `${dataPath} should be one of these:\\n${this.getSchemaPartText(parentSchema)}\\nDetails:\\n${filteredChildren.map(\n            /**\n             * @param {SchemaUtilErrorObject} nestedError\n             * @returns {string}\n             */\n            nestedError => ` * ${indent(this.formatValidationError(nestedError), '   ')}`).join('\\n')}`;\n          }\n\n          return `${dataPath} should be one of these:\\n${this.getSchemaPartText(parentSchema)}`;\n        }\n\n      case 'if':\n        {\n          const {\n            params,\n            parentSchema\n          } = error;\n          const {\n            failingKeyword\n          } =\n          /** @type {import(\"ajv\").IfParams} */\n          params;\n          return `${dataPath} should match \"${failingKeyword}\" schema:\\n${this.getSchemaPartText(parentSchema, [failingKeyword])}`;\n        }\n\n      case 'absolutePath':\n        {\n          const {\n            message,\n            parentSchema\n          } = error;\n          return `${dataPath}: ${message}${this.getSchemaPartDescription(parentSchema)}`;\n        }\n\n      /* istanbul ignore next */\n\n      default:\n        {\n          const {\n            message,\n            parentSchema\n          } = error;\n          const ErrorInJSON = JSON.stringify(error, null, 2); // For `custom`, `false schema`, `$ref` keywords\n          // Fallback for unknown keywords\n\n          return `${dataPath} ${message} (${ErrorInJSON}).\\n${this.getSchemaPartText(parentSchema, false)}`;\n        }\n    }\n  }\n  /**\n   * @param {Array<SchemaUtilErrorObject>} errors\n   * @returns {string}\n   */\n\n\n  formatValidationErrors(errors) {\n    return errors.map(error => {\n      let formattedError = this.formatValidationError(error);\n\n      if (this.postFormatter) {\n        formattedError = this.postFormatter(formattedError, error);\n      }\n\n      return ` - ${indent(formattedError, '   ')}`;\n    }).join('\\n');\n  }\n\n}\n\nvar _default = ValidationError;\nexports.default = _default;"],"mappings":"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"},"metadata":{},"sourceType":"script"}