{"ast":null,"code":"'use strict';var baseEncodeTables={26:'abcdefghijklmnopqrstuvwxyz',32:'123456789abcdefghjkmnpqrstuvwxyz',// no 0lio\n36:'0123456789abcdefghijklmnopqrstuvwxyz',49:'abcdefghijkmnopqrstuvwxyzABCDEFGHJKLMNPQRSTUVWXYZ',// no lIO\n52:'abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ',58:'123456789abcdefghijkmnopqrstuvwxyzABCDEFGHJKLMNPQRSTUVWXYZ',// no 0lIO\n62:'0123456789abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ',64:'0123456789abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ-_'};function encodeBufferToBase(buffer,base){var encodeTable=baseEncodeTables[base];if(!encodeTable){throw new Error('Unknown encoding base'+base);}var readLength=buffer.length;var Big=require('big.js');Big.RM=Big.DP=0;var b=new Big(0);for(var i=readLength-1;i>=0;i--){b=b.times(256).plus(buffer[i]);}var output='';while(b.gt(0)){output=encodeTable[b.mod(base)]+output;b=b.div(base);}Big.DP=20;Big.RM=1;return output;}function getHashDigest(buffer,hashType,digestType,maxLength){hashType=hashType||'md5';maxLength=maxLength||9999;var hash=require('crypto').createHash(hashType);hash.update(buffer);if(digestType==='base26'||digestType==='base32'||digestType==='base36'||digestType==='base49'||digestType==='base52'||digestType==='base58'||digestType==='base62'||digestType==='base64'){return encodeBufferToBase(hash.digest(),digestType.substr(4)).substr(0,maxLength);}else{return hash.digest(digestType||'hex').substr(0,maxLength);}}module.exports=getHashDigest;","map":{"version":3,"names":["baseEncodeTables","encodeBufferToBase","buffer","base","encodeTable","Error","readLength","length","Big","require","RM","DP","b","i","times","plus","output","gt","mod","div","getHashDigest","hashType","digestType","maxLength","hash","createHash","update","digest","substr","module","exports"],"sources":["/Users/fernandorojo/Developer/messing/rea-tree/node_modules/@expo/webpack-config/node_modules/babel-loader/node_modules/loader-utils/lib/getHashDigest.js"],"sourcesContent":["'use strict';\n\nconst baseEncodeTables = {\n  26: 'abcdefghijklmnopqrstuvwxyz',\n  32: '123456789abcdefghjkmnpqrstuvwxyz', // no 0lio\n  36: '0123456789abcdefghijklmnopqrstuvwxyz',\n  49: 'abcdefghijkmnopqrstuvwxyzABCDEFGHJKLMNPQRSTUVWXYZ', // no lIO\n  52: 'abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ',\n  58: '123456789abcdefghijkmnopqrstuvwxyzABCDEFGHJKLMNPQRSTUVWXYZ', // no 0lIO\n  62: '0123456789abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ',\n  64: '0123456789abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ-_',\n};\n\nfunction encodeBufferToBase(buffer, base) {\n  const encodeTable = baseEncodeTables[base];\n  if (!encodeTable) {\n    throw new Error('Unknown encoding base' + base);\n  }\n\n  const readLength = buffer.length;\n  const Big = require('big.js');\n\n  Big.RM = Big.DP = 0;\n  let b = new Big(0);\n\n  for (let i = readLength - 1; i >= 0; i--) {\n    b = b.times(256).plus(buffer[i]);\n  }\n\n  let output = '';\n  while (b.gt(0)) {\n    output = encodeTable[b.mod(base)] + output;\n    b = b.div(base);\n  }\n\n  Big.DP = 20;\n  Big.RM = 1;\n\n  return output;\n}\n\nfunction getHashDigest(buffer, hashType, digestType, maxLength) {\n  hashType = hashType || 'md5';\n  maxLength = maxLength || 9999;\n\n  const hash = require('crypto').createHash(hashType);\n\n  hash.update(buffer);\n\n  if (\n    digestType === 'base26' ||\n    digestType === 'base32' ||\n    digestType === 'base36' ||\n    digestType === 'base49' ||\n    digestType === 'base52' ||\n    digestType === 'base58' ||\n    digestType === 'base62' ||\n    digestType === 'base64'\n  ) {\n    return encodeBufferToBase(hash.digest(), digestType.substr(4)).substr(\n      0,\n      maxLength\n    );\n  } else {\n    return hash.digest(digestType || 'hex').substr(0, maxLength);\n  }\n}\n\nmodule.exports = getHashDigest;\n"],"mappings":"AAAA,aAEA,GAAMA,CAAAA,gBAAgB,CAAG,CACvB,GAAI,4BADmB,CAEvB,GAAI,kCAFmB,CAEiB;AACxC,GAAI,sCAHmB,CAIvB,GAAI,mDAJmB,CAIkC;AACzD,GAAI,sDALmB,CAMvB,GAAI,4DANmB,CAM2C;AAClE,GAAI,gEAPmB,CAQvB,GAAI,kEARmB,CAAzB,CAWA,QAASC,CAAAA,kBAAT,CAA4BC,MAA5B,CAAoCC,IAApC,CAA0C,CACxC,GAAMC,CAAAA,WAAW,CAAGJ,gBAAgB,CAACG,IAAD,CAApC,CACA,GAAI,CAACC,WAAL,CAAkB,CAChB,KAAM,IAAIC,CAAAA,KAAJ,CAAU,wBAA0BF,IAApC,CAAN,CACD,CAED,GAAMG,CAAAA,UAAU,CAAGJ,MAAM,CAACK,MAA1B,CACA,GAAMC,CAAAA,GAAG,CAAGC,OAAO,CAAC,QAAD,CAAnB,CAEAD,GAAG,CAACE,EAAJ,CAASF,GAAG,CAACG,EAAJ,CAAS,CAAlB,CACA,GAAIC,CAAAA,CAAC,CAAG,GAAIJ,CAAAA,GAAJ,CAAQ,CAAR,CAAR,CAEA,IAAK,GAAIK,CAAAA,CAAC,CAAGP,UAAU,CAAG,CAA1B,CAA6BO,CAAC,EAAI,CAAlC,CAAqCA,CAAC,EAAtC,CAA0C,CACxCD,CAAC,CAAGA,CAAC,CAACE,KAAF,CAAQ,GAAR,EAAaC,IAAb,CAAkBb,MAAM,CAACW,CAAD,CAAxB,CAAJ,CACD,CAED,GAAIG,CAAAA,MAAM,CAAG,EAAb,CACA,MAAOJ,CAAC,CAACK,EAAF,CAAK,CAAL,CAAP,CAAgB,CACdD,MAAM,CAAGZ,WAAW,CAACQ,CAAC,CAACM,GAAF,CAAMf,IAAN,CAAD,CAAX,CAA2Ba,MAApC,CACAJ,CAAC,CAAGA,CAAC,CAACO,GAAF,CAAMhB,IAAN,CAAJ,CACD,CAEDK,GAAG,CAACG,EAAJ,CAAS,EAAT,CACAH,GAAG,CAACE,EAAJ,CAAS,CAAT,CAEA,MAAOM,CAAAA,MAAP,CACD,CAED,QAASI,CAAAA,aAAT,CAAuBlB,MAAvB,CAA+BmB,QAA/B,CAAyCC,UAAzC,CAAqDC,SAArD,CAAgE,CAC9DF,QAAQ,CAAGA,QAAQ,EAAI,KAAvB,CACAE,SAAS,CAAGA,SAAS,EAAI,IAAzB,CAEA,GAAMC,CAAAA,IAAI,CAAGf,OAAO,CAAC,QAAD,CAAP,CAAkBgB,UAAlB,CAA6BJ,QAA7B,CAAb,CAEAG,IAAI,CAACE,MAAL,CAAYxB,MAAZ,EAEA,GACEoB,UAAU,GAAK,QAAf,EACAA,UAAU,GAAK,QADf,EAEAA,UAAU,GAAK,QAFf,EAGAA,UAAU,GAAK,QAHf,EAIAA,UAAU,GAAK,QAJf,EAKAA,UAAU,GAAK,QALf,EAMAA,UAAU,GAAK,QANf,EAOAA,UAAU,GAAK,QARjB,CASE,CACA,MAAOrB,CAAAA,kBAAkB,CAACuB,IAAI,CAACG,MAAL,EAAD,CAAgBL,UAAU,CAACM,MAAX,CAAkB,CAAlB,CAAhB,CAAlB,CAAwDA,MAAxD,CACL,CADK,CAELL,SAFK,CAAP,CAID,CAdD,IAcO,CACL,MAAOC,CAAAA,IAAI,CAACG,MAAL,CAAYL,UAAU,EAAI,KAA1B,EAAiCM,MAAjC,CAAwC,CAAxC,CAA2CL,SAA3C,CAAP,CACD,CACF,CAEDM,MAAM,CAACC,OAAP,CAAiBV,aAAjB"},"metadata":{},"sourceType":"script"}