{"ast":null,"code":"var SemVer=require('../classes/semver');var parse=require('./parse');var _require=require('../internal/re'),re=_require.re,t=_require.t;var coerce=function coerce(version,options){if(version instanceof SemVer){return version;}if(typeof version==='number'){version=String(version);}if(typeof version!=='string'){return null;}options=options||{};var match=null;if(!options.rtl){match=version.match(re[t.COERCE]);}else{// Find the right-most coercible string that does not share\n// a terminus with a more left-ward coercible string.\n// Eg, '1.2.3.4' wants to coerce '2.3.4', not '3.4' or '4'\n//\n// Walk through the string checking with a /g regexp\n// Manually set the index so as to pick up overlapping matches.\n// Stop when we get a match that ends at the string end, since no\n// coercible string can be more right-ward without the same terminus.\nvar next;while((next=re[t.COERCERTL].exec(version))&&(!match||match.index+match[0].length!==version.length)){if(!match||next.index+next[0].length!==match.index+match[0].length){match=next;}re[t.COERCERTL].lastIndex=next.index+next[1].length+next[2].length;}// leave it in a clean state\nre[t.COERCERTL].lastIndex=-1;}if(match===null){return null;}return parse(\"\".concat(match[2],\".\").concat(match[3]||'0',\".\").concat(match[4]||'0'),options);};module.exports=coerce;","map":{"version":3,"names":["SemVer","require","parse","re","t","coerce","version","options","String","match","rtl","COERCE","next","COERCERTL","exec","index","length","lastIndex","module","exports"],"sources":["/Users/fernandorojo/Developer/messing/rea-tree/node_modules/@expo/webpack-config/node_modules/semver/functions/coerce.js"],"sourcesContent":["const SemVer = require('../classes/semver')\nconst parse = require('./parse')\nconst { re, t } = require('../internal/re')\n\nconst coerce = (version, options) => {\n  if (version instanceof SemVer) {\n    return version\n  }\n\n  if (typeof version === 'number') {\n    version = String(version)\n  }\n\n  if (typeof version !== 'string') {\n    return null\n  }\n\n  options = options || {}\n\n  let match = null\n  if (!options.rtl) {\n    match = version.match(re[t.COERCE])\n  } else {\n    // Find the right-most coercible string that does not share\n    // a terminus with a more left-ward coercible string.\n    // Eg, '1.2.3.4' wants to coerce '2.3.4', not '3.4' or '4'\n    //\n    // Walk through the string checking with a /g regexp\n    // Manually set the index so as to pick up overlapping matches.\n    // Stop when we get a match that ends at the string end, since no\n    // coercible string can be more right-ward without the same terminus.\n    let next\n    while ((next = re[t.COERCERTL].exec(version)) &&\n        (!match || match.index + match[0].length !== version.length)\n    ) {\n      if (!match ||\n            next.index + next[0].length !== match.index + match[0].length) {\n        match = next\n      }\n      re[t.COERCERTL].lastIndex = next.index + next[1].length + next[2].length\n    }\n    // leave it in a clean state\n    re[t.COERCERTL].lastIndex = -1\n  }\n\n  if (match === null) {\n    return null\n  }\n\n  return parse(`${match[2]}.${match[3] || '0'}.${match[4] || '0'}`, options)\n}\nmodule.exports = coerce\n"],"mappings":"AAAA,GAAMA,CAAAA,MAAM,CAAGC,OAAO,CAAC,mBAAD,CAAtB,CACA,GAAMC,CAAAA,KAAK,CAAGD,OAAO,CAAC,SAAD,CAArB,CACA,aAAkBA,OAAO,CAAC,gBAAD,CAAzB,CAAQE,EAAR,UAAQA,EAAR,CAAYC,CAAZ,UAAYA,CAAZ,CAEA,GAAMC,CAAAA,MAAM,CAAG,QAATA,CAAAA,MAAS,CAACC,OAAD,CAAUC,OAAV,CAAsB,CACnC,GAAID,OAAO,WAAYN,CAAAA,MAAvB,CAA+B,CAC7B,MAAOM,CAAAA,OAAP,CACD,CAED,GAAI,MAAOA,CAAAA,OAAP,GAAmB,QAAvB,CAAiC,CAC/BA,OAAO,CAAGE,MAAM,CAACF,OAAD,CAAhB,CACD,CAED,GAAI,MAAOA,CAAAA,OAAP,GAAmB,QAAvB,CAAiC,CAC/B,MAAO,KAAP,CACD,CAEDC,OAAO,CAAGA,OAAO,EAAI,EAArB,CAEA,GAAIE,CAAAA,KAAK,CAAG,IAAZ,CACA,GAAI,CAACF,OAAO,CAACG,GAAb,CAAkB,CAChBD,KAAK,CAAGH,OAAO,CAACG,KAAR,CAAcN,EAAE,CAACC,CAAC,CAACO,MAAH,CAAhB,CAAR,CACD,CAFD,IAEO,CACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAIC,CAAAA,IAAJ,CACA,MAAO,CAACA,IAAI,CAAGT,EAAE,CAACC,CAAC,CAACS,SAAH,CAAF,CAAgBC,IAAhB,CAAqBR,OAArB,CAAR,IACF,CAACG,KAAD,EAAUA,KAAK,CAACM,KAAN,CAAcN,KAAK,CAAC,CAAD,CAAL,CAASO,MAAvB,GAAkCV,OAAO,CAACU,MADlD,CAAP,CAEE,CACA,GAAI,CAACP,KAAD,EACEG,IAAI,CAACG,KAAL,CAAaH,IAAI,CAAC,CAAD,CAAJ,CAAQI,MAArB,GAAgCP,KAAK,CAACM,KAAN,CAAcN,KAAK,CAAC,CAAD,CAAL,CAASO,MAD7D,CACqE,CACnEP,KAAK,CAAGG,IAAR,CACD,CACDT,EAAE,CAACC,CAAC,CAACS,SAAH,CAAF,CAAgBI,SAAhB,CAA4BL,IAAI,CAACG,KAAL,CAAaH,IAAI,CAAC,CAAD,CAAJ,CAAQI,MAArB,CAA8BJ,IAAI,CAAC,CAAD,CAAJ,CAAQI,MAAlE,CACD,CACD;AACAb,EAAE,CAACC,CAAC,CAACS,SAAH,CAAF,CAAgBI,SAAhB,CAA4B,CAAC,CAA7B,CACD,CAED,GAAIR,KAAK,GAAK,IAAd,CAAoB,CAClB,MAAO,KAAP,CACD,CAED,MAAOP,CAAAA,KAAK,WAAIO,KAAK,CAAC,CAAD,CAAT,aAAgBA,KAAK,CAAC,CAAD,CAAL,EAAY,GAA5B,aAAmCA,KAAK,CAAC,CAAD,CAAL,EAAY,GAA/C,EAAsDF,OAAtD,CAAZ,CACD,CA9CD,CA+CAW,MAAM,CAACC,OAAP,CAAiBd,MAAjB"},"metadata":{},"sourceType":"script"}