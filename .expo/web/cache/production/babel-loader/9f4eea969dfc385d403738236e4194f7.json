{"ast":null,"code":"import{cond,sub,divide,multiply,sqrt,add,block,set,exp,sin,cos,eq,or,neq,and,lessThan,greaterThan,proc,min,abs}from'../base';import AnimatedValue from'../core/InternalAnimatedValue';var MAX_STEPS_MS=64;function spring(clock,state,config){var lastTime=cond(state.time,state.time,clock);var deltaTime=min(sub(clock,lastTime),MAX_STEPS_MS);var c=config.damping;var m=config.mass;var k=config.stiffness;var v0=multiply(-1,state.velocity);var x0=sub(config.toValue,state.position);var zeta=divide(c,multiply(2,sqrt(multiply(k,m))));// damping ratio\nvar omega0=sqrt(divide(k,m));// undamped angular frequency of the oscillator (rad/ms)\nvar omega1=multiply(omega0,sqrt(sub(1,multiply(zeta,zeta))));// exponential decay\nvar t=divide(deltaTime,1000);// in seconds\nvar sin1=sin(multiply(omega1,t));var cos1=cos(multiply(omega1,t));// under damped\nvar underDampedEnvelope=exp(multiply(-1,zeta,omega0,t));var underDampedFrag1=multiply(underDampedEnvelope,add(multiply(sin1,divide(add(v0,multiply(zeta,omega0,x0)),omega1)),multiply(x0,cos1)));var underDampedPosition=sub(config.toValue,underDampedFrag1);// This looks crazy -- it's actually just the derivative of the oscillation function\nvar underDampedVelocity=sub(multiply(zeta,omega0,underDampedFrag1),multiply(underDampedEnvelope,sub(multiply(cos1,add(v0,multiply(zeta,omega0,x0))),multiply(omega1,x0,sin1))));// critically damped\nvar criticallyDampedEnvelope=exp(multiply(-1,omega0,t));var criticallyDampedPosition=sub(config.toValue,multiply(criticallyDampedEnvelope,add(x0,multiply(add(v0,multiply(omega0,x0)),t))));var criticallyDampedVelocity=multiply(criticallyDampedEnvelope,add(multiply(v0,sub(multiply(t,omega0),1)),multiply(t,x0,omega0,omega0)));// conditions for stopping the spring animations\nvar prevPosition=state.prevPosition?state.prevPosition:new AnimatedValue(0);var isOvershooting=cond(and(config.overshootClamping,neq(config.stiffness,0)),cond(lessThan(prevPosition,config.toValue),greaterThan(state.position,config.toValue),lessThan(state.position,config.toValue)));var isVelocity=lessThan(abs(state.velocity),config.restSpeedThreshold);var isDisplacement=or(eq(config.stiffness,0),lessThan(abs(sub(config.toValue,state.position)),config.restDisplacementThreshold));return block([set(prevPosition,state.position),cond(lessThan(zeta,1),[set(state.position,underDampedPosition),set(state.velocity,underDampedVelocity)],[set(state.position,criticallyDampedPosition),set(state.velocity,criticallyDampedVelocity)]),set(state.time,clock),cond(or(isOvershooting,and(isVelocity,isDisplacement)),[cond(neq(config.stiffness,0),[set(state.velocity,0),set(state.position,config.toValue)]),set(state.finished,1)])]);}var procSpring=proc(function(finished,velocity,position,time,prevPosition,toValue,damping,mass,stiffness,overshootClamping,restSpeedThreshold,restDisplacementThreshold,clock){return spring(clock,{finished:finished,velocity:velocity,position:position,time:time,prevPosition:prevPosition},{toValue:toValue,damping:damping,mass:mass,stiffness:stiffness,overshootClamping:overshootClamping,restDisplacementThreshold:restDisplacementThreshold,restSpeedThreshold:restSpeedThreshold});});export default function springAnimation(clock,_ref,_ref2){var finished=_ref.finished,velocity=_ref.velocity,position=_ref.position,time=_ref.time,prevPosition=_ref.prevPosition;var toValue=_ref2.toValue,damping=_ref2.damping,mass=_ref2.mass,stiffness=_ref2.stiffness,overshootClamping=_ref2.overshootClamping,restDisplacementThreshold=_ref2.restDisplacementThreshold,restSpeedThreshold=_ref2.restSpeedThreshold;return procSpring(finished,velocity,position,time,prevPosition,toValue,damping,mass,stiffness,overshootClamping,restSpeedThreshold,restDisplacementThreshold,clock);}","map":{"version":3,"names":["cond","sub","divide","multiply","sqrt","add","block","set","exp","sin","cos","eq","or","neq","and","lessThan","greaterThan","proc","min","abs","AnimatedValue","MAX_STEPS_MS","spring","clock","state","config","lastTime","time","deltaTime","c","damping","m","mass","k","stiffness","v0","velocity","x0","toValue","position","zeta","omega0","omega1","t","sin1","cos1","underDampedEnvelope","underDampedFrag1","underDampedPosition","underDampedVelocity","criticallyDampedEnvelope","criticallyDampedPosition","criticallyDampedVelocity","prevPosition","isOvershooting","overshootClamping","isVelocity","restSpeedThreshold","isDisplacement","restDisplacementThreshold","finished","procSpring","springAnimation"],"sources":["/Users/fernandorojo/Developer/messing/rea-tree/node_modules/react-native-reanimated/lib/reanimated1/animations/spring.js"],"sourcesContent":["import { cond, sub, divide, multiply, sqrt, add, block, set, exp, sin, cos, eq, or, neq, and, lessThan, greaterThan, proc, min, abs } from '../base';\nimport AnimatedValue from '../core/InternalAnimatedValue';\nconst MAX_STEPS_MS = 64;\n\nfunction spring(clock, state, config) {\n  const lastTime = cond(state.time, state.time, clock);\n  const deltaTime = min(sub(clock, lastTime), MAX_STEPS_MS);\n  const c = config.damping;\n  const m = config.mass;\n  const k = config.stiffness;\n  const v0 = multiply(-1, state.velocity);\n  const x0 = sub(config.toValue, state.position);\n  const zeta = divide(c, multiply(2, sqrt(multiply(k, m)))); // damping ratio\n\n  const omega0 = sqrt(divide(k, m)); // undamped angular frequency of the oscillator (rad/ms)\n\n  const omega1 = multiply(omega0, sqrt(sub(1, multiply(zeta, zeta)))); // exponential decay\n\n  const t = divide(deltaTime, 1000); // in seconds\n\n  const sin1 = sin(multiply(omega1, t));\n  const cos1 = cos(multiply(omega1, t)); // under damped\n\n  const underDampedEnvelope = exp(multiply(-1, zeta, omega0, t));\n  const underDampedFrag1 = multiply(underDampedEnvelope, add(multiply(sin1, divide(add(v0, multiply(zeta, omega0, x0)), omega1)), multiply(x0, cos1)));\n  const underDampedPosition = sub(config.toValue, underDampedFrag1); // This looks crazy -- it's actually just the derivative of the oscillation function\n\n  const underDampedVelocity = sub(multiply(zeta, omega0, underDampedFrag1), multiply(underDampedEnvelope, sub(multiply(cos1, add(v0, multiply(zeta, omega0, x0))), multiply(omega1, x0, sin1)))); // critically damped\n\n  const criticallyDampedEnvelope = exp(multiply(-1, omega0, t));\n  const criticallyDampedPosition = sub(config.toValue, multiply(criticallyDampedEnvelope, add(x0, multiply(add(v0, multiply(omega0, x0)), t))));\n  const criticallyDampedVelocity = multiply(criticallyDampedEnvelope, add(multiply(v0, sub(multiply(t, omega0), 1)), multiply(t, x0, omega0, omega0))); // conditions for stopping the spring animations\n\n  const prevPosition = state.prevPosition ? state.prevPosition : new AnimatedValue(0);\n  const isOvershooting = cond(and(config.overshootClamping, neq(config.stiffness, 0)), cond(lessThan(prevPosition, config.toValue), greaterThan(state.position, config.toValue), lessThan(state.position, config.toValue)));\n  const isVelocity = lessThan(abs(state.velocity), config.restSpeedThreshold);\n  const isDisplacement = or(eq(config.stiffness, 0), lessThan(abs(sub(config.toValue, state.position)), config.restDisplacementThreshold));\n  return block([set(prevPosition, state.position), cond(lessThan(zeta, 1), [set(state.position, underDampedPosition), set(state.velocity, underDampedVelocity)], [set(state.position, criticallyDampedPosition), set(state.velocity, criticallyDampedVelocity)]), set(state.time, clock), cond(or(isOvershooting, and(isVelocity, isDisplacement)), [cond(neq(config.stiffness, 0), [set(state.velocity, 0), set(state.position, config.toValue)]), set(state.finished, 1)])]);\n}\n\nconst procSpring = proc((finished, velocity, position, time, prevPosition, toValue, damping, mass, stiffness, overshootClamping, restSpeedThreshold, restDisplacementThreshold, clock) => spring(clock, {\n  finished,\n  velocity,\n  position,\n  time,\n  prevPosition\n}, {\n  toValue,\n  damping,\n  mass,\n  stiffness,\n  overshootClamping,\n  restDisplacementThreshold,\n  restSpeedThreshold\n}));\nexport default function springAnimation(clock, {\n  finished,\n  velocity,\n  position,\n  time,\n  prevPosition\n}, {\n  toValue,\n  damping,\n  mass,\n  stiffness,\n  overshootClamping,\n  restDisplacementThreshold,\n  restSpeedThreshold\n}) {\n  return procSpring(finished, velocity, position, time, prevPosition, toValue, damping, mass, stiffness, overshootClamping, restSpeedThreshold, restDisplacementThreshold, clock);\n}"],"mappings":"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"},"metadata":{},"sourceType":"module"}