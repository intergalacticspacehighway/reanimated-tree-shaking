{"ast":null,"code":"'use strict';var path=require('path');var matchRelativePath=/^\\.\\.?[/\\\\]/;function isAbsolutePath(str){return path.posix.isAbsolute(str)||path.win32.isAbsolute(str);}function isRelativePath(str){return matchRelativePath.test(str);}function stringifyRequest(loaderContext,request){var splitted=request.split('!');var context=loaderContext.context||loaderContext.options&&loaderContext.options.context;return JSON.stringify(splitted.map(function(part){// First, separate singlePath from query, because the query might contain paths again\nvar splittedPart=part.match(/^(.*?)(\\?.*)/);var query=splittedPart?splittedPart[2]:'';var singlePath=splittedPart?splittedPart[1]:part;if(isAbsolutePath(singlePath)&&context){singlePath=path.relative(context,singlePath);if(isAbsolutePath(singlePath)){// If singlePath still matches an absolute path, singlePath was on a different drive than context.\n// In this case, we leave the path platform-specific without replacing any separators.\n// @see https://github.com/webpack/loader-utils/pull/14\nreturn singlePath+query;}if(isRelativePath(singlePath)===false){// Ensure that the relative path starts at least with ./ otherwise it would be a request into the modules directory (like node_modules).\nsinglePath='./'+singlePath;}}return singlePath.replace(/\\\\/g,'/')+query;}).join('!'));}module.exports=stringifyRequest;","map":{"version":3,"names":["path","require","matchRelativePath","isAbsolutePath","str","posix","isAbsolute","win32","isRelativePath","test","stringifyRequest","loaderContext","request","splitted","split","context","options","JSON","stringify","map","part","splittedPart","match","query","singlePath","relative","replace","join","module","exports"],"sources":["/Users/fernandorojo/Developer/messing/rea-tree/node_modules/@expo/webpack-config/node_modules/babel-loader/node_modules/loader-utils/lib/stringifyRequest.js"],"sourcesContent":["'use strict';\n\nconst path = require('path');\n\nconst matchRelativePath = /^\\.\\.?[/\\\\]/;\n\nfunction isAbsolutePath(str) {\n  return path.posix.isAbsolute(str) || path.win32.isAbsolute(str);\n}\n\nfunction isRelativePath(str) {\n  return matchRelativePath.test(str);\n}\n\nfunction stringifyRequest(loaderContext, request) {\n  const splitted = request.split('!');\n  const context =\n    loaderContext.context ||\n    (loaderContext.options && loaderContext.options.context);\n\n  return JSON.stringify(\n    splitted\n      .map((part) => {\n        // First, separate singlePath from query, because the query might contain paths again\n        const splittedPart = part.match(/^(.*?)(\\?.*)/);\n        const query = splittedPart ? splittedPart[2] : '';\n        let singlePath = splittedPart ? splittedPart[1] : part;\n\n        if (isAbsolutePath(singlePath) && context) {\n          singlePath = path.relative(context, singlePath);\n\n          if (isAbsolutePath(singlePath)) {\n            // If singlePath still matches an absolute path, singlePath was on a different drive than context.\n            // In this case, we leave the path platform-specific without replacing any separators.\n            // @see https://github.com/webpack/loader-utils/pull/14\n            return singlePath + query;\n          }\n\n          if (isRelativePath(singlePath) === false) {\n            // Ensure that the relative path starts at least with ./ otherwise it would be a request into the modules directory (like node_modules).\n            singlePath = './' + singlePath;\n          }\n        }\n\n        return singlePath.replace(/\\\\/g, '/') + query;\n      })\n      .join('!')\n  );\n}\n\nmodule.exports = stringifyRequest;\n"],"mappings":"AAAA,aAEA,GAAMA,CAAAA,IAAI,CAAGC,OAAO,CAAC,MAAD,CAApB,CAEA,GAAMC,CAAAA,iBAAiB,CAAG,aAA1B,CAEA,QAASC,CAAAA,cAAT,CAAwBC,GAAxB,CAA6B,CAC3B,MAAOJ,CAAAA,IAAI,CAACK,KAAL,CAAWC,UAAX,CAAsBF,GAAtB,GAA8BJ,IAAI,CAACO,KAAL,CAAWD,UAAX,CAAsBF,GAAtB,CAArC,CACD,CAED,QAASI,CAAAA,cAAT,CAAwBJ,GAAxB,CAA6B,CAC3B,MAAOF,CAAAA,iBAAiB,CAACO,IAAlB,CAAuBL,GAAvB,CAAP,CACD,CAED,QAASM,CAAAA,gBAAT,CAA0BC,aAA1B,CAAyCC,OAAzC,CAAkD,CAChD,GAAMC,CAAAA,QAAQ,CAAGD,OAAO,CAACE,KAAR,CAAc,GAAd,CAAjB,CACA,GAAMC,CAAAA,OAAO,CACXJ,aAAa,CAACI,OAAd,EACCJ,aAAa,CAACK,OAAd,EAAyBL,aAAa,CAACK,OAAd,CAAsBD,OAFlD,CAIA,MAAOE,CAAAA,IAAI,CAACC,SAAL,CACLL,QAAQ,CACLM,GADH,CACO,SAACC,IAAD,CAAU,CACb;AACA,GAAMC,CAAAA,YAAY,CAAGD,IAAI,CAACE,KAAL,CAAW,cAAX,CAArB,CACA,GAAMC,CAAAA,KAAK,CAAGF,YAAY,CAAGA,YAAY,CAAC,CAAD,CAAf,CAAqB,EAA/C,CACA,GAAIG,CAAAA,UAAU,CAAGH,YAAY,CAAGA,YAAY,CAAC,CAAD,CAAf,CAAqBD,IAAlD,CAEA,GAAIjB,cAAc,CAACqB,UAAD,CAAd,EAA8BT,OAAlC,CAA2C,CACzCS,UAAU,CAAGxB,IAAI,CAACyB,QAAL,CAAcV,OAAd,CAAuBS,UAAvB,CAAb,CAEA,GAAIrB,cAAc,CAACqB,UAAD,CAAlB,CAAgC,CAC9B;AACA;AACA;AACA,MAAOA,CAAAA,UAAU,CAAGD,KAApB,CACD,CAED,GAAIf,cAAc,CAACgB,UAAD,CAAd,GAA+B,KAAnC,CAA0C,CACxC;AACAA,UAAU,CAAG,KAAOA,UAApB,CACD,CACF,CAED,MAAOA,CAAAA,UAAU,CAACE,OAAX,CAAmB,KAAnB,CAA0B,GAA1B,EAAiCH,KAAxC,CACD,CAxBH,EAyBGI,IAzBH,CAyBQ,GAzBR,CADK,CAAP,CA4BD,CAEDC,MAAM,CAACC,OAAP,CAAiBnB,gBAAjB"},"metadata":{},"sourceType":"script"}