{"ast":null,"code":"\"use strict\";/**\n * @typedef {[number, boolean]} RangeValue\n */ /**\n * @callback RangeValueCallback\n * @param {RangeValue} rangeValue\n * @returns {boolean}\n */var _slicedToArray=require(\"/Users/fernandorojo/Developer/messing/rea-tree/node_modules/next/dist/compiled/@babel/runtime/helpers/slicedToArray\");var _classCallCheck=require(\"/Users/fernandorojo/Developer/messing/rea-tree/node_modules/next/dist/compiled/@babel/runtime/helpers/classCallCheck\");var _createClass=require(\"/Users/fernandorojo/Developer/messing/rea-tree/node_modules/next/dist/compiled/@babel/runtime/helpers/createClass\");var Range=/*#__PURE__*/function(){function Range(){_classCallCheck(this,Range);/** @type {Array<RangeValue>} */this._left=[];/** @type {Array<RangeValue>} */this._right=[];}/**\n   * @param {number} value\n   * @param {boolean=} exclusive\n   */_createClass(Range,[{key:\"left\",value:function left(value){var exclusive=arguments.length>1&&arguments[1]!==undefined?arguments[1]:false;this._left.push([value,exclusive]);}/**\n   * @param {number} value\n   * @param {boolean=} exclusive\n   */},{key:\"right\",value:function right(value){var exclusive=arguments.length>1&&arguments[1]!==undefined?arguments[1]:false;this._right.push([value,exclusive]);}/**\n   * @param {boolean} logic is not logic applied\n   * @return {string} \"smart\" range string representation\n   */},{key:\"format\",value:function format(){var logic=arguments.length>0&&arguments[0]!==undefined?arguments[0]:true;var _Range$getRangeValue=Range.getRangeValue(this._left,logic),_Range$getRangeValue2=_slicedToArray(_Range$getRangeValue,2),start=_Range$getRangeValue2[0],leftExclusive=_Range$getRangeValue2[1];var _Range$getRangeValue3=Range.getRangeValue(this._right,!logic),_Range$getRangeValue4=_slicedToArray(_Range$getRangeValue3,2),end=_Range$getRangeValue4[0],rightExclusive=_Range$getRangeValue4[1];if(!Number.isFinite(start)&&!Number.isFinite(end)){return'';}var realStart=leftExclusive?start+1:start;var realEnd=rightExclusive?end-1:end;// e.g. 5 < x < 7, 5 < x <= 6, 6 <= x <= 6\nif(realStart===realEnd){return\"should be \".concat(logic?'':'!',\"= \").concat(realStart);}// e.g. 4 < x < ∞\nif(Number.isFinite(start)&&!Number.isFinite(end)){return Range.formatLeft(start,logic,leftExclusive);}// e.g. ∞ < x < 4\nif(!Number.isFinite(start)&&Number.isFinite(end)){return Range.formatRight(end,logic,rightExclusive);}return Range.formatRange(start,end,leftExclusive,rightExclusive,logic);}}],[{key:\"getOperator\",value:/**\n   * @param {\"left\" | \"right\"} side\n   * @param {boolean} exclusive\n   * @returns {\">\" | \">=\" | \"<\" | \"<=\"}\n   */function getOperator(side,exclusive){if(side==='left'){return exclusive?'>':'>=';}return exclusive?'<':'<=';}/**\n   * @param {number} value\n   * @param {boolean} logic is not logic applied\n   * @param {boolean} exclusive is range exclusive\n   * @returns {string}\n   */},{key:\"formatRight\",value:function formatRight(value,logic,exclusive){if(logic===false){return Range.formatLeft(value,!logic,!exclusive);}return\"should be \".concat(Range.getOperator('right',exclusive),\" \").concat(value);}/**\n   * @param {number} value\n   * @param {boolean} logic is not logic applied\n   * @param {boolean} exclusive is range exclusive\n   * @returns {string}\n   */},{key:\"formatLeft\",value:function formatLeft(value,logic,exclusive){if(logic===false){return Range.formatRight(value,!logic,!exclusive);}return\"should be \".concat(Range.getOperator('left',exclusive),\" \").concat(value);}/**\n   * @param {number} start left side value\n   * @param {number} end right side value\n   * @param {boolean} startExclusive is range exclusive from left side\n   * @param {boolean} endExclusive is range exclusive from right side\n   * @param {boolean} logic is not logic applied\n   * @returns {string}\n   */},{key:\"formatRange\",value:function formatRange(start,end,startExclusive,endExclusive,logic){var result='should be';result+=\" \".concat(Range.getOperator(logic?'left':'right',logic?startExclusive:!startExclusive),\" \").concat(start,\" \");result+=logic?'and':'or';result+=\" \".concat(Range.getOperator(logic?'right':'left',logic?endExclusive:!endExclusive),\" \").concat(end);return result;}/**\n   * @param {Array<RangeValue>} values\n   * @param {boolean} logic is not logic applied\n   * @return {RangeValue} computed value and it's exclusive flag\n   */},{key:\"getRangeValue\",value:function getRangeValue(values,logic){var minMax=logic?Infinity:-Infinity;var j=-1;var predicate=logic?/** @type {RangeValueCallback} */function(_ref){var _ref2=_slicedToArray(_ref,1),value=_ref2[0];return value<=minMax;}:/** @type {RangeValueCallback} */function(_ref3){var _ref4=_slicedToArray(_ref3,1),value=_ref4[0];return value>=minMax;};for(var i=0;i<values.length;i++){if(predicate(values[i])){var _values$i=_slicedToArray(values[i],1);minMax=_values$i[0];j=i;}}if(j>-1){return values[j];}return[Infinity,true];}}]);return Range;}();module.exports=Range;","map":{"version":3,"names":["Range","_left","_right","value","exclusive","push","logic","getRangeValue","start","leftExclusive","end","rightExclusive","Number","isFinite","realStart","realEnd","formatLeft","formatRight","formatRange","side","getOperator","startExclusive","endExclusive","result","values","minMax","Infinity","j","predicate","i","length","module","exports"],"sources":["/Users/fernandorojo/Developer/messing/rea-tree/node_modules/@expo/webpack-config/node_modules/babel-loader/node_modules/schema-utils/dist/util/Range.js"],"sourcesContent":["\"use strict\";\n\n/**\n * @typedef {[number, boolean]} RangeValue\n */\n\n/**\n * @callback RangeValueCallback\n * @param {RangeValue} rangeValue\n * @returns {boolean}\n */\nclass Range {\n  /**\n   * @param {\"left\" | \"right\"} side\n   * @param {boolean} exclusive\n   * @returns {\">\" | \">=\" | \"<\" | \"<=\"}\n   */\n  static getOperator(side, exclusive) {\n    if (side === 'left') {\n      return exclusive ? '>' : '>=';\n    }\n\n    return exclusive ? '<' : '<=';\n  }\n  /**\n   * @param {number} value\n   * @param {boolean} logic is not logic applied\n   * @param {boolean} exclusive is range exclusive\n   * @returns {string}\n   */\n\n\n  static formatRight(value, logic, exclusive) {\n    if (logic === false) {\n      return Range.formatLeft(value, !logic, !exclusive);\n    }\n\n    return `should be ${Range.getOperator('right', exclusive)} ${value}`;\n  }\n  /**\n   * @param {number} value\n   * @param {boolean} logic is not logic applied\n   * @param {boolean} exclusive is range exclusive\n   * @returns {string}\n   */\n\n\n  static formatLeft(value, logic, exclusive) {\n    if (logic === false) {\n      return Range.formatRight(value, !logic, !exclusive);\n    }\n\n    return `should be ${Range.getOperator('left', exclusive)} ${value}`;\n  }\n  /**\n   * @param {number} start left side value\n   * @param {number} end right side value\n   * @param {boolean} startExclusive is range exclusive from left side\n   * @param {boolean} endExclusive is range exclusive from right side\n   * @param {boolean} logic is not logic applied\n   * @returns {string}\n   */\n\n\n  static formatRange(start, end, startExclusive, endExclusive, logic) {\n    let result = 'should be';\n    result += ` ${Range.getOperator(logic ? 'left' : 'right', logic ? startExclusive : !startExclusive)} ${start} `;\n    result += logic ? 'and' : 'or';\n    result += ` ${Range.getOperator(logic ? 'right' : 'left', logic ? endExclusive : !endExclusive)} ${end}`;\n    return result;\n  }\n  /**\n   * @param {Array<RangeValue>} values\n   * @param {boolean} logic is not logic applied\n   * @return {RangeValue} computed value and it's exclusive flag\n   */\n\n\n  static getRangeValue(values, logic) {\n    let minMax = logic ? Infinity : -Infinity;\n    let j = -1;\n    const predicate = logic ?\n    /** @type {RangeValueCallback} */\n    ([value]) => value <= minMax :\n    /** @type {RangeValueCallback} */\n    ([value]) => value >= minMax;\n\n    for (let i = 0; i < values.length; i++) {\n      if (predicate(values[i])) {\n        [minMax] = values[i];\n        j = i;\n      }\n    }\n\n    if (j > -1) {\n      return values[j];\n    }\n\n    return [Infinity, true];\n  }\n\n  constructor() {\n    /** @type {Array<RangeValue>} */\n    this._left = [];\n    /** @type {Array<RangeValue>} */\n\n    this._right = [];\n  }\n  /**\n   * @param {number} value\n   * @param {boolean=} exclusive\n   */\n\n\n  left(value, exclusive = false) {\n    this._left.push([value, exclusive]);\n  }\n  /**\n   * @param {number} value\n   * @param {boolean=} exclusive\n   */\n\n\n  right(value, exclusive = false) {\n    this._right.push([value, exclusive]);\n  }\n  /**\n   * @param {boolean} logic is not logic applied\n   * @return {string} \"smart\" range string representation\n   */\n\n\n  format(logic = true) {\n    const [start, leftExclusive] = Range.getRangeValue(this._left, logic);\n    const [end, rightExclusive] = Range.getRangeValue(this._right, !logic);\n\n    if (!Number.isFinite(start) && !Number.isFinite(end)) {\n      return '';\n    }\n\n    const realStart = leftExclusive ? start + 1 : start;\n    const realEnd = rightExclusive ? end - 1 : end; // e.g. 5 < x < 7, 5 < x <= 6, 6 <= x <= 6\n\n    if (realStart === realEnd) {\n      return `should be ${logic ? '' : '!'}= ${realStart}`;\n    } // e.g. 4 < x < ∞\n\n\n    if (Number.isFinite(start) && !Number.isFinite(end)) {\n      return Range.formatLeft(start, logic, leftExclusive);\n    } // e.g. ∞ < x < 4\n\n\n    if (!Number.isFinite(start) && Number.isFinite(end)) {\n      return Range.formatRight(end, logic, rightExclusive);\n    }\n\n    return Range.formatRange(start, end, leftExclusive, rightExclusive, logic);\n  }\n\n}\n\nmodule.exports = Range;"],"mappings":"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"},"metadata":{},"sourceType":"script"}