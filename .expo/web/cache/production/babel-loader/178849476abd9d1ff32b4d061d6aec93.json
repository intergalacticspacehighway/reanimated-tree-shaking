{"ast":null,"code":"\"use strict\";var _regeneratorRuntime=require(\"/Users/fernandorojo/Developer/messing/rea-tree/node_modules/next/dist/compiled/@babel/runtime/regenerator\");var _slicedToArray=require(\"/Users/fernandorojo/Developer/messing/rea-tree/node_modules/next/dist/compiled/@babel/runtime/helpers/slicedToArray\");var _defineProperty=require(\"/Users/fernandorojo/Developer/messing/rea-tree/node_modules/next/dist/compiled/@babel/runtime/helpers/defineProperty\");var _asyncToGenerator=require(\"/Users/fernandorojo/Developer/messing/rea-tree/node_modules/next/dist/compiled/@babel/runtime/helpers/asyncToGenerator\");function ownKeys(object,enumerableOnly){var keys=Object.keys(object);if(Object.getOwnPropertySymbols){var symbols=Object.getOwnPropertySymbols(object);enumerableOnly&&(symbols=symbols.filter(function(sym){return Object.getOwnPropertyDescriptor(object,sym).enumerable;})),keys.push.apply(keys,symbols);}return keys;}function _objectSpread(target){for(var i=1;i<arguments.length;i++){var source=null!=arguments[i]?arguments[i]:{};i%2?ownKeys(Object(source),!0).forEach(function(key){_defineProperty(target,key,source[key]);}):Object.getOwnPropertyDescriptors?Object.defineProperties(target,Object.getOwnPropertyDescriptors(source)):ownKeys(Object(source)).forEach(function(key){Object.defineProperty(target,key,Object.getOwnPropertyDescriptor(source,key));});}return target;}function _createForOfIteratorHelper(o,allowArrayLike){var it=typeof Symbol!==\"undefined\"&&o[Symbol.iterator]||o[\"@@iterator\"];if(!it){if(Array.isArray(o)||(it=_unsupportedIterableToArray(o))||allowArrayLike&&o&&typeof o.length===\"number\"){if(it)o=it;var i=0;var F=function F(){};return{s:F,n:function n(){if(i>=o.length)return{done:true};return{done:false,value:o[i++]};},e:function e(_e){throw _e;},f:F};}throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");}var normalCompletion=true,didErr=false,err;return{s:function s(){it=it.call(o);},n:function n(){var step=it.next();normalCompletion=step.done;return step;},e:function e(_e2){didErr=true;err=_e2;},f:function f(){try{if(!normalCompletion&&it[\"return\"]!=null)it[\"return\"]();}finally{if(didErr)throw err;}}};}function _unsupportedIterableToArray(o,minLen){if(!o)return;if(typeof o===\"string\")return _arrayLikeToArray(o,minLen);var n=Object.prototype.toString.call(o).slice(8,-1);if(n===\"Object\"&&o.constructor)n=o.constructor.name;if(n===\"Map\"||n===\"Set\")return Array.from(o);if(n===\"Arguments\"||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n))return _arrayLikeToArray(o,minLen);}function _arrayLikeToArray(arr,len){if(len==null||len>arr.length)len=arr.length;for(var i=0,arr2=new Array(len);i<len;i++){arr2[i]=arr[i];}return arr2;}Object.defineProperty(exports,\"__esModule\",{value:true});exports.addMetaDataItemToMainApplication=addMetaDataItemToMainApplication;exports.addUsesLibraryItemToMainApplication=addUsesLibraryItemToMainApplication;exports.ensureToolsAvailable=ensureToolsAvailable;exports.findMetaDataItem=findMetaDataItem;exports.findUsesLibraryItem=findUsesLibraryItem;exports.getMainActivity=getMainActivity;exports.getMainActivityOrThrow=getMainActivityOrThrow;exports.getMainApplication=getMainApplication;exports.getMainApplicationMetaDataValue=getMainApplicationMetaDataValue;exports.getMainApplicationOrThrow=getMainApplicationOrThrow;exports.getRunnableActivity=getRunnableActivity;exports.prefixAndroidKeys=prefixAndroidKeys;exports.readAndroidManifestAsync=readAndroidManifestAsync;exports.removeMetaDataItemFromMainApplication=removeMetaDataItemFromMainApplication;exports.removeUsesLibraryItemFromMainApplication=removeUsesLibraryItemFromMainApplication;exports.writeAndroidManifestAsync=writeAndroidManifestAsync;function _assert(){var data=_interopRequireDefault(require(\"assert\"));_assert=function _assert(){return data;};return data;}function _fs(){var data=_interopRequireDefault(require(\"fs\"));_fs=function _fs(){return data;};return data;}function _path(){var data=_interopRequireDefault(require(\"path\"));_path=function _path(){return data;};return data;}function XML(){var data=_interopRequireWildcard(require(\"../utils/XML\"));XML=function XML(){return data;};return data;}function _getRequireWildcardCache(nodeInterop){if(typeof WeakMap!==\"function\")return null;var cacheBabelInterop=new WeakMap();var cacheNodeInterop=new WeakMap();return(_getRequireWildcardCache=function _getRequireWildcardCache(nodeInterop){return nodeInterop?cacheNodeInterop:cacheBabelInterop;})(nodeInterop);}function _interopRequireWildcard(obj,nodeInterop){if(!nodeInterop&&obj&&obj.__esModule){return obj;}if(obj===null||typeof obj!==\"object\"&&typeof obj!==\"function\"){return{\"default\":obj};}var cache=_getRequireWildcardCache(nodeInterop);if(cache&&cache.has(obj)){return cache.get(obj);}var newObj={};var hasPropertyDescriptor=Object.defineProperty&&Object.getOwnPropertyDescriptor;for(var key in obj){if(key!==\"default\"&&Object.prototype.hasOwnProperty.call(obj,key)){var desc=hasPropertyDescriptor?Object.getOwnPropertyDescriptor(obj,key):null;if(desc&&(desc.get||desc.set)){Object.defineProperty(newObj,key,desc);}else{newObj[key]=obj[key];}}}newObj[\"default\"]=obj;if(cache){cache.set(obj,newObj);}return newObj;}function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{\"default\":obj};}function writeAndroidManifestAsync(_x,_x2){return _writeAndroidManifestAsync.apply(this,arguments);}function _writeAndroidManifestAsync(){_writeAndroidManifestAsync=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(manifestPath,androidManifest){var manifestXml;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:manifestXml=XML().format(androidManifest);_context.next=3;return _fs()[\"default\"].promises.mkdir(_path()[\"default\"].dirname(manifestPath),{recursive:true});case 3:_context.next=5;return _fs()[\"default\"].promises.writeFile(manifestPath,manifestXml);case 5:case\"end\":return _context.stop();}}},_callee);}));return _writeAndroidManifestAsync.apply(this,arguments);}function readAndroidManifestAsync(_x3){return _readAndroidManifestAsync.apply(this,arguments);}function _readAndroidManifestAsync(){_readAndroidManifestAsync=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee2(manifestPath){var xml;return _regeneratorRuntime.wrap(function _callee2$(_context2){while(1){switch(_context2.prev=_context2.next){case 0:_context2.next=2;return XML().readXMLAsync({path:manifestPath});case 2:xml=_context2.sent;if(isManifest(xml)){_context2.next=5;break;}throw new Error('Invalid manifest found at: '+manifestPath);case 5:return _context2.abrupt(\"return\",xml);case 6:case\"end\":return _context2.stop();}}},_callee2);}));return _readAndroidManifestAsync.apply(this,arguments);}function isManifest(xml){// TODO: Maybe more validation\nreturn!!xml.manifest;}/** Returns the `manifest.application` tag ending in `.MainApplication` */function getMainApplication(androidManifest){var _androidManifest$mani,_androidManifest$mani2,_androidManifest$mani3;return(_androidManifest$mani=androidManifest===null||androidManifest===void 0?void 0:(_androidManifest$mani2=androidManifest.manifest)===null||_androidManifest$mani2===void 0?void 0:(_androidManifest$mani3=_androidManifest$mani2.application)===null||_androidManifest$mani3===void 0?void 0:_androidManifest$mani3.filter(function(e){var _e$$;return e===null||e===void 0?void 0:(_e$$=e.$)===null||_e$$===void 0?void 0:_e$$['android:name'].endsWith('.MainApplication');})[0])!==null&&_androidManifest$mani!==void 0?_androidManifest$mani:null;}function getMainApplicationOrThrow(androidManifest){var mainApplication=getMainApplication(androidManifest);(0,_assert()[\"default\"])(mainApplication,'AndroidManifest.xml is missing the required MainApplication element');return mainApplication;}function getMainActivityOrThrow(androidManifest){var mainActivity=getMainActivity(androidManifest);(0,_assert()[\"default\"])(mainActivity,'AndroidManifest.xml is missing the required MainActivity element');return mainActivity;}function getRunnableActivity(androidManifest){var _androidManifest$mani4,_androidManifest$mani5,_androidManifest$mani6,_androidManifest$mani7,_androidManifest$mani8;// Get enabled activities\nvar enabledActivities=androidManifest===null||androidManifest===void 0?void 0:(_androidManifest$mani4=androidManifest.manifest)===null||_androidManifest$mani4===void 0?void 0:(_androidManifest$mani5=_androidManifest$mani4.application)===null||_androidManifest$mani5===void 0?void 0:(_androidManifest$mani6=_androidManifest$mani5[0])===null||_androidManifest$mani6===void 0?void 0:(_androidManifest$mani7=_androidManifest$mani6.activity)===null||_androidManifest$mani7===void 0?void 0:(_androidManifest$mani8=_androidManifest$mani7.filter)===null||_androidManifest$mani8===void 0?void 0:_androidManifest$mani8.call(_androidManifest$mani7,function(e){return e.$['android:enabled']!=='false'&&e.$['android:enabled']!==false;});if(!enabledActivities){return null;}// Get the activity that has a runnable intent-filter\nvar _iterator=_createForOfIteratorHelper(enabledActivities),_step;try{for(_iterator.s();!(_step=_iterator.n()).done;){var activity=_step.value;if(Array.isArray(activity['intent-filter'])){var _iterator2=_createForOfIteratorHelper(activity['intent-filter']),_step2;try{for(_iterator2.s();!(_step2=_iterator2.n()).done;){var intentFilter=_step2.value;var _intentFilter$action,_intentFilter$categor;if((_intentFilter$action=intentFilter.action)!==null&&_intentFilter$action!==void 0&&_intentFilter$action.find(function(action){return action.$['android:name']==='android.intent.action.MAIN';})&&(_intentFilter$categor=intentFilter.category)!==null&&_intentFilter$categor!==void 0&&_intentFilter$categor.find(function(category){return category.$['android:name']==='android.intent.category.LAUNCHER';})){return activity;}}}catch(err){_iterator2.e(err);}finally{_iterator2.f();}}}}catch(err){_iterator.e(err);}finally{_iterator.f();}return null;}function getMainActivity(androidManifest){var _androidManifest$mani9,_androidManifest$mani10,_androidManifest$mani11,_androidManifest$mani12,_androidManifest$mani13,_mainActivity$;var mainActivity=androidManifest===null||androidManifest===void 0?void 0:(_androidManifest$mani9=androidManifest.manifest)===null||_androidManifest$mani9===void 0?void 0:(_androidManifest$mani10=_androidManifest$mani9.application)===null||_androidManifest$mani10===void 0?void 0:(_androidManifest$mani11=_androidManifest$mani10[0])===null||_androidManifest$mani11===void 0?void 0:(_androidManifest$mani12=_androidManifest$mani11.activity)===null||_androidManifest$mani12===void 0?void 0:(_androidManifest$mani13=_androidManifest$mani12.filter)===null||_androidManifest$mani13===void 0?void 0:_androidManifest$mani13.call(_androidManifest$mani12,function(e){return e.$['android:name']==='.MainActivity';});return(_mainActivity$=mainActivity===null||mainActivity===void 0?void 0:mainActivity[0])!==null&&_mainActivity$!==void 0?_mainActivity$:null;}function addMetaDataItemToMainApplication(mainApplication,itemName,itemValue){var itemType=arguments.length>3&&arguments[3]!==undefined?arguments[3]:'value';var existingMetaDataItem;var newItem={$:prefixAndroidKeys(_defineProperty({name:itemName},itemType,itemValue))};if(mainApplication['meta-data']){existingMetaDataItem=mainApplication['meta-data'].filter(function(e){return e.$['android:name']===itemName;});if(existingMetaDataItem.length){existingMetaDataItem[0].$[\"android:\".concat(itemType)]=itemValue;}else{mainApplication['meta-data'].push(newItem);}}else{mainApplication['meta-data']=[newItem];}return mainApplication;}function removeMetaDataItemFromMainApplication(mainApplication,itemName){var index=findMetaDataItem(mainApplication,itemName);if(mainApplication!==null&&mainApplication!==void 0&&mainApplication['meta-data']&&index>-1){mainApplication['meta-data'].splice(index,1);}return mainApplication;}function findApplicationSubItem(mainApplication,category,itemName){var parent=mainApplication[category];if(Array.isArray(parent)){var index=parent.findIndex(function(e){return e.$['android:name']===itemName;});return index;}return-1;}function findMetaDataItem(mainApplication,itemName){return findApplicationSubItem(mainApplication,'meta-data',itemName);}function findUsesLibraryItem(mainApplication,itemName){return findApplicationSubItem(mainApplication,'uses-library',itemName);}function getMainApplicationMetaDataValue(androidManifest,name){var mainApplication=getMainApplication(androidManifest);if(mainApplication!==null&&mainApplication!==void 0&&mainApplication.hasOwnProperty('meta-data')){var _mainApplication$meta,_item$$$androidValue;var item=mainApplication===null||mainApplication===void 0?void 0:(_mainApplication$meta=mainApplication['meta-data'])===null||_mainApplication$meta===void 0?void 0:_mainApplication$meta.find(function(e){return e.$['android:name']===name;});return(_item$$$androidValue=item===null||item===void 0?void 0:item.$['android:value'])!==null&&_item$$$androidValue!==void 0?_item$$$androidValue:null;}return null;}function addUsesLibraryItemToMainApplication(mainApplication,item){var existingMetaDataItem;var newItem={$:prefixAndroidKeys(item)};if(mainApplication['uses-library']){existingMetaDataItem=mainApplication['uses-library'].filter(function(e){return e.$['android:name']===item.name;});if(existingMetaDataItem.length){existingMetaDataItem[0].$=newItem.$;}else{mainApplication['uses-library'].push(newItem);}}else{mainApplication['uses-library']=[newItem];}return mainApplication;}function removeUsesLibraryItemFromMainApplication(mainApplication,itemName){var index=findUsesLibraryItem(mainApplication,itemName);if(mainApplication!==null&&mainApplication!==void 0&&mainApplication['uses-library']&&index>-1){mainApplication['uses-library'].splice(index,1);}return mainApplication;}function prefixAndroidKeys(head){// prefix all keys with `android:`\nreturn Object.entries(head).reduce(function(prev,_ref){var _ref2=_slicedToArray(_ref,2),key=_ref2[0],curr=_ref2[1];return _objectSpread(_objectSpread({},prev),{},_defineProperty({},\"android:\".concat(key),curr));},{});}/**\n * Ensure the `tools:*` namespace is available in the manifest.\n *\n * @param manifest AndroidManifest.xml\n * @returns manifest with the `tools:*` namespace available\n */function ensureToolsAvailable(manifest){return ensureManifestHasNamespace(manifest,{namespace:'xmlns:tools',url:'http://schemas.android.com/tools'});}/**\n * Ensure a particular namespace is available in the manifest.\n *\n * @param manifest `AndroidManifest.xml`\n * @returns manifest with the provided namespace available\n */function ensureManifestHasNamespace(manifest,_ref3){var namespace=_ref3.namespace,url=_ref3.url;var _manifest$manifest,_manifest$manifest$$;if(manifest!==null&&manifest!==void 0&&(_manifest$manifest=manifest.manifest)!==null&&_manifest$manifest!==void 0&&(_manifest$manifest$$=_manifest$manifest.$)!==null&&_manifest$manifest$$!==void 0&&_manifest$manifest$$[namespace]){return manifest;}manifest.manifest.$[namespace]=url;return manifest;}","map":{"version":3,"sources":["../../src/android/Manifest.ts"],"names":["manifestXml","XML","path","recursive","fs","xml","manifestPath","isManifest","e","mainApplication","getMainApplication","mainActivity","getMainActivity","enabledActivities","androidManifest","Array","activity","action","intentFilter","category","itemType","newItem","$","prefixAndroidKeys","name","itemValue","existingMetaDataItem","index","findMetaDataItem","parent","findApplicationSubItem","item","findUsesLibraryItem","curr","ensureManifestHasNamespace","namespace","url","manifest"],"mappings":"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","sourcesContent":["import assert from 'assert';\nimport fs from 'fs';\nimport path from 'path';\n\nimport * as XML from '../utils/XML';\n\nexport type StringBoolean = 'true' | 'false';\n\ntype ManifestMetaDataAttributes = AndroidManifestAttributes & {\n  'android:value'?: string;\n  'android:resource'?: string;\n};\n\ntype AndroidManifestAttributes = {\n  'android:name': string | 'android.intent.action.VIEW';\n  'tools:node'?: string | 'remove';\n};\n\ntype ManifestAction = {\n  $: AndroidManifestAttributes;\n};\n\ntype ManifestCategory = {\n  $: AndroidManifestAttributes;\n};\n\ntype ManifestData = {\n  $: {\n    [key: string]: string | undefined;\n    'android:host'?: string;\n    'android:pathPrefix'?: string;\n    'android:scheme'?: string;\n  };\n};\n\ntype ManifestReceiver = {\n  $: AndroidManifestAttributes & {\n    'android:exported'?: StringBoolean;\n    'android:enabled'?: StringBoolean;\n  };\n  'intent-filter'?: ManifestIntentFilter[];\n};\n\nexport type ManifestIntentFilter = {\n  $?: {\n    'android:autoVerify'?: StringBoolean;\n    'data-generated'?: StringBoolean;\n  };\n  action?: ManifestAction[];\n  data?: ManifestData[];\n  category?: ManifestCategory[];\n};\n\nexport type ManifestMetaData = {\n  $: ManifestMetaDataAttributes;\n};\n\ntype ManifestServiceAttributes = AndroidManifestAttributes & {\n  'android:enabled'?: StringBoolean;\n  'android:exported'?: StringBoolean;\n  'android:permission'?: string;\n  // ...\n};\n\ntype ManifestService = {\n  $: ManifestServiceAttributes;\n  'intent-filter'?: ManifestIntentFilter[];\n};\n\ntype ManifestApplicationAttributes = {\n  'android:name': string | '.MainApplication';\n  'android:icon'?: string;\n  'android:label'?: string;\n  'android:allowBackup'?: StringBoolean;\n  'android:largeHeap'?: StringBoolean;\n  'android:requestLegacyExternalStorage'?: StringBoolean;\n  'android:usesCleartextTraffic'?: StringBoolean;\n  [key: string]: string | undefined;\n};\n\nexport type ManifestActivity = {\n  $: ManifestApplicationAttributes & {\n    'android:exported'?: StringBoolean;\n    'android:launchMode'?: string;\n    'android:theme'?: string;\n    'android:windowSoftInputMode'?:\n      | string\n      | 'stateUnspecified'\n      | 'stateUnchanged'\n      | 'stateHidden'\n      | 'stateAlwaysHidden'\n      | 'stateVisible'\n      | 'stateAlwaysVisible'\n      | 'adjustUnspecified'\n      | 'adjustResize'\n      | 'adjustPan';\n    [key: string]: string | undefined;\n  };\n  'intent-filter'?: ManifestIntentFilter[];\n  // ...\n};\n\nexport type ManifestUsesLibrary = {\n  $: AndroidManifestAttributes & {\n    'android:required'?: StringBoolean;\n  };\n};\n\nexport type ManifestApplication = {\n  $: ManifestApplicationAttributes;\n  activity?: ManifestActivity[];\n  service?: ManifestService[];\n  receiver?: ManifestReceiver[];\n  'meta-data'?: ManifestMetaData[];\n  'uses-library'?: ManifestUsesLibrary[];\n  // ...\n};\n\ntype ManifestPermission = {\n  $: AndroidManifestAttributes & {\n    'android:protectionLevel'?: string | 'signature';\n  };\n};\n\nexport type ManifestUsesPermission = {\n  $: AndroidManifestAttributes;\n};\n\ntype ManifestUsesFeature = {\n  $: AndroidManifestAttributes & {\n    'android:glEsVersion'?: string;\n    'android:required': StringBoolean;\n  };\n};\n\nexport type AndroidManifest = {\n  manifest: {\n    // Probably more, but this is currently all we'd need for most cases in Expo.\n    $: {\n      'xmlns:android': string;\n      'xmlns:tools'?: string;\n      package?: string;\n      [key: string]: string | undefined;\n    };\n    permission?: ManifestPermission[];\n    'uses-permission'?: ManifestUsesPermission[];\n    'uses-permission-sdk-23'?: ManifestUsesPermission[];\n    'uses-feature'?: ManifestUsesFeature[];\n    application?: ManifestApplication[];\n  };\n};\n\nexport async function writeAndroidManifestAsync(\n  manifestPath: string,\n  androidManifest: AndroidManifest\n): Promise<void> {\n  const manifestXml = XML.format(androidManifest);\n  await fs.promises.mkdir(path.dirname(manifestPath), { recursive: true });\n  await fs.promises.writeFile(manifestPath, manifestXml);\n}\n\nexport async function readAndroidManifestAsync(manifestPath: string): Promise<AndroidManifest> {\n  const xml = await XML.readXMLAsync({ path: manifestPath });\n  if (!isManifest(xml)) {\n    throw new Error('Invalid manifest found at: ' + manifestPath);\n  }\n  return xml;\n}\n\nfunction isManifest(xml: XML.XMLObject): xml is AndroidManifest {\n  // TODO: Maybe more validation\n  return !!xml.manifest;\n}\n\n/** Returns the `manifest.application` tag ending in `.MainApplication` */\nexport function getMainApplication(androidManifest: AndroidManifest): ManifestApplication | null {\n  return (\n    androidManifest?.manifest?.application?.filter(e =>\n      e?.$?.['android:name'].endsWith('.MainApplication')\n    )[0] ?? null\n  );\n}\n\nexport function getMainApplicationOrThrow(androidManifest: AndroidManifest): ManifestApplication {\n  const mainApplication = getMainApplication(androidManifest);\n  assert(mainApplication, 'AndroidManifest.xml is missing the required MainApplication element');\n  return mainApplication;\n}\n\nexport function getMainActivityOrThrow(androidManifest: AndroidManifest): ManifestActivity {\n  const mainActivity = getMainActivity(androidManifest);\n  assert(mainActivity, 'AndroidManifest.xml is missing the required MainActivity element');\n  return mainActivity;\n}\n\nexport function getRunnableActivity(androidManifest: AndroidManifest): ManifestActivity | null {\n  // Get enabled activities\n  const enabledActivities = androidManifest?.manifest?.application?.[0]?.activity?.filter?.(\n    (e: any) => e.$['android:enabled'] !== 'false' && e.$['android:enabled'] !== false\n  );\n\n  if (!enabledActivities) {\n    return null;\n  }\n\n  // Get the activity that has a runnable intent-filter\n  for (const activity of enabledActivities) {\n    if (Array.isArray(activity['intent-filter'])) {\n      for (const intentFilter of activity['intent-filter']) {\n        if (\n          intentFilter.action?.find(\n            action => action.$['android:name'] === 'android.intent.action.MAIN'\n          ) &&\n          intentFilter.category?.find(\n            category => category.$['android:name'] === 'android.intent.category.LAUNCHER'\n          )\n        ) {\n          return activity;\n        }\n      }\n    }\n  }\n\n  return null;\n}\n\nexport function getMainActivity(androidManifest: AndroidManifest): ManifestActivity | null {\n  const mainActivity = androidManifest?.manifest?.application?.[0]?.activity?.filter?.(\n    (e: any) => e.$['android:name'] === '.MainActivity'\n  );\n  return mainActivity?.[0] ?? null;\n}\n\nexport function addMetaDataItemToMainApplication(\n  mainApplication: ManifestApplication,\n  itemName: string,\n  itemValue: string,\n  itemType: 'resource' | 'value' = 'value'\n): ManifestApplication {\n  let existingMetaDataItem;\n  const newItem = {\n    $: prefixAndroidKeys({ name: itemName, [itemType]: itemValue }),\n  } as ManifestMetaData;\n  if (mainApplication['meta-data']) {\n    existingMetaDataItem = mainApplication['meta-data'].filter(\n      (e: any) => e.$['android:name'] === itemName\n    );\n    if (existingMetaDataItem.length) {\n      existingMetaDataItem[0].$[\n        `android:${itemType}` as keyof ManifestMetaDataAttributes\n      ] = itemValue;\n    } else {\n      mainApplication['meta-data'].push(newItem);\n    }\n  } else {\n    mainApplication['meta-data'] = [newItem];\n  }\n  return mainApplication;\n}\n\nexport function removeMetaDataItemFromMainApplication(mainApplication: any, itemName: string) {\n  const index = findMetaDataItem(mainApplication, itemName);\n  if (mainApplication?.['meta-data'] && index > -1) {\n    mainApplication['meta-data'].splice(index, 1);\n  }\n  return mainApplication;\n}\n\nfunction findApplicationSubItem(\n  mainApplication: ManifestApplication,\n  category: keyof ManifestApplication,\n  itemName: string\n): number {\n  const parent = mainApplication[category];\n  if (Array.isArray(parent)) {\n    const index = parent.findIndex((e: any) => e.$['android:name'] === itemName);\n\n    return index;\n  }\n  return -1;\n}\n\nexport function findMetaDataItem(mainApplication: any, itemName: string): number {\n  return findApplicationSubItem(mainApplication, 'meta-data', itemName);\n}\n\nexport function findUsesLibraryItem(mainApplication: any, itemName: string): number {\n  return findApplicationSubItem(mainApplication, 'uses-library', itemName);\n}\n\nexport function getMainApplicationMetaDataValue(\n  androidManifest: AndroidManifest,\n  name: string\n): string | null {\n  const mainApplication = getMainApplication(androidManifest);\n\n  if (mainApplication?.hasOwnProperty('meta-data')) {\n    const item = mainApplication?.['meta-data']?.find((e: any) => e.$['android:name'] === name);\n    return item?.$['android:value'] ?? null;\n  }\n\n  return null;\n}\n\nexport function addUsesLibraryItemToMainApplication(\n  mainApplication: ManifestApplication,\n  item: { name: string; required?: boolean }\n): ManifestApplication {\n  let existingMetaDataItem;\n  const newItem = {\n    $: prefixAndroidKeys(item),\n  } as ManifestUsesLibrary;\n\n  if (mainApplication['uses-library']) {\n    existingMetaDataItem = mainApplication['uses-library'].filter(\n      e => e.$['android:name'] === item.name\n    );\n    if (existingMetaDataItem.length) {\n      existingMetaDataItem[0].$ = newItem.$;\n    } else {\n      mainApplication['uses-library'].push(newItem);\n    }\n  } else {\n    mainApplication['uses-library'] = [newItem];\n  }\n  return mainApplication;\n}\n\nexport function removeUsesLibraryItemFromMainApplication(\n  mainApplication: ManifestApplication,\n  itemName: string\n) {\n  const index = findUsesLibraryItem(mainApplication, itemName);\n  if (mainApplication?.['uses-library'] && index > -1) {\n    mainApplication['uses-library'].splice(index, 1);\n  }\n  return mainApplication;\n}\n\nexport function prefixAndroidKeys<T extends Record<string, any> = Record<string, string>>(\n  head: T\n): Record<string, any> {\n  // prefix all keys with `android:`\n  return Object.entries(head).reduce(\n    (prev, [key, curr]) => ({ ...prev, [`android:${key}`]: curr }),\n    {} as T\n  );\n}\n\n/**\n * Ensure the `tools:*` namespace is available in the manifest.\n *\n * @param manifest AndroidManifest.xml\n * @returns manifest with the `tools:*` namespace available\n */\nexport function ensureToolsAvailable(manifest: AndroidManifest) {\n  return ensureManifestHasNamespace(manifest, {\n    namespace: 'xmlns:tools',\n    url: 'http://schemas.android.com/tools',\n  });\n}\n\n/**\n * Ensure a particular namespace is available in the manifest.\n *\n * @param manifest `AndroidManifest.xml`\n * @returns manifest with the provided namespace available\n */\nfunction ensureManifestHasNamespace(\n  manifest: AndroidManifest,\n  { namespace, url }: { namespace: string; url: string }\n) {\n  if (manifest?.manifest?.$?.[namespace]) {\n    return manifest;\n  }\n  manifest.manifest.$[namespace] = url;\n  return manifest;\n}\n"]},"metadata":{},"sourceType":"script"}