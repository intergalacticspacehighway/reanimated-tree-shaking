{"ast":null,"code":"// @ts-ignore JS file\nimport interpolateNode from'../reanimated1/derived/interpolate';export var Extrapolation;(function(Extrapolation){Extrapolation[\"IDENTITY\"]=\"identity\";Extrapolation[\"CLAMP\"]=\"clamp\";Extrapolation[\"EXTEND\"]=\"extend\";})(Extrapolation||(Extrapolation={}));var isNode=function(){var _f=function _f(x){return x.__nodeId!==undefined;};_f._closure={};_f.asString=\"function isNode(x){return x.__nodeId!==undefined;}\";_f.__workletHash=11428170322833;_f.__location=\"/Users/fernandorojo/Developer/messing/rea-tree/node_modules/react-native-reanimated/lib/reanimated2/interpolation.js (9:0)\";return _f;}();var getVal=function(){var _f=function _f(type,coef,val,leftEdgeOutput,rightEdgeOutput,x){switch(type){case Extrapolation.IDENTITY:return x;case Extrapolation.CLAMP:if(coef*val<coef*leftEdgeOutput){return leftEdgeOutput;}return rightEdgeOutput;case Extrapolation.EXTEND:default:return val;}};_f._closure={Extrapolation:{IDENTITY:Extrapolation.IDENTITY,CLAMP:Extrapolation.CLAMP,EXTEND:Extrapolation.EXTEND}};_f.asString=\"function getVal(type,coef,val,leftEdgeOutput,rightEdgeOutput,x){const{Extrapolation}=jsThis._closure;{switch(type){case Extrapolation.IDENTITY:return x;case Extrapolation.CLAMP:if(coef*val<coef*leftEdgeOutput){return leftEdgeOutput;}return rightEdgeOutput;case Extrapolation.EXTEND:default:return val;}}}\";_f.__workletHash=17254780971327;_f.__location=\"/Users/fernandorojo/Developer/messing/rea-tree/node_modules/react-native-reanimated/lib/reanimated2/interpolation.js (13:0)\";return _f;}();var isExtrapolate=function(){var _f=function _f(value){return value===Extrapolation.EXTEND||value===Extrapolation.CLAMP||value===Extrapolation.IDENTITY;};_f._closure={Extrapolation:{EXTEND:Extrapolation.EXTEND,CLAMP:Extrapolation.CLAMP,IDENTITY:Extrapolation.IDENTITY}};_f.asString=\"function isExtrapolate(value){const{Extrapolation}=jsThis._closure;{return value===Extrapolation.EXTEND||value===Extrapolation.CLAMP||value===Extrapolation.IDENTITY;}}\";_f.__workletHash=10218308201564;_f.__location=\"/Users/fernandorojo/Developer/messing/rea-tree/node_modules/react-native-reanimated/lib/reanimated2/interpolation.js (28:0)\";return _f;}();// validates extrapolations type\n// if type is correct, converts it to ExtrapolationConfig\nvar validateType=function(){var _f=function _f(type){// initialize extrapolationConfig with default extrapolation\nvar extrapolationConfig={extrapolateLeft:Extrapolation.EXTEND,extrapolateRight:Extrapolation.EXTEND};if(!type){return extrapolationConfig;}if(typeof type==='string'){if(!isExtrapolate(type)){throw new Error(\"Reanimated: not supported value for \\\"interpolate\\\" \\nSupported values: [\\\"extend\\\", \\\"clamp\\\", \\\"identity\\\", Extrapolatation.CLAMP, Extrapolatation.EXTEND, Extrapolatation.IDENTITY]\\n Valid example:\\n        interpolate(value, [inputRange], [outputRange], \\\"clamp\\\")\");}extrapolationConfig.extrapolateLeft=type;extrapolationConfig.extrapolateRight=type;return extrapolationConfig;}// otherwise type is extrapolation config object\n// otherwise type is extrapolation config object\nif(type.extrapolateLeft&&!isExtrapolate(type.extrapolateLeft)||type.extrapolateRight&&!isExtrapolate(type.extrapolateRight)){throw new Error(\"Reanimated: not supported value for \\\"interpolate\\\" \\nSupported values: [\\\"extend\\\", \\\"clamp\\\", \\\"identity\\\", Extrapolatation.CLAMP, Extrapolatation.EXTEND, Extrapolatation.IDENTITY]\\n Valid example:\\n      interpolate(value, [inputRange], [outputRange], {\\n        extrapolateLeft: Extrapolation.CLAMP,\\n        extrapolateRight: Extrapolation.IDENTITY\\n      }})\");}Object.assign(extrapolationConfig,type);return extrapolationConfig;};_f._closure={Extrapolation:{EXTEND:Extrapolation.EXTEND},isExtrapolate:isExtrapolate};_f.asString=\"function validateType(type){const{Extrapolation,isExtrapolate}=jsThis._closure;{const extrapolationConfig={extrapolateLeft:Extrapolation.EXTEND,extrapolateRight:Extrapolation.EXTEND};if(!type){return extrapolationConfig;}if(typeof type==='string'){if(!isExtrapolate(type)){throw new Error(\\\"Reanimated: not supported value for \\\\\\\"interpolate\\\\\\\" \\\\nSupported values: [\\\\\\\"extend\\\\\\\", \\\\\\\"clamp\\\\\\\", \\\\\\\"identity\\\\\\\", Extrapolatation.CLAMP, Extrapolatation.EXTEND, Extrapolatation.IDENTITY]\\\\n Valid example:\\\\n        interpolate(value, [inputRange], [outputRange], \\\\\\\"clamp\\\\\\\")\\\");}extrapolationConfig.extrapolateLeft=type;extrapolationConfig.extrapolateRight=type;return extrapolationConfig;}if(type.extrapolateLeft&&!isExtrapolate(type.extrapolateLeft)||type.extrapolateRight&&!isExtrapolate(type.extrapolateRight)){throw new Error(\\\"Reanimated: not supported value for \\\\\\\"interpolate\\\\\\\" \\\\nSupported values: [\\\\\\\"extend\\\\\\\", \\\\\\\"clamp\\\\\\\", \\\\\\\"identity\\\\\\\", Extrapolatation.CLAMP, Extrapolatation.EXTEND, Extrapolatation.IDENTITY]\\\\n Valid example:\\\\n      interpolate(value, [inputRange], [outputRange], {\\\\n        extrapolateLeft: Extrapolation.CLAMP,\\\\n        extrapolateRight: Extrapolation.IDENTITY\\\\n      }})\\\");}Object.assign(extrapolationConfig,type);return extrapolationConfig;}}\";_f.__workletHash=7740971206170;_f.__location=\"/Users/fernandorojo/Developer/messing/rea-tree/node_modules/react-native-reanimated/lib/reanimated2/interpolation.js (36:0)\";return _f;}();var internalInterpolate=function(){var _f=function _f(x,narrowedInput,extrapolationConfig){var leftEdgeInput=narrowedInput.leftEdgeInput,rightEdgeInput=narrowedInput.rightEdgeInput,leftEdgeOutput=narrowedInput.leftEdgeOutput,rightEdgeOutput=narrowedInput.rightEdgeOutput;if(rightEdgeInput-leftEdgeInput===0)return leftEdgeOutput;var progress=(x-leftEdgeInput)/(rightEdgeInput-leftEdgeInput);var val=leftEdgeOutput+progress*(rightEdgeOutput-leftEdgeOutput);var coef=rightEdgeOutput>=leftEdgeOutput?1:-1;if(coef*val<coef*leftEdgeOutput){return getVal(extrapolationConfig.extrapolateLeft,coef,val,leftEdgeOutput,rightEdgeOutput,x);}else if(coef*val>coef*rightEdgeOutput){return getVal(extrapolationConfig.extrapolateRight,coef,val,leftEdgeOutput,rightEdgeOutput,x);}return val;};_f._closure={getVal:getVal};_f.asString=\"function internalInterpolate(x,narrowedInput,extrapolationConfig){const{getVal}=jsThis._closure;{const{leftEdgeInput:leftEdgeInput,rightEdgeInput:rightEdgeInput,leftEdgeOutput:leftEdgeOutput,rightEdgeOutput:rightEdgeOutput}=narrowedInput;if(rightEdgeInput-leftEdgeInput===0)return leftEdgeOutput;const progress=(x-leftEdgeInput)/(rightEdgeInput-leftEdgeInput);const val=leftEdgeOutput+progress*(rightEdgeOutput-leftEdgeOutput);const coef=rightEdgeOutput>=leftEdgeOutput?1:-1;if(coef*val<coef*leftEdgeOutput){return getVal(extrapolationConfig.extrapolateLeft,coef,val,leftEdgeOutput,rightEdgeOutput,x);}else if(coef*val>coef*rightEdgeOutput){return getVal(extrapolationConfig.extrapolateRight,coef,val,leftEdgeOutput,rightEdgeOutput,x);}return val;}}\";_f.__workletHash=8108992359068;_f.__location=\"/Users/fernandorojo/Developer/messing/rea-tree/node_modules/react-native-reanimated/lib/reanimated2/interpolation.js (67:0)\";return _f;}();// TODO: support default values in worklets:\n// e.g. function interpolate(x, input, output, type = Extrapolatation.CLAMP)\nexport var interpolate=function(){var _f=function _f(x,input,output,type){if(input.length<2||output.length<2){throw Error('Interpolation input and output should contain at least two values.');}var extrapolationConfig=validateType(type);if(isNode(x)){console.warn(\"interpolate() was renamed to interpolateNode() in Reanimated 2. Please use interpolateNode() instead\");return interpolateNode(x,{inputRange:input,outputRange:output,extrapolateLeft:extrapolationConfig.extrapolateLeft,extrapolateRight:extrapolationConfig.extrapolateRight});}var length=input.length;var narrowedInput={leftEdgeInput:input[0],rightEdgeInput:input[1],leftEdgeOutput:output[0],rightEdgeOutput:output[1]};if(length>2){if(x>input[length-1]){narrowedInput.leftEdgeInput=input[length-2];narrowedInput.rightEdgeInput=input[length-1];narrowedInput.leftEdgeOutput=output[length-2];narrowedInput.rightEdgeOutput=output[length-1];}else{for(var i=1;i<length;++i){if(x<=input[i]){narrowedInput.leftEdgeInput=input[i-1];narrowedInput.rightEdgeInput=input[i];narrowedInput.leftEdgeOutput=output[i-1];narrowedInput.rightEdgeOutput=output[i];break;}}}}return internalInterpolate(x,narrowedInput,extrapolationConfig);};_f._closure={validateType:validateType,isNode:isNode,interpolateNode:interpolateNode,internalInterpolate:internalInterpolate};_f.asString=\"function interpolate(x,input,output,type){const{validateType,isNode,interpolateNode,internalInterpolate}=jsThis._closure;{if(input.length<2||output.length<2){throw Error('Interpolation input and output should contain at least two values.');}const extrapolationConfig=validateType(type);if(isNode(x)){console.warn(\\\"interpolate() was renamed to interpolateNode() in Reanimated 2. Please use interpolateNode() instead\\\");return interpolateNode(x,{inputRange:input,outputRange:output,extrapolateLeft:extrapolationConfig.extrapolateLeft,extrapolateRight:extrapolationConfig.extrapolateRight});}const length=input.length;const narrowedInput={leftEdgeInput:input[0],rightEdgeInput:input[1],leftEdgeOutput:output[0],rightEdgeOutput:output[1]};if(length>2){if(x>input[length-1]){narrowedInput.leftEdgeInput=input[length-2];narrowedInput.rightEdgeInput=input[length-1];narrowedInput.leftEdgeOutput=output[length-2];narrowedInput.rightEdgeOutput=output[length-1];}else{for(let i=1;i<length;++i){if(x<=input[i]){narrowedInput.leftEdgeInput=input[i-1];narrowedInput.rightEdgeInput=input[i];narrowedInput.leftEdgeOutput=output[i-1];narrowedInput.rightEdgeOutput=output[i];break;}}}}return internalInterpolate(x,narrowedInput,extrapolationConfig);}}\";_f.__workletHash=14201461170439;_f.__location=\"/Users/fernandorojo/Developer/messing/rea-tree/node_modules/react-native-reanimated/lib/reanimated2/interpolation.js (85:7)\";return _f;}();","map":{"version":3,"names":["interpolateNode","Extrapolation","isNode","_f","x","__nodeId","undefined","_closure","asString","__workletHash","__location","getVal","type","coef","val","leftEdgeOutput","rightEdgeOutput","IDENTITY","CLAMP","EXTEND","isExtrapolate","value","validateType","extrapolationConfig","extrapolateLeft","extrapolateRight","Error","Object","assign","internalInterpolate","narrowedInput","leftEdgeInput","rightEdgeInput","progress","interpolate","input","output","length","console","warn","inputRange","outputRange","i"],"sources":["/Users/fernandorojo/Developer/messing/rea-tree/node_modules/react-native-reanimated/lib/reanimated2/interpolation.js"],"sourcesContent":["// @ts-ignore JS file\nimport interpolateNode from '../reanimated1/derived/interpolate';\nexport var Extrapolation;\n\n(function (Extrapolation) {\n  Extrapolation[\"IDENTITY\"] = \"identity\";\n  Extrapolation[\"CLAMP\"] = \"clamp\";\n  Extrapolation[\"EXTEND\"] = \"extend\";\n})(Extrapolation || (Extrapolation = {}));\n\nconst isNode = function () {\n  const _f = function (x) {\n    return x.__nodeId !== undefined;\n  };\n\n  _f._closure = {};\n  _f.asString = \"function isNode(x){return x.__nodeId!==undefined;}\";\n  _f.__workletHash = 11428170322833;\n  _f.__location = \"/Users/fernandorojo/Developer/messing/rea-tree/node_modules/react-native-reanimated/lib/reanimated2/interpolation.js (9:0)\";\n  return _f;\n}();\n\nconst getVal = function () {\n  const _f = function (type, coef, val, leftEdgeOutput, rightEdgeOutput, x) {\n    switch (type) {\n      case Extrapolation.IDENTITY:\n        return x;\n\n      case Extrapolation.CLAMP:\n        if (coef * val < coef * leftEdgeOutput) {\n          return leftEdgeOutput;\n        }\n\n        return rightEdgeOutput;\n\n      case Extrapolation.EXTEND:\n      default:\n        return val;\n    }\n  };\n\n  _f._closure = {\n    Extrapolation: {\n      IDENTITY: Extrapolation.IDENTITY,\n      CLAMP: Extrapolation.CLAMP,\n      EXTEND: Extrapolation.EXTEND\n    }\n  };\n  _f.asString = \"function getVal(type,coef,val,leftEdgeOutput,rightEdgeOutput,x){const{Extrapolation}=jsThis._closure;{switch(type){case Extrapolation.IDENTITY:return x;case Extrapolation.CLAMP:if(coef*val<coef*leftEdgeOutput){return leftEdgeOutput;}return rightEdgeOutput;case Extrapolation.EXTEND:default:return val;}}}\";\n  _f.__workletHash = 17254780971327;\n  _f.__location = \"/Users/fernandorojo/Developer/messing/rea-tree/node_modules/react-native-reanimated/lib/reanimated2/interpolation.js (13:0)\";\n  return _f;\n}();\n\nconst isExtrapolate = function () {\n  const _f = function (value) {\n    return value === Extrapolation.EXTEND || value === Extrapolation.CLAMP || value === Extrapolation.IDENTITY;\n  };\n\n  _f._closure = {\n    Extrapolation: {\n      EXTEND: Extrapolation.EXTEND,\n      CLAMP: Extrapolation.CLAMP,\n      IDENTITY: Extrapolation.IDENTITY\n    }\n  };\n  _f.asString = \"function isExtrapolate(value){const{Extrapolation}=jsThis._closure;{return value===Extrapolation.EXTEND||value===Extrapolation.CLAMP||value===Extrapolation.IDENTITY;}}\";\n  _f.__workletHash = 10218308201564;\n  _f.__location = \"/Users/fernandorojo/Developer/messing/rea-tree/node_modules/react-native-reanimated/lib/reanimated2/interpolation.js (28:0)\";\n  return _f;\n}(); // validates extrapolations type\n// if type is correct, converts it to ExtrapolationConfig\n\n\nconst validateType = function () {\n  const _f = function (type) {\n    // initialize extrapolationConfig with default extrapolation\n    const extrapolationConfig = {\n      extrapolateLeft: Extrapolation.EXTEND,\n      extrapolateRight: Extrapolation.EXTEND\n    };\n\n    if (!type) {\n      return extrapolationConfig;\n    }\n\n    if (typeof type === 'string') {\n      if (!isExtrapolate(type)) {\n        throw new Error(`Reanimated: not supported value for \"interpolate\" \\nSupported values: [\"extend\", \"clamp\", \"identity\", Extrapolatation.CLAMP, Extrapolatation.EXTEND, Extrapolatation.IDENTITY]\\n Valid example:\n        interpolate(value, [inputRange], [outputRange], \"clamp\")`);\n      }\n\n      extrapolationConfig.extrapolateLeft = type;\n      extrapolationConfig.extrapolateRight = type;\n      return extrapolationConfig;\n    } // otherwise type is extrapolation config object\n\n\n    // otherwise type is extrapolation config object\n    if (type.extrapolateLeft && !isExtrapolate(type.extrapolateLeft) || type.extrapolateRight && !isExtrapolate(type.extrapolateRight)) {\n      throw new Error(`Reanimated: not supported value for \"interpolate\" \\nSupported values: [\"extend\", \"clamp\", \"identity\", Extrapolatation.CLAMP, Extrapolatation.EXTEND, Extrapolatation.IDENTITY]\\n Valid example:\n      interpolate(value, [inputRange], [outputRange], {\n        extrapolateLeft: Extrapolation.CLAMP,\n        extrapolateRight: Extrapolation.IDENTITY\n      }})`);\n    }\n\n    Object.assign(extrapolationConfig, type);\n    return extrapolationConfig;\n  };\n\n  _f._closure = {\n    Extrapolation: {\n      EXTEND: Extrapolation.EXTEND\n    },\n    isExtrapolate\n  };\n  _f.asString = \"function validateType(type){const{Extrapolation,isExtrapolate}=jsThis._closure;{const extrapolationConfig={extrapolateLeft:Extrapolation.EXTEND,extrapolateRight:Extrapolation.EXTEND};if(!type){return extrapolationConfig;}if(typeof type==='string'){if(!isExtrapolate(type)){throw new Error(\\\"Reanimated: not supported value for \\\\\\\"interpolate\\\\\\\" \\\\nSupported values: [\\\\\\\"extend\\\\\\\", \\\\\\\"clamp\\\\\\\", \\\\\\\"identity\\\\\\\", Extrapolatation.CLAMP, Extrapolatation.EXTEND, Extrapolatation.IDENTITY]\\\\n Valid example:\\\\n        interpolate(value, [inputRange], [outputRange], \\\\\\\"clamp\\\\\\\")\\\");}extrapolationConfig.extrapolateLeft=type;extrapolationConfig.extrapolateRight=type;return extrapolationConfig;}if(type.extrapolateLeft&&!isExtrapolate(type.extrapolateLeft)||type.extrapolateRight&&!isExtrapolate(type.extrapolateRight)){throw new Error(\\\"Reanimated: not supported value for \\\\\\\"interpolate\\\\\\\" \\\\nSupported values: [\\\\\\\"extend\\\\\\\", \\\\\\\"clamp\\\\\\\", \\\\\\\"identity\\\\\\\", Extrapolatation.CLAMP, Extrapolatation.EXTEND, Extrapolatation.IDENTITY]\\\\n Valid example:\\\\n      interpolate(value, [inputRange], [outputRange], {\\\\n        extrapolateLeft: Extrapolation.CLAMP,\\\\n        extrapolateRight: Extrapolation.IDENTITY\\\\n      }})\\\");}Object.assign(extrapolationConfig,type);return extrapolationConfig;}}\";\n  _f.__workletHash = 7740971206170;\n  _f.__location = \"/Users/fernandorojo/Developer/messing/rea-tree/node_modules/react-native-reanimated/lib/reanimated2/interpolation.js (36:0)\";\n  return _f;\n}();\n\nconst internalInterpolate = function () {\n  const _f = function (x, narrowedInput, extrapolationConfig) {\n    const {\n      leftEdgeInput,\n      rightEdgeInput,\n      leftEdgeOutput,\n      rightEdgeOutput\n    } = narrowedInput;\n    if (rightEdgeInput - leftEdgeInput === 0) return leftEdgeOutput;\n    const progress = (x - leftEdgeInput) / (rightEdgeInput - leftEdgeInput);\n    const val = leftEdgeOutput + progress * (rightEdgeOutput - leftEdgeOutput);\n    const coef = rightEdgeOutput >= leftEdgeOutput ? 1 : -1;\n\n    if (coef * val < coef * leftEdgeOutput) {\n      return getVal(extrapolationConfig.extrapolateLeft, coef, val, leftEdgeOutput, rightEdgeOutput, x);\n    } else if (coef * val > coef * rightEdgeOutput) {\n      return getVal(extrapolationConfig.extrapolateRight, coef, val, leftEdgeOutput, rightEdgeOutput, x);\n    }\n\n    return val;\n  };\n\n  _f._closure = {\n    getVal\n  };\n  _f.asString = \"function internalInterpolate(x,narrowedInput,extrapolationConfig){const{getVal}=jsThis._closure;{const{leftEdgeInput:leftEdgeInput,rightEdgeInput:rightEdgeInput,leftEdgeOutput:leftEdgeOutput,rightEdgeOutput:rightEdgeOutput}=narrowedInput;if(rightEdgeInput-leftEdgeInput===0)return leftEdgeOutput;const progress=(x-leftEdgeInput)/(rightEdgeInput-leftEdgeInput);const val=leftEdgeOutput+progress*(rightEdgeOutput-leftEdgeOutput);const coef=rightEdgeOutput>=leftEdgeOutput?1:-1;if(coef*val<coef*leftEdgeOutput){return getVal(extrapolationConfig.extrapolateLeft,coef,val,leftEdgeOutput,rightEdgeOutput,x);}else if(coef*val>coef*rightEdgeOutput){return getVal(extrapolationConfig.extrapolateRight,coef,val,leftEdgeOutput,rightEdgeOutput,x);}return val;}}\";\n  _f.__workletHash = 8108992359068;\n  _f.__location = \"/Users/fernandorojo/Developer/messing/rea-tree/node_modules/react-native-reanimated/lib/reanimated2/interpolation.js (67:0)\";\n  return _f;\n}(); // TODO: support default values in worklets:\n// e.g. function interpolate(x, input, output, type = Extrapolatation.CLAMP)\n\n\nexport const interpolate = function () {\n  const _f = function (x, input, output, type) {\n    if (input.length < 2 || output.length < 2) {\n      throw Error('Interpolation input and output should contain at least two values.');\n    }\n\n    const extrapolationConfig = validateType(type);\n\n    if (isNode(x)) {\n      console.warn(`interpolate() was renamed to interpolateNode() in Reanimated 2. Please use interpolateNode() instead`);\n      return interpolateNode(x, {\n        inputRange: input,\n        outputRange: output,\n        extrapolateLeft: extrapolationConfig.extrapolateLeft,\n        extrapolateRight: extrapolationConfig.extrapolateRight\n      });\n    }\n\n    const length = input.length;\n    const narrowedInput = {\n      leftEdgeInput: input[0],\n      rightEdgeInput: input[1],\n      leftEdgeOutput: output[0],\n      rightEdgeOutput: output[1]\n    };\n\n    if (length > 2) {\n      if (x > input[length - 1]) {\n        narrowedInput.leftEdgeInput = input[length - 2];\n        narrowedInput.rightEdgeInput = input[length - 1];\n        narrowedInput.leftEdgeOutput = output[length - 2];\n        narrowedInput.rightEdgeOutput = output[length - 1];\n      } else {\n        for (let i = 1; i < length; ++i) {\n          if (x <= input[i]) {\n            narrowedInput.leftEdgeInput = input[i - 1];\n            narrowedInput.rightEdgeInput = input[i];\n            narrowedInput.leftEdgeOutput = output[i - 1];\n            narrowedInput.rightEdgeOutput = output[i];\n            break;\n          }\n        }\n      }\n    }\n\n    return internalInterpolate(x, narrowedInput, extrapolationConfig);\n  };\n\n  _f._closure = {\n    validateType,\n    isNode,\n    interpolateNode,\n    internalInterpolate\n  };\n  _f.asString = \"function interpolate(x,input,output,type){const{validateType,isNode,interpolateNode,internalInterpolate}=jsThis._closure;{if(input.length<2||output.length<2){throw Error('Interpolation input and output should contain at least two values.');}const extrapolationConfig=validateType(type);if(isNode(x)){console.warn(\\\"interpolate() was renamed to interpolateNode() in Reanimated 2. Please use interpolateNode() instead\\\");return interpolateNode(x,{inputRange:input,outputRange:output,extrapolateLeft:extrapolationConfig.extrapolateLeft,extrapolateRight:extrapolationConfig.extrapolateRight});}const length=input.length;const narrowedInput={leftEdgeInput:input[0],rightEdgeInput:input[1],leftEdgeOutput:output[0],rightEdgeOutput:output[1]};if(length>2){if(x>input[length-1]){narrowedInput.leftEdgeInput=input[length-2];narrowedInput.rightEdgeInput=input[length-1];narrowedInput.leftEdgeOutput=output[length-2];narrowedInput.rightEdgeOutput=output[length-1];}else{for(let i=1;i<length;++i){if(x<=input[i]){narrowedInput.leftEdgeInput=input[i-1];narrowedInput.rightEdgeInput=input[i];narrowedInput.leftEdgeOutput=output[i-1];narrowedInput.rightEdgeOutput=output[i];break;}}}}return internalInterpolate(x,narrowedInput,extrapolationConfig);}}\";\n  _f.__workletHash = 14201461170439;\n  _f.__location = \"/Users/fernandorojo/Developer/messing/rea-tree/node_modules/react-native-reanimated/lib/reanimated2/interpolation.js (85:7)\";\n  return _f;\n}();"],"mappings":"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"},"metadata":{},"sourceType":"module"}