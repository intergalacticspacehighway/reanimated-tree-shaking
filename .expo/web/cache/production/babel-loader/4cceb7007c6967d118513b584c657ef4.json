{"ast":null,"code":"\"use strict\";var _defineProperty=require(\"/Users/fernandorojo/Developer/messing/rea-tree/node_modules/next/dist/compiled/@babel/runtime/helpers/defineProperty\");function ownKeys(object,enumerableOnly){var keys=Object.keys(object);if(Object.getOwnPropertySymbols){var symbols=Object.getOwnPropertySymbols(object);enumerableOnly&&(symbols=symbols.filter(function(sym){return Object.getOwnPropertyDescriptor(object,sym).enumerable;})),keys.push.apply(keys,symbols);}return keys;}function _objectSpread(target){for(var i=1;i<arguments.length;i++){var source=null!=arguments[i]?arguments[i]:{};i%2?ownKeys(Object(source),!0).forEach(function(key){_defineProperty(target,key,source[key]);}):Object.getOwnPropertyDescriptors?Object.defineProperties(target,Object.getOwnPropertyDescriptors(source)):ownKeys(Object(source)).forEach(function(key){Object.defineProperty(target,key,Object.getOwnPropertyDescriptor(source,key));});}return target;}Object.defineProperty(exports,\"__esModule\",{value:true});exports.PORTRAIT_ORIENTATIONS=exports.LANDSCAPE_ORIENTATIONS=void 0;exports.getOrientation=getOrientation;exports.setOrientation=setOrientation;exports.withOrientation=void 0;function _iosPlugins(){var data=require(\"../plugins/ios-plugins\");_iosPlugins=function _iosPlugins(){return data;};return data;}var withOrientation=(0,_iosPlugins().createInfoPlistPlugin)(setOrientation,'withOrientation');exports.withOrientation=withOrientation;function getOrientation(config){var _config$orientation;return(_config$orientation=config.orientation)!==null&&_config$orientation!==void 0?_config$orientation:null;}var PORTRAIT_ORIENTATIONS=['UIInterfaceOrientationPortrait','UIInterfaceOrientationPortraitUpsideDown'];exports.PORTRAIT_ORIENTATIONS=PORTRAIT_ORIENTATIONS;var LANDSCAPE_ORIENTATIONS=['UIInterfaceOrientationLandscapeLeft','UIInterfaceOrientationLandscapeRight'];exports.LANDSCAPE_ORIENTATIONS=LANDSCAPE_ORIENTATIONS;function getUISupportedInterfaceOrientations(orientation){if(orientation==='portrait'){return PORTRAIT_ORIENTATIONS;}else if(orientation==='landscape'){return LANDSCAPE_ORIENTATIONS;}else{return[].concat(PORTRAIT_ORIENTATIONS,LANDSCAPE_ORIENTATIONS);}}function setOrientation(config,infoPlist){var orientation=getOrientation(config);return _objectSpread(_objectSpread({},infoPlist),{},{UISupportedInterfaceOrientations:getUISupportedInterfaceOrientations(orientation)});}","map":{"version":3,"sources":["../../src/ios/Orientation.ts"],"names":["withOrientation","config","PORTRAIT_ORIENTATIONS","LANDSCAPE_ORIENTATIONS","orientation","getOrientation","UISupportedInterfaceOrientations","getUISupportedInterfaceOrientations"],"mappings":"8oCAEA,QAAA,CAAA,WAAA,EAAA,CAAA,GAAA,CAAA,IAAA,CAAA,OAAA,CAAA,wBAAA,CAAA,CAAA,WAAA,CAAA,sBAAA,CAAA,MAAA,CAAA,IAAA,CAAA,CAAA,CAAA,MAAA,CAAA,IAAA,CAAA,CAGO,GAAMA,CAAAA,eAAe,CAAG,CAAA,EAAA,WAAA,GAAA,qBAAA,EAAA,cAAA,CAAxB,iBAAwB,CAAxB,C,wCAEA,QAAA,CAAA,cAAA,CAAA,MAAA,CAAiE,CAAA,GAAA,CAAA,mBAAA,CACtE,MAAA,CAAA,mBAAA,CAAOC,MAAM,CAAb,WAAA,IAAA,IAAA,EAAA,mBAAA,GAAA,IAAA,EAAA,CAAA,mBAAA,CAAA,IAAA,CACD,CAEM,GAAMC,CAAAA,qBAA6C,CAAG,CAAA,gCAAA,CAAtD,0CAAsD,CAAtD,C,oDAKA,GAAMC,CAAAA,sBAA8C,CAAG,CAAA,qCAAA,CAAvD,sCAAuD,CAAvD,C,sDAKP,QAAA,CAAA,mCAAA,CAAA,WAAA,CAAiG,CAC/F,GAAIC,WAAW,GAAf,UAAA,CAAgC,CAC9B,MAAA,CAAA,qBAAA,CADF,CAAA,IAEO,IAAIA,WAAW,GAAf,WAAA,CAAiC,CACtC,MAAA,CAAA,sBAAA,CADK,CAAA,IAEA,CACL,gBAAO,qBAAP,CAAA,sBAAA,EACD,CACF,CAEM,QAAA,CAAA,cAAA,CAAA,MAAA,CAAA,SAAA,CAGM,CACX,GAAMA,CAAAA,WAAW,CAAGC,cAAc,CAAlC,MAAkC,CAAlC,CAEA,sCAAO,SAAP,MAEEC,gCAAgC,CAAEC,mCAAmC,CAAA,WAAA,CAFvE,GAID","sourcesContent":["import { ExpoConfig } from '@expo/config-types';\n\nimport { createInfoPlistPlugin } from '../plugins/ios-plugins';\nimport { InfoPlist, InterfaceOrientation } from './IosConfig.types';\n\nexport const withOrientation = createInfoPlistPlugin(setOrientation, 'withOrientation');\n\nexport function getOrientation(config: Pick<ExpoConfig, 'orientation'>) {\n  return config.orientation ?? null;\n}\n\nexport const PORTRAIT_ORIENTATIONS: InterfaceOrientation[] = [\n  'UIInterfaceOrientationPortrait',\n  'UIInterfaceOrientationPortraitUpsideDown',\n];\n\nexport const LANDSCAPE_ORIENTATIONS: InterfaceOrientation[] = [\n  'UIInterfaceOrientationLandscapeLeft',\n  'UIInterfaceOrientationLandscapeRight',\n];\n\nfunction getUISupportedInterfaceOrientations(orientation: string | null): InterfaceOrientation[] {\n  if (orientation === 'portrait') {\n    return PORTRAIT_ORIENTATIONS;\n  } else if (orientation === 'landscape') {\n    return LANDSCAPE_ORIENTATIONS;\n  } else {\n    return [...PORTRAIT_ORIENTATIONS, ...LANDSCAPE_ORIENTATIONS];\n  }\n}\n\nexport function setOrientation(\n  config: Pick<ExpoConfig, 'orientation'>,\n  infoPlist: InfoPlist\n): InfoPlist {\n  const orientation = getOrientation(config);\n\n  return {\n    ...infoPlist,\n    UISupportedInterfaceOrientations: getUISupportedInterfaceOrientations(orientation),\n  };\n}\n"]},"metadata":{},"sourceType":"script"}