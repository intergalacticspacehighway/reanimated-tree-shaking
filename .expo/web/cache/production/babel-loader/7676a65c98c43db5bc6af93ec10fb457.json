{"ast":null,"code":"\"use strict\";var _regeneratorRuntime=require(\"/Users/fernandorojo/Developer/messing/rea-tree/node_modules/next/dist/compiled/@babel/runtime/regenerator\");var _slicedToArray=require(\"/Users/fernandorojo/Developer/messing/rea-tree/node_modules/next/dist/compiled/@babel/runtime/helpers/slicedToArray\");var _defineProperty=require(\"/Users/fernandorojo/Developer/messing/rea-tree/node_modules/next/dist/compiled/@babel/runtime/helpers/defineProperty\");var _asyncToGenerator=require(\"/Users/fernandorojo/Developer/messing/rea-tree/node_modules/next/dist/compiled/@babel/runtime/helpers/asyncToGenerator\");function ownKeys(object,enumerableOnly){var keys=Object.keys(object);if(Object.getOwnPropertySymbols){var symbols=Object.getOwnPropertySymbols(object);enumerableOnly&&(symbols=symbols.filter(function(sym){return Object.getOwnPropertyDescriptor(object,sym).enumerable;})),keys.push.apply(keys,symbols);}return keys;}function _objectSpread(target){for(var i=1;i<arguments.length;i++){var source=null!=arguments[i]?arguments[i]:{};i%2?ownKeys(Object(source),!0).forEach(function(key){_defineProperty(target,key,source[key]);}):Object.getOwnPropertyDescriptors?Object.defineProperties(target,Object.getOwnPropertyDescriptors(source)):ownKeys(Object(source)).forEach(function(key){Object.defineProperty(target,key,Object.getOwnPropertyDescriptor(source,key));});}return target;}Object.defineProperty(exports,\"__esModule\",{value:true});exports.buildResourceGroup=buildResourceGroup;exports.buildResourceItem=buildResourceItem;exports.ensureDefaultResourceXML=ensureDefaultResourceXML;exports.findResourceGroup=findResourceGroup;exports.getObjectAsResourceGroup=getObjectAsResourceGroup;exports.getObjectAsResourceItems=getObjectAsResourceItems;exports.getResourceItemsAsObject=getResourceItemsAsObject;exports.readResourcesXMLAsync=readResourcesXMLAsync;function _XML(){var data=require(\"../utils/XML\");_XML=function _XML(){return data;};return data;}var fallbackResourceString=\"<?xml version=\\\"1.0\\\" encoding=\\\"utf-8\\\"?><resources></resources>\";/**\n * Read an XML file while providing a default fallback for resource files.\n *\n * @param options path to the XML file, returns a fallback XML if the path doesn't exist.\n */function readResourcesXMLAsync(_x){return _readResourcesXMLAsync.apply(this,arguments);}/**\n * Ensure the provided xml has a `resources` object (the expected shape).\n *\n * @param xml\n */function _readResourcesXMLAsync(){_readResourcesXMLAsync=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(_ref){var path,_ref$fallback,fallback,xml;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:path=_ref.path,_ref$fallback=_ref.fallback,fallback=_ref$fallback===void 0?fallbackResourceString:_ref$fallback;_context.next=3;return(0,_XML().readXMLAsync)({path:path,fallback:fallback});case 3:xml=_context.sent;// Ensure the type is expected.\nif(!xml.resources){xml.resources={};}return _context.abrupt(\"return\",xml);case 6:case\"end\":return _context.stop();}}},_callee);}));return _readResourcesXMLAsync.apply(this,arguments);}function ensureDefaultResourceXML(xml){if(!xml){xml={resources:{}};}if(!xml.resources){xml.resources={};}return xml;}/**\n * Build a `ResourceItemXML` given its `name` and `value`. This makes things a bit more readable.\n *\n * - JSON: `{ $: { name }, _: value }`\n * - XML: `<item name=\"NAME\">VALUE</item>`\n *\n * @param props name and value strings.\n */function buildResourceItem(_ref2){var name=_ref2.name,value=_ref2.value,targetApi=_ref2.targetApi,translatable=_ref2.translatable;var item={$:{name:name},_:value};if(targetApi){item.$['tools:targetApi']=targetApi;}if(translatable!==undefined){item.$['translatable']=String(translatable);}return item;}function buildResourceGroup(parent){var _parent$items;return{$:{name:parent.name,parent:parent.parent},item:(_parent$items=parent.items)!==null&&_parent$items!==void 0?_parent$items:[]};}function findResourceGroup(xml,group){var _xml$filter,_xml$filter$call;var app=xml===null||xml===void 0?void 0:(_xml$filter=xml.filter)===null||_xml$filter===void 0?void 0:(_xml$filter$call=_xml$filter.call(xml,function(_ref3){var head=_ref3.$;var matches=head.name===group.name;if(group.parent!=null&&matches){matches=head.parent===group.parent;}return matches;}))===null||_xml$filter$call===void 0?void 0:_xml$filter$call[0];return app!==null&&app!==void 0?app:null;}/**\n * Helper to convert a basic XML object into a simple k/v pair.\n *\n * @param xml\n * @returns\n */function getResourceItemsAsObject(xml){return xml.reduce(function(prev,curr){return _objectSpread(_objectSpread({},prev),{},_defineProperty({},curr.$.name,curr._));},{});}/**\n * Helper to convert a basic k/v object to a ResourceItemXML array.\n *\n * @param xml\n * @returns\n */function getObjectAsResourceItems(obj){return Object.entries(obj).map(function(_ref4){var _ref5=_slicedToArray(_ref4,2),name=_ref5[0],value=_ref5[1];return{$:{name:name},_:value};});}function getObjectAsResourceGroup(group){return{$:{name:group.name,parent:group.parent},item:getObjectAsResourceItems(group.item)};}","map":{"version":3,"sources":["../../src/android/Resources.ts"],"names":["fallbackResourceString","fallback","xml","path","resources","translatable","item","$","name","_","value","String","parent","app","head","matches","group","curr","getObjectAsResourceItems"],"mappings":"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","sourcesContent":["import { readXMLAsync, XMLObject } from '../utils/XML';\n\nexport type ResourceGroupXML = {\n  $: {\n    name: string;\n    parent: string;\n  };\n  item: ResourceItemXML[];\n};\n\nexport type ResourceXML = {\n  resources: {\n    $?: {\n      'xmlns:tools'?: string;\n    };\n    color?: ResourceItemXML[];\n    string?: ResourceItemXML[];\n    style?: ResourceGroupXML[];\n    // Add more if needed...\n  };\n};\n\nexport type ResourceItemXML = {\n  _: string;\n  $: {\n    name: string;\n    'tools:targetApi'?: string;\n    translatable?: string;\n  };\n};\n/**\n * Name of the resource folder.\n */\nexport type ResourceKind =\n  | 'values'\n  | 'values-night'\n  | 'values-v23'\n  | 'values-night-v23'\n  | 'drawable';\n\nconst fallbackResourceString = `<?xml version=\"1.0\" encoding=\"utf-8\"?><resources></resources>`;\n\n/**\n * Read an XML file while providing a default fallback for resource files.\n *\n * @param options path to the XML file, returns a fallback XML if the path doesn't exist.\n */\nexport async function readResourcesXMLAsync({\n  path,\n  fallback = fallbackResourceString,\n}: {\n  path: string;\n  fallback?: string | null;\n}): Promise<ResourceXML> {\n  const xml = await readXMLAsync({ path, fallback });\n  // Ensure the type is expected.\n  if (!xml.resources) {\n    xml.resources = {};\n  }\n  return xml as ResourceXML;\n}\n\n/**\n * Ensure the provided xml has a `resources` object (the expected shape).\n *\n * @param xml\n */\nexport function ensureDefaultResourceXML(xml: XMLObject): ResourceXML {\n  if (!xml) {\n    xml = { resources: {} };\n  }\n  if (!xml.resources) {\n    xml.resources = {};\n  }\n\n  return xml as ResourceXML;\n}\n\n/**\n * Build a `ResourceItemXML` given its `name` and `value`. This makes things a bit more readable.\n *\n * - JSON: `{ $: { name }, _: value }`\n * - XML: `<item name=\"NAME\">VALUE</item>`\n *\n * @param props name and value strings.\n */\nexport function buildResourceItem({\n  name,\n  value,\n  targetApi,\n  translatable,\n}: {\n  name: string;\n  value: string;\n  targetApi?: string;\n  translatable?: boolean;\n}): ResourceItemXML {\n  const item: ResourceItemXML = { $: { name }, _: value };\n  if (targetApi) {\n    item.$['tools:targetApi'] = targetApi;\n  }\n  if (translatable !== undefined) {\n    item.$['translatable'] = String(translatable);\n  }\n  return item;\n}\n\nexport function buildResourceGroup(parent: {\n  name: string;\n  parent: string;\n  items?: ResourceItemXML[];\n}): ResourceGroupXML {\n  return {\n    $: { name: parent.name, parent: parent.parent },\n    item: parent.items ?? [],\n  };\n}\n\nexport function findResourceGroup(\n  xml: ResourceGroupXML[] | undefined,\n  group: { name: string; parent?: string }\n): ResourceGroupXML | null {\n  const app = xml?.filter?.(({ $: head }) => {\n    let matches = head.name === group.name;\n    if (group.parent != null && matches) {\n      matches = head.parent === group.parent;\n    }\n    return matches;\n  })?.[0];\n  return app ?? null;\n}\n\n/**\n * Helper to convert a basic XML object into a simple k/v pair.\n *\n * @param xml\n * @returns\n */\nexport function getResourceItemsAsObject(xml: ResourceItemXML[]): Record<string, string> | null {\n  return xml.reduce(\n    (prev, curr) => ({\n      ...prev,\n      [curr.$.name]: curr._,\n    }),\n    {}\n  );\n}\n\n/**\n * Helper to convert a basic k/v object to a ResourceItemXML array.\n *\n * @param xml\n * @returns\n */\nexport function getObjectAsResourceItems(obj: Record<string, string>): ResourceItemXML[] {\n  return Object.entries(obj).map(([name, value]) => ({\n    $: { name },\n    _: value,\n  }));\n}\n\nexport function getObjectAsResourceGroup(group: {\n  name: string;\n  parent: string;\n  item: Record<string, string>;\n}): ResourceGroupXML {\n  return {\n    $: {\n      name: group.name,\n      parent: group.parent,\n    },\n    item: getObjectAsResourceItems(group.item),\n  };\n}\n"]},"metadata":{},"sourceType":"script"}