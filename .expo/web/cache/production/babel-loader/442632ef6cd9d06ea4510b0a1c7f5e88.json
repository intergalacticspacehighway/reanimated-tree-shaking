{"ast":null,"code":"function _createForOfIteratorHelper(o,allowArrayLike){var it=typeof Symbol!==\"undefined\"&&o[Symbol.iterator]||o[\"@@iterator\"];if(!it){if(Array.isArray(o)||(it=_unsupportedIterableToArray(o))||allowArrayLike&&o&&typeof o.length===\"number\"){if(it)o=it;var i=0;var F=function F(){};return{s:F,n:function n(){if(i>=o.length)return{done:true};return{done:false,value:o[i++]};},e:function e(_e){throw _e;},f:F};}throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");}var normalCompletion=true,didErr=false,err;return{s:function s(){it=it.call(o);},n:function n(){var step=it.next();normalCompletion=step.done;return step;},e:function e(_e2){didErr=true;err=_e2;},f:function f(){try{if(!normalCompletion&&it[\"return\"]!=null)it[\"return\"]();}finally{if(didErr)throw err;}}};}function _unsupportedIterableToArray(o,minLen){if(!o)return;if(typeof o===\"string\")return _arrayLikeToArray(o,minLen);var n=Object.prototype.toString.call(o).slice(8,-1);if(n===\"Object\"&&o.constructor)n=o.constructor.name;if(n===\"Map\"||n===\"Set\")return Array.from(o);if(n===\"Arguments\"||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n))return _arrayLikeToArray(o,minLen);}function _arrayLikeToArray(arr,len){if(len==null||len>arr.length)len=arr.length;for(var i=0,arr2=new Array(len);i<len;i++){arr2[i]=arr[i];}return arr2;}import{defineAnimation}from'./util';import{withTiming}from'./timing';import{ColorProperties}from'../UpdateProps';import{processColor}from'../Colors';// resolves path to value for nested objects\n// if path cannot be resolved returns undefined\nexport var resolvePath=function(){var _f=function _f(obj,path){var keys=Array.isArray(path)?path:[path];return keys.reduce(function(acc,current){if(Array.isArray(acc)&&typeof current==='number'){return acc[current];}else if(typeof acc==='object'&&current in acc){return acc[current];}return undefined;},obj);};_f._closure={};_f.asString=\"function resolvePath(obj,path){const keys=Array.isArray(path)?path:[path];return keys.reduce(function(acc,current){if(Array.isArray(acc)&&typeof current==='number'){return acc[current];}else if(typeof acc==='object'&&current in acc){return acc[current];}return undefined;},obj);}\";_f.__workletHash=6802843237952;_f.__location=\"/Users/fernandorojo/Developer/messing/rea-tree/node_modules/react-native-reanimated/lib/reanimated2/animation/styleAnimation.js (7:7)\";return _f;}();export var setPath=function(){var _f=function _f(obj,path,value){var keys=Array.isArray(path)?path:[path];var currObj=obj;for(var i=0;i<keys.length-1;i++){// creates entry if there isn't one\ncurrObj=currObj;if(!currObj[keys[i]]){// if next key is a number create an array\nif(typeof keys[i+1]==='number'){currObj[keys[i]]=[];}else{currObj[keys[i]]={};}}currObj=currObj[keys[i]];}currObj[keys[keys.length-1]]=value;};_f._closure={};_f.asString=\"function setPath(obj,path,value){const keys=Array.isArray(path)?path:[path];let currObj=obj;for(let i=0;i<keys.length-1;i++){currObj=currObj;if(!currObj[keys[i]]){if(typeof keys[i+1]==='number'){currObj[keys[i]]=[];}else{currObj[keys[i]]={};}}currObj=currObj[keys[i]];}currObj[keys[keys.length-1]]=value;}\";_f.__workletHash=16252556056779;_f.__location=\"/Users/fernandorojo/Developer/messing/rea-tree/node_modules/react-native-reanimated/lib/reanimated2/animation/styleAnimation.js (20:7)\";return _f;}();export var withStyleAnimation=function(){var _f=function _f(styleAnimations){return defineAnimation({},function(){var _f=function _f(){var onFrame=function onFrame(animation,now){var stillGoing=false;var entriesToCheck=[{value:animation.styleAnimations,path:[]}];while(entriesToCheck.length>0){var currentEntry=entriesToCheck.pop();if(Array.isArray(currentEntry.value)){for(var index=0;index<currentEntry.value.length;index++){entriesToCheck.push({value:currentEntry.value[index],path:currentEntry.path.concat(index)});}}else if(typeof currentEntry.value==='object'&&currentEntry.value.onFrame===undefined){// nested object\nfor(var _i=0,_Object$keys=Object.keys(currentEntry.value);_i<_Object$keys.length;_i++){var key=_Object$keys[_i];entriesToCheck.push({value:currentEntry.value[key],path:currentEntry.path.concat(key)});}}else{var currentStyleAnimation=currentEntry.value;if(currentStyleAnimation.finished){continue;}var finished=currentStyleAnimation.onFrame(currentStyleAnimation,now);if(finished){currentStyleAnimation.finished=true;if(currentStyleAnimation.callback){currentStyleAnimation.callback(true);}}else{stillGoing=true;}if(ColorProperties.includes(currentEntry.path[0])){currentStyleAnimation.current=processColor(currentStyleAnimation.current);}setPath(animation.current,currentEntry.path,currentStyleAnimation.current);}}return!stillGoing;};var onStart=function onStart(animation,value,now,previousAnimation){var entriesToCheck=[{value:styleAnimations,path:[]}];while(entriesToCheck.length>0){var currentEntry=entriesToCheck.pop();if(Array.isArray(currentEntry.value)){for(var index=0;index<currentEntry.value.length;index++){entriesToCheck.push({value:currentEntry.value[index],path:currentEntry.path.concat(index)});}}else if(typeof currentEntry.value==='object'&&currentEntry.value.onStart===undefined){for(var _i2=0,_Object$keys2=Object.keys(currentEntry.value);_i2<_Object$keys2.length;_i2++){var key=_Object$keys2[_i2];entriesToCheck.push({value:currentEntry.value[key],path:currentEntry.path.concat(key)});}}else{var prevAnimation=resolvePath(previousAnimation===null||previousAnimation===void 0?void 0:previousAnimation.styleAnimations,currentEntry.path);var prevVal=resolvePath(value,currentEntry.path);if(prevAnimation&&!prevVal){prevVal=prevAnimation.current;}setPath(animation.current,currentEntry.path,prevVal);var currentAnimation=void 0;if(typeof currentEntry.value!=='object'||!currentEntry.value.onStart){currentAnimation=withTiming(currentEntry.value,{duration:0});setPath(animation.styleAnimations,currentEntry.path,currentAnimation);}else{currentAnimation=currentEntry.value;}currentAnimation.onStart(currentAnimation,prevVal,now,prevAnimation);}}};var callback=function callback(finished){if(!finished){var animationsToCheck=[styleAnimations];while(animationsToCheck.length>0){var currentAnimation=animationsToCheck.pop();if(Array.isArray(currentAnimation)){var _iterator=_createForOfIteratorHelper(currentAnimation),_step;try{for(_iterator.s();!(_step=_iterator.n()).done;){var element=_step.value;animationsToCheck.push(element);}}catch(err){_iterator.e(err);}finally{_iterator.f();}}else if(typeof currentAnimation==='object'&&currentAnimation.onStart===undefined){for(var _i3=0,_Object$values=Object.values(currentAnimation);_i3<_Object$values.length;_i3++){var value=_Object$values[_i3];animationsToCheck.push(value);}}else{var currentStyleAnimation=currentAnimation;if(!currentStyleAnimation.finished&&currentStyleAnimation.callback){currentStyleAnimation.callback(false);}}}}};return{isHigherOrder:true,onFrame:onFrame,onStart:onStart,current:{},styleAnimations:styleAnimations,callback:callback};};_f._closure={ColorProperties:ColorProperties,processColor:processColor,setPath:setPath,styleAnimations:styleAnimations,resolvePath:resolvePath,withTiming:withTiming};_f.asString=\"function _f(){const{ColorProperties,processColor,setPath,styleAnimations,resolvePath,withTiming}=jsThis._closure;{const onFrame=function(animation,now){let stillGoing=false;const entriesToCheck=[{value:animation.styleAnimations,path:[]}];while(entriesToCheck.length>0){const currentEntry=entriesToCheck.pop();if(Array.isArray(currentEntry.value)){for(let index=0;index<currentEntry.value.length;index++){entriesToCheck.push({value:currentEntry.value[index],path:currentEntry.path.concat(index)});}}else if(typeof currentEntry.value==='object'&&currentEntry.value.onFrame===undefined){for(const key of Object.keys(currentEntry.value)){entriesToCheck.push({value:currentEntry.value[key],path:currentEntry.path.concat(key)});}}else{const currentStyleAnimation=currentEntry.value;if(currentStyleAnimation.finished){continue;}const finished=currentStyleAnimation.onFrame(currentStyleAnimation,now);if(finished){currentStyleAnimation.finished=true;if(currentStyleAnimation.callback){currentStyleAnimation.callback(true);}}else{stillGoing=true;}if(ColorProperties.includes(currentEntry.path[0])){currentStyleAnimation.current=processColor(currentStyleAnimation.current);}setPath(animation.current,currentEntry.path,currentStyleAnimation.current);}}return!stillGoing;};const onStart=function(animation,value,now,previousAnimation){const entriesToCheck=[{value:styleAnimations,path:[]}];while(entriesToCheck.length>0){const currentEntry=entriesToCheck.pop();if(Array.isArray(currentEntry.value)){for(let index=0;index<currentEntry.value.length;index++){entriesToCheck.push({value:currentEntry.value[index],path:currentEntry.path.concat(index)});}}else if(typeof currentEntry.value==='object'&&currentEntry.value.onStart===undefined){for(const key of Object.keys(currentEntry.value)){entriesToCheck.push({value:currentEntry.value[key],path:currentEntry.path.concat(key)});}}else{const prevAnimation=resolvePath(previousAnimation===null||previousAnimation===void 0?void 0:previousAnimation.styleAnimations,currentEntry.path);let prevVal=resolvePath(value,currentEntry.path);if(prevAnimation&&!prevVal){prevVal=prevAnimation.current;}setPath(animation.current,currentEntry.path,prevVal);let currentAnimation;if(typeof currentEntry.value!=='object'||!currentEntry.value.onStart){currentAnimation=withTiming(currentEntry.value,{duration:0});setPath(animation.styleAnimations,currentEntry.path,currentAnimation);}else{currentAnimation=currentEntry.value;}currentAnimation.onStart(currentAnimation,prevVal,now,prevAnimation);}}};const callback=function(finished){if(!finished){const animationsToCheck=[styleAnimations];while(animationsToCheck.length>0){const currentAnimation=animationsToCheck.pop();if(Array.isArray(currentAnimation)){for(const element of currentAnimation){animationsToCheck.push(element);}}else if(typeof currentAnimation==='object'&&currentAnimation.onStart===undefined){for(const value of Object.values(currentAnimation)){animationsToCheck.push(value);}}else{const currentStyleAnimation=currentAnimation;if(!currentStyleAnimation.finished&&currentStyleAnimation.callback){currentStyleAnimation.callback(false);}}}}};return{isHigherOrder:true,onFrame:onFrame,onStart:onStart,current:{},styleAnimations:styleAnimations,callback:callback};}}\";_f.__workletHash=9887536897803;_f.__location=\"/Users/fernandorojo/Developer/messing/rea-tree/node_modules/react-native-reanimated/lib/reanimated2/animation/styleAnimation.js (43:31)\";return _f;}());};_f._closure={defineAnimation:defineAnimation,ColorProperties:ColorProperties,processColor:processColor,setPath:setPath,resolvePath:resolvePath,withTiming:withTiming};_f.asString=\"function withStyleAnimation(styleAnimations){const{defineAnimation,ColorProperties,processColor,setPath,resolvePath,withTiming}=jsThis._closure;{return defineAnimation({},function(){'worklet';const onFrame=function(animation,now){let stillGoing=false;const entriesToCheck=[{value:animation.styleAnimations,path:[]}];while(entriesToCheck.length>0){const currentEntry=entriesToCheck.pop();if(Array.isArray(currentEntry.value)){for(let index=0;index<currentEntry.value.length;index++){entriesToCheck.push({value:currentEntry.value[index],path:currentEntry.path.concat(index)});}}else if(typeof currentEntry.value==='object'&&currentEntry.value.onFrame===undefined){for(const key of Object.keys(currentEntry.value)){entriesToCheck.push({value:currentEntry.value[key],path:currentEntry.path.concat(key)});}}else{const currentStyleAnimation=currentEntry.value;if(currentStyleAnimation.finished){continue;}const finished=currentStyleAnimation.onFrame(currentStyleAnimation,now);if(finished){currentStyleAnimation.finished=true;if(currentStyleAnimation.callback){currentStyleAnimation.callback(true);}}else{stillGoing=true;}if(ColorProperties.includes(currentEntry.path[0])){currentStyleAnimation.current=processColor(currentStyleAnimation.current);}setPath(animation.current,currentEntry.path,currentStyleAnimation.current);}}return!stillGoing;};const onStart=function(animation,value,now,previousAnimation){const entriesToCheck=[{value:styleAnimations,path:[]}];while(entriesToCheck.length>0){const currentEntry=entriesToCheck.pop();if(Array.isArray(currentEntry.value)){for(let index=0;index<currentEntry.value.length;index++){entriesToCheck.push({value:currentEntry.value[index],path:currentEntry.path.concat(index)});}}else if(typeof currentEntry.value==='object'&&currentEntry.value.onStart===undefined){for(const key of Object.keys(currentEntry.value)){entriesToCheck.push({value:currentEntry.value[key],path:currentEntry.path.concat(key)});}}else{const prevAnimation=resolvePath(previousAnimation===null||previousAnimation===void 0?void 0:previousAnimation.styleAnimations,currentEntry.path);let prevVal=resolvePath(value,currentEntry.path);if(prevAnimation&&!prevVal){prevVal=prevAnimation.current;}setPath(animation.current,currentEntry.path,prevVal);let currentAnimation;if(typeof currentEntry.value!=='object'||!currentEntry.value.onStart){currentAnimation=withTiming(currentEntry.value,{duration:0});setPath(animation.styleAnimations,currentEntry.path,currentAnimation);}else{currentAnimation=currentEntry.value;}currentAnimation.onStart(currentAnimation,prevVal,now,prevAnimation);}}};const callback=function(finished){if(!finished){const animationsToCheck=[styleAnimations];while(animationsToCheck.length>0){const currentAnimation=animationsToCheck.pop();if(Array.isArray(currentAnimation)){for(const element of currentAnimation){animationsToCheck.push(element);}}else if(typeof currentAnimation==='object'&&currentAnimation.onStart===undefined){for(const value of Object.values(currentAnimation)){animationsToCheck.push(value);}}else{const currentStyleAnimation=currentAnimation;if(!currentStyleAnimation.finished&&currentStyleAnimation.callback){currentStyleAnimation.callback(false);}}}}};return{isHigherOrder:true,onFrame:onFrame,onStart:onStart,current:{},styleAnimations:styleAnimations,callback:callback};});}}\";_f.__workletHash=15006684130601;_f.__location=\"/Users/fernandorojo/Developer/messing/rea-tree/node_modules/react-native-reanimated/lib/reanimated2/animation/styleAnimation.js (41:7)\";return _f;}();","map":{"version":3,"names":["_createForOfIteratorHelper","o","allowArrayLike","it","Symbol","iterator","Array","isArray","_unsupportedIterableToArray","length","i","F","s","n","done","value","e","_e","f","TypeError","normalCompletion","didErr","err","call","step","next","_e2","minLen","_arrayLikeToArray","Object","prototype","toString","slice","constructor","name","from","test","arr","len","arr2","defineAnimation","withTiming","ColorProperties","processColor","resolvePath","_f","obj","path","keys","reduce","acc","current","undefined","_closure","asString","__workletHash","__location","setPath","currObj","withStyleAnimation","styleAnimations","onFrame","animation","now","stillGoing","entriesToCheck","currentEntry","pop","index","push","concat","_i","_Object$keys","key","currentStyleAnimation","finished","callback","includes","onStart","previousAnimation","_i2","_Object$keys2","prevAnimation","prevVal","currentAnimation","duration","animationsToCheck","_iterator","_step","element","_i3","_Object$values","values","isHigherOrder"],"sources":["/Users/fernandorojo/Developer/messing/rea-tree/node_modules/react-native-reanimated/lib/reanimated2/animation/styleAnimation.js"],"sourcesContent":["function _createForOfIteratorHelper(o, allowArrayLike) { var it = typeof Symbol !== \"undefined\" && o[Symbol.iterator] || o[\"@@iterator\"]; if (!it) { if (Array.isArray(o) || (it = _unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === \"number\") { if (it) o = it; var i = 0; var F = function F() {}; return { s: F, n: function n() { if (i >= o.length) return { done: true }; return { done: false, value: o[i++] }; }, e: function e(_e) { throw _e; }, f: F }; } throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); } var normalCompletion = true, didErr = false, err; return { s: function s() { it = it.call(o); }, n: function n() { var step = it.next(); normalCompletion = step.done; return step; }, e: function e(_e2) { didErr = true; err = _e2; }, f: function f() { try { if (!normalCompletion && it[\"return\"] != null) it[\"return\"](); } finally { if (didErr) throw err; } } }; }\n\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\n\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\n\nimport { defineAnimation } from './util';\nimport { withTiming } from './timing';\nimport { ColorProperties } from '../UpdateProps';\nimport { processColor } from '../Colors'; // resolves path to value for nested objects\n// if path cannot be resolved returns undefined\n\nexport var resolvePath = function () {\n  var _f = function _f(obj, path) {\n    var keys = Array.isArray(path) ? path : [path];\n    return keys.reduce(function (acc, current) {\n      if (Array.isArray(acc) && typeof current === 'number') {\n        return acc[current];\n      } else if (typeof acc === 'object' && current in acc) {\n        return acc[current];\n      }\n\n      return undefined;\n    }, obj);\n  };\n\n  _f._closure = {};\n  _f.asString = \"function resolvePath(obj,path){const keys=Array.isArray(path)?path:[path];return keys.reduce(function(acc,current){if(Array.isArray(acc)&&typeof current==='number'){return acc[current];}else if(typeof acc==='object'&&current in acc){return acc[current];}return undefined;},obj);}\";\n  _f.__workletHash = 6802843237952;\n  _f.__location = \"/Users/fernandorojo/Developer/messing/rea-tree/node_modules/react-native-reanimated/lib/reanimated2/animation/styleAnimation.js (7:7)\";\n  return _f;\n}();\nexport var setPath = function () {\n  var _f = function _f(obj, path, value) {\n    var keys = Array.isArray(path) ? path : [path];\n    var currObj = obj;\n\n    for (var i = 0; i < keys.length - 1; i++) {\n      // creates entry if there isn't one\n      currObj = currObj;\n\n      if (!currObj[keys[i]]) {\n        // if next key is a number create an array\n        if (typeof keys[i + 1] === 'number') {\n          currObj[keys[i]] = [];\n        } else {\n          currObj[keys[i]] = {};\n        }\n      }\n\n      currObj = currObj[keys[i]];\n    }\n\n    currObj[keys[keys.length - 1]] = value;\n  };\n\n  _f._closure = {};\n  _f.asString = \"function setPath(obj,path,value){const keys=Array.isArray(path)?path:[path];let currObj=obj;for(let i=0;i<keys.length-1;i++){currObj=currObj;if(!currObj[keys[i]]){if(typeof keys[i+1]==='number'){currObj[keys[i]]=[];}else{currObj[keys[i]]={};}}currObj=currObj[keys[i]];}currObj[keys[keys.length-1]]=value;}\";\n  _f.__workletHash = 16252556056779;\n  _f.__location = \"/Users/fernandorojo/Developer/messing/rea-tree/node_modules/react-native-reanimated/lib/reanimated2/animation/styleAnimation.js (20:7)\";\n  return _f;\n}();\nexport var withStyleAnimation = function () {\n  var _f = function _f(styleAnimations) {\n    return defineAnimation({}, function () {\n      var _f = function _f() {\n        var onFrame = function onFrame(animation, now) {\n          var stillGoing = false;\n          var entriesToCheck = [{\n            value: animation.styleAnimations,\n            path: []\n          }];\n\n          while (entriesToCheck.length > 0) {\n            var currentEntry = entriesToCheck.pop();\n\n            if (Array.isArray(currentEntry.value)) {\n              for (var index = 0; index < currentEntry.value.length; index++) {\n                entriesToCheck.push({\n                  value: currentEntry.value[index],\n                  path: currentEntry.path.concat(index)\n                });\n              }\n            } else if (typeof currentEntry.value === 'object' && currentEntry.value.onFrame === undefined) {\n              // nested object\n              for (var _i = 0, _Object$keys = Object.keys(currentEntry.value); _i < _Object$keys.length; _i++) {\n                var key = _Object$keys[_i];\n                entriesToCheck.push({\n                  value: currentEntry.value[key],\n                  path: currentEntry.path.concat(key)\n                });\n              }\n            } else {\n              var currentStyleAnimation = currentEntry.value;\n\n              if (currentStyleAnimation.finished) {\n                continue;\n              }\n\n              var finished = currentStyleAnimation.onFrame(currentStyleAnimation, now);\n\n              if (finished) {\n                currentStyleAnimation.finished = true;\n\n                if (currentStyleAnimation.callback) {\n                  currentStyleAnimation.callback(true);\n                }\n              } else {\n                stillGoing = true;\n              }\n\n              if (ColorProperties.includes(currentEntry.path[0])) {\n                currentStyleAnimation.current = processColor(currentStyleAnimation.current);\n              }\n\n              setPath(animation.current, currentEntry.path, currentStyleAnimation.current);\n            }\n          }\n\n          return !stillGoing;\n        };\n\n        var onStart = function onStart(animation, value, now, previousAnimation) {\n          var entriesToCheck = [{\n            value: styleAnimations,\n            path: []\n          }];\n\n          while (entriesToCheck.length > 0) {\n            var currentEntry = entriesToCheck.pop();\n\n            if (Array.isArray(currentEntry.value)) {\n              for (var index = 0; index < currentEntry.value.length; index++) {\n                entriesToCheck.push({\n                  value: currentEntry.value[index],\n                  path: currentEntry.path.concat(index)\n                });\n              }\n            } else if (typeof currentEntry.value === 'object' && currentEntry.value.onStart === undefined) {\n              for (var _i2 = 0, _Object$keys2 = Object.keys(currentEntry.value); _i2 < _Object$keys2.length; _i2++) {\n                var key = _Object$keys2[_i2];\n                entriesToCheck.push({\n                  value: currentEntry.value[key],\n                  path: currentEntry.path.concat(key)\n                });\n              }\n            } else {\n              var prevAnimation = resolvePath(previousAnimation === null || previousAnimation === void 0 ? void 0 : previousAnimation.styleAnimations, currentEntry.path);\n              var prevVal = resolvePath(value, currentEntry.path);\n\n              if (prevAnimation && !prevVal) {\n                prevVal = prevAnimation.current;\n              }\n\n              setPath(animation.current, currentEntry.path, prevVal);\n              var currentAnimation = void 0;\n\n              if (typeof currentEntry.value !== 'object' || !currentEntry.value.onStart) {\n                currentAnimation = withTiming(currentEntry.value, {\n                  duration: 0\n                });\n                setPath(animation.styleAnimations, currentEntry.path, currentAnimation);\n              } else {\n                currentAnimation = currentEntry.value;\n              }\n\n              currentAnimation.onStart(currentAnimation, prevVal, now, prevAnimation);\n            }\n          }\n        };\n\n        var callback = function callback(finished) {\n          if (!finished) {\n            var animationsToCheck = [styleAnimations];\n\n            while (animationsToCheck.length > 0) {\n              var currentAnimation = animationsToCheck.pop();\n\n              if (Array.isArray(currentAnimation)) {\n                var _iterator = _createForOfIteratorHelper(currentAnimation),\n                    _step;\n\n                try {\n                  for (_iterator.s(); !(_step = _iterator.n()).done;) {\n                    var element = _step.value;\n                    animationsToCheck.push(element);\n                  }\n                } catch (err) {\n                  _iterator.e(err);\n                } finally {\n                  _iterator.f();\n                }\n              } else if (typeof currentAnimation === 'object' && currentAnimation.onStart === undefined) {\n                for (var _i3 = 0, _Object$values = Object.values(currentAnimation); _i3 < _Object$values.length; _i3++) {\n                  var value = _Object$values[_i3];\n                  animationsToCheck.push(value);\n                }\n              } else {\n                var currentStyleAnimation = currentAnimation;\n\n                if (!currentStyleAnimation.finished && currentStyleAnimation.callback) {\n                  currentStyleAnimation.callback(false);\n                }\n              }\n            }\n          }\n        };\n\n        return {\n          isHigherOrder: true,\n          onFrame: onFrame,\n          onStart: onStart,\n          current: {},\n          styleAnimations: styleAnimations,\n          callback: callback\n        };\n      };\n\n      _f._closure = {\n        ColorProperties: ColorProperties,\n        processColor: processColor,\n        setPath: setPath,\n        styleAnimations: styleAnimations,\n        resolvePath: resolvePath,\n        withTiming: withTiming\n      };\n      _f.asString = \"function _f(){const{ColorProperties,processColor,setPath,styleAnimations,resolvePath,withTiming}=jsThis._closure;{const onFrame=function(animation,now){let stillGoing=false;const entriesToCheck=[{value:animation.styleAnimations,path:[]}];while(entriesToCheck.length>0){const currentEntry=entriesToCheck.pop();if(Array.isArray(currentEntry.value)){for(let index=0;index<currentEntry.value.length;index++){entriesToCheck.push({value:currentEntry.value[index],path:currentEntry.path.concat(index)});}}else if(typeof currentEntry.value==='object'&&currentEntry.value.onFrame===undefined){for(const key of Object.keys(currentEntry.value)){entriesToCheck.push({value:currentEntry.value[key],path:currentEntry.path.concat(key)});}}else{const currentStyleAnimation=currentEntry.value;if(currentStyleAnimation.finished){continue;}const finished=currentStyleAnimation.onFrame(currentStyleAnimation,now);if(finished){currentStyleAnimation.finished=true;if(currentStyleAnimation.callback){currentStyleAnimation.callback(true);}}else{stillGoing=true;}if(ColorProperties.includes(currentEntry.path[0])){currentStyleAnimation.current=processColor(currentStyleAnimation.current);}setPath(animation.current,currentEntry.path,currentStyleAnimation.current);}}return!stillGoing;};const onStart=function(animation,value,now,previousAnimation){const entriesToCheck=[{value:styleAnimations,path:[]}];while(entriesToCheck.length>0){const currentEntry=entriesToCheck.pop();if(Array.isArray(currentEntry.value)){for(let index=0;index<currentEntry.value.length;index++){entriesToCheck.push({value:currentEntry.value[index],path:currentEntry.path.concat(index)});}}else if(typeof currentEntry.value==='object'&&currentEntry.value.onStart===undefined){for(const key of Object.keys(currentEntry.value)){entriesToCheck.push({value:currentEntry.value[key],path:currentEntry.path.concat(key)});}}else{const prevAnimation=resolvePath(previousAnimation===null||previousAnimation===void 0?void 0:previousAnimation.styleAnimations,currentEntry.path);let prevVal=resolvePath(value,currentEntry.path);if(prevAnimation&&!prevVal){prevVal=prevAnimation.current;}setPath(animation.current,currentEntry.path,prevVal);let currentAnimation;if(typeof currentEntry.value!=='object'||!currentEntry.value.onStart){currentAnimation=withTiming(currentEntry.value,{duration:0});setPath(animation.styleAnimations,currentEntry.path,currentAnimation);}else{currentAnimation=currentEntry.value;}currentAnimation.onStart(currentAnimation,prevVal,now,prevAnimation);}}};const callback=function(finished){if(!finished){const animationsToCheck=[styleAnimations];while(animationsToCheck.length>0){const currentAnimation=animationsToCheck.pop();if(Array.isArray(currentAnimation)){for(const element of currentAnimation){animationsToCheck.push(element);}}else if(typeof currentAnimation==='object'&&currentAnimation.onStart===undefined){for(const value of Object.values(currentAnimation)){animationsToCheck.push(value);}}else{const currentStyleAnimation=currentAnimation;if(!currentStyleAnimation.finished&&currentStyleAnimation.callback){currentStyleAnimation.callback(false);}}}}};return{isHigherOrder:true,onFrame:onFrame,onStart:onStart,current:{},styleAnimations:styleAnimations,callback:callback};}}\";\n      _f.__workletHash = 9887536897803;\n      _f.__location = \"/Users/fernandorojo/Developer/messing/rea-tree/node_modules/react-native-reanimated/lib/reanimated2/animation/styleAnimation.js (43:31)\";\n      return _f;\n    }());\n  };\n\n  _f._closure = {\n    defineAnimation: defineAnimation,\n    ColorProperties: ColorProperties,\n    processColor: processColor,\n    setPath: setPath,\n    resolvePath: resolvePath,\n    withTiming: withTiming\n  };\n  _f.asString = \"function withStyleAnimation(styleAnimations){const{defineAnimation,ColorProperties,processColor,setPath,resolvePath,withTiming}=jsThis._closure;{return defineAnimation({},function(){'worklet';const onFrame=function(animation,now){let stillGoing=false;const entriesToCheck=[{value:animation.styleAnimations,path:[]}];while(entriesToCheck.length>0){const currentEntry=entriesToCheck.pop();if(Array.isArray(currentEntry.value)){for(let index=0;index<currentEntry.value.length;index++){entriesToCheck.push({value:currentEntry.value[index],path:currentEntry.path.concat(index)});}}else if(typeof currentEntry.value==='object'&&currentEntry.value.onFrame===undefined){for(const key of Object.keys(currentEntry.value)){entriesToCheck.push({value:currentEntry.value[key],path:currentEntry.path.concat(key)});}}else{const currentStyleAnimation=currentEntry.value;if(currentStyleAnimation.finished){continue;}const finished=currentStyleAnimation.onFrame(currentStyleAnimation,now);if(finished){currentStyleAnimation.finished=true;if(currentStyleAnimation.callback){currentStyleAnimation.callback(true);}}else{stillGoing=true;}if(ColorProperties.includes(currentEntry.path[0])){currentStyleAnimation.current=processColor(currentStyleAnimation.current);}setPath(animation.current,currentEntry.path,currentStyleAnimation.current);}}return!stillGoing;};const onStart=function(animation,value,now,previousAnimation){const entriesToCheck=[{value:styleAnimations,path:[]}];while(entriesToCheck.length>0){const currentEntry=entriesToCheck.pop();if(Array.isArray(currentEntry.value)){for(let index=0;index<currentEntry.value.length;index++){entriesToCheck.push({value:currentEntry.value[index],path:currentEntry.path.concat(index)});}}else if(typeof currentEntry.value==='object'&&currentEntry.value.onStart===undefined){for(const key of Object.keys(currentEntry.value)){entriesToCheck.push({value:currentEntry.value[key],path:currentEntry.path.concat(key)});}}else{const prevAnimation=resolvePath(previousAnimation===null||previousAnimation===void 0?void 0:previousAnimation.styleAnimations,currentEntry.path);let prevVal=resolvePath(value,currentEntry.path);if(prevAnimation&&!prevVal){prevVal=prevAnimation.current;}setPath(animation.current,currentEntry.path,prevVal);let currentAnimation;if(typeof currentEntry.value!=='object'||!currentEntry.value.onStart){currentAnimation=withTiming(currentEntry.value,{duration:0});setPath(animation.styleAnimations,currentEntry.path,currentAnimation);}else{currentAnimation=currentEntry.value;}currentAnimation.onStart(currentAnimation,prevVal,now,prevAnimation);}}};const callback=function(finished){if(!finished){const animationsToCheck=[styleAnimations];while(animationsToCheck.length>0){const currentAnimation=animationsToCheck.pop();if(Array.isArray(currentAnimation)){for(const element of currentAnimation){animationsToCheck.push(element);}}else if(typeof currentAnimation==='object'&&currentAnimation.onStart===undefined){for(const value of Object.values(currentAnimation)){animationsToCheck.push(value);}}else{const currentStyleAnimation=currentAnimation;if(!currentStyleAnimation.finished&&currentStyleAnimation.callback){currentStyleAnimation.callback(false);}}}}};return{isHigherOrder:true,onFrame:onFrame,onStart:onStart,current:{},styleAnimations:styleAnimations,callback:callback};});}}\";\n  _f.__workletHash = 15006684130601;\n  _f.__location = \"/Users/fernandorojo/Developer/messing/rea-tree/node_modules/react-native-reanimated/lib/reanimated2/animation/styleAnimation.js (41:7)\";\n  return _f;\n}();"],"mappings":"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"},"metadata":{},"sourceType":"module"}