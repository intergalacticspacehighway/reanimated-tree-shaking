{"ast":null,"code":"\"use strict\";Object.defineProperty(exports,\"__esModule\",{value:true});exports.getExpoSDKVersion=getExpoSDKVersion;function _jsonFile(){var data=_interopRequireDefault(require(\"@expo/json-file\"));_jsonFile=function _jsonFile(){return data;};return data;}function _resolveFrom(){var data=_interopRequireDefault(require(\"resolve-from\"));_resolveFrom=function _resolveFrom(){return data;};return data;}function _Errors(){var data=require(\"./Errors\");_Errors=function _Errors(){return data;};return data;}function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{\"default\":obj};}function getExpoSDKVersion(projectRoot,exp){if(exp!==null&&exp!==void 0&&exp.sdkVersion){return exp.sdkVersion;}var packageJsonPath=_resolveFrom()[\"default\"].silent(projectRoot,'expo/package.json');if(packageJsonPath){var expoPackageJson=_jsonFile()[\"default\"].read(packageJsonPath,{json5:true});var packageVersion=expoPackageJson.version;if(typeof packageVersion==='string'){var majorVersion=packageVersion.split('.').shift();return\"\".concat(majorVersion,\".0.0\");}}throw new(_Errors().ConfigError)(\"Cannot determine which native SDK version your project uses because the module `expo` is not installed. Please install it with `yarn add expo` and try again.\",'MODULE_NOT_FOUND');}","map":{"version":3,"sources":["../src/Project.ts"],"names":["exp","packageJsonPath","resolveFrom","expoPackageJson","json5","version","packageVersion","majorVersion","ConfigError"],"mappings":"kHAAA,QAAA,CAAA,SAAA,EAAA,CAAA,GAAA,CAAA,IAAA,CAAA,sBAAA,CAAA,OAAA,CAAA,iBAAA,CAAA,CAAA,CAAA,SAAA,CAAA,oBAAA,CAAA,MAAA,CAAA,IAAA,CAAA,CAAA,CAAA,MAAA,CAAA,IAAA,CAAA,CACA,QAAA,CAAA,YAAA,EAAA,CAAA,GAAA,CAAA,IAAA,CAAA,sBAAA,CAAA,OAAA,CAAA,cAAA,CAAA,CAAA,CAAA,YAAA,CAAA,uBAAA,CAAA,MAAA,CAAA,IAAA,CAAA,CAAA,CAAA,MAAA,CAAA,IAAA,CAAA,CAGA,QAAA,CAAA,OAAA,EAAA,CAAA,GAAA,CAAA,IAAA,CAAA,OAAA,CAAA,UAAA,CAAA,CAAA,OAAA,CAAA,kBAAA,CAAA,MAAA,CAAA,IAAA,CAAA,CAAA,CAAA,MAAA,CAAA,IAAA,CAAA,C,qFAEO,QAAA,CAAA,iBAAA,CAAA,WAAA,CAAA,GAAA,CAGG,CACR,GAAIA,GAAJ,GAAA,IAAIA,EAAAA,GAAJ,GAAA,IAAA,EAAIA,EAAAA,GAAG,CAAP,UAAA,CAAqB,CACnB,MAAOA,CAAAA,GAAG,CAAV,UAAA,CACD,CACD,GAAMC,CAAAA,eAAe,CAAGC,YAAAA,aAAAA,CAAAA,MAAAA,CAAAA,WAAAA,CAAxB,mBAAwBA,CAAxB,CACA,GAAA,eAAA,CAAqB,CACnB,GAAMC,CAAAA,eAAe,CAAG,SAAA,aAAA,CAAA,IAAA,CAAA,eAAA,CAA+B,CAAEC,KAAK,CAAE,IAAT,CAA/B,CAAxB,CACA,GAAiBE,CAAAA,cAAjB,CAAA,eAAA,CAAQD,OAAR,CACA,GAAI,MAAA,CAAA,cAAA,GAAJ,QAAA,CAAwC,CACtC,GAAME,CAAAA,YAAY,CAAGD,cAAc,CAAdA,KAAAA,CAAAA,GAAAA,EAArB,KAAqBA,EAArB,CACA,gBAAA,YAAA,SACD,CACF,CACD,KAAM,KAAIE,OAAAA,GAAJ,WAAA,kKAAN,kBAAM,CAAN,CAID","sourcesContent":["import JsonFile from '@expo/json-file';\nimport resolveFrom from 'resolve-from';\n\nimport { ExpoConfig } from './Config.types';\nimport { ConfigError } from './Errors';\n\nexport function getExpoSDKVersion(\n  projectRoot: string,\n  exp: Pick<ExpoConfig, 'sdkVersion'>\n): string {\n  if (exp?.sdkVersion) {\n    return exp.sdkVersion;\n  }\n  const packageJsonPath = resolveFrom.silent(projectRoot, 'expo/package.json');\n  if (packageJsonPath) {\n    const expoPackageJson = JsonFile.read(packageJsonPath, { json5: true });\n    const { version: packageVersion } = expoPackageJson;\n    if (typeof packageVersion === 'string') {\n      const majorVersion = packageVersion.split('.').shift();\n      return `${majorVersion}.0.0`;\n    }\n  }\n  throw new ConfigError(\n    `Cannot determine which native SDK version your project uses because the module \\`expo\\` is not installed. Please install it with \\`yarn add expo\\` and try again.`,\n    'MODULE_NOT_FOUND'\n  );\n}\n"]},"metadata":{},"sourceType":"script"}