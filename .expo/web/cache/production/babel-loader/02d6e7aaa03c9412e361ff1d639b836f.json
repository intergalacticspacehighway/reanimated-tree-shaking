{"ast":null,"code":"\"use strict\";var _regeneratorRuntime=require(\"/Users/fernandorojo/Developer/messing/rea-tree/node_modules/next/dist/compiled/@babel/runtime/regenerator\");var _asyncToGenerator=require(\"/Users/fernandorojo/Developer/messing/rea-tree/node_modules/next/dist/compiled/@babel/runtime/helpers/asyncToGenerator\");var _slicedToArray=require(\"/Users/fernandorojo/Developer/messing/rea-tree/node_modules/next/dist/compiled/@babel/runtime/helpers/slicedToArray\");function _createForOfIteratorHelper(o,allowArrayLike){var it=typeof Symbol!==\"undefined\"&&o[Symbol.iterator]||o[\"@@iterator\"];if(!it){if(Array.isArray(o)||(it=_unsupportedIterableToArray(o))||allowArrayLike&&o&&typeof o.length===\"number\"){if(it)o=it;var i=0;var F=function F(){};return{s:F,n:function n(){if(i>=o.length)return{done:true};return{done:false,value:o[i++]};},e:function e(_e){throw _e;},f:F};}throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");}var normalCompletion=true,didErr=false,err;return{s:function s(){it=it.call(o);},n:function n(){var step=it.next();normalCompletion=step.done;return step;},e:function e(_e2){didErr=true;err=_e2;},f:function f(){try{if(!normalCompletion&&it[\"return\"]!=null)it[\"return\"]();}finally{if(didErr)throw err;}}};}function _unsupportedIterableToArray(o,minLen){if(!o)return;if(typeof o===\"string\")return _arrayLikeToArray(o,minLen);var n=Object.prototype.toString.call(o).slice(8,-1);if(n===\"Object\"&&o.constructor)n=o.constructor.name;if(n===\"Map\"||n===\"Set\")return Array.from(o);if(n===\"Arguments\"||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n))return _arrayLikeToArray(o,minLen);}function _arrayLikeToArray(arr,len){if(len==null||len>arr.length)len=arr.length;for(var i=0,arr2=new Array(len);i<len;i++){arr2[i]=arr[i];}return arr2;}Object.defineProperty(exports,\"__esModule\",{value:true});exports.TargetType=void 0;exports.findApplicationTargetWithDependenciesAsync=findApplicationTargetWithDependenciesAsync;exports.findFirstNativeTarget=findFirstNativeTarget;exports.findNativeTargetByName=findNativeTargetByName;exports.findSignableTargets=findSignableTargets;exports.getNativeTargets=getNativeTargets;exports.getXCBuildConfigurationFromPbxproj=getXCBuildConfigurationFromPbxproj;exports.isTargetOfType=isTargetOfType;function _BuildScheme(){var data=require(\"./BuildScheme\");_BuildScheme=function _BuildScheme(){return data;};return data;}function _Xcodeproj(){var data=require(\"./utils/Xcodeproj\");_Xcodeproj=function _Xcodeproj(){return data;};return data;}function _string(){var data=require(\"./utils/string\");_string=function _string(){return data;};return data;}var TargetType;exports.TargetType=TargetType;(function(TargetType){TargetType[\"APPLICATION\"]=\"com.apple.product-type.application\";TargetType[\"EXTENSION\"]=\"com.apple.product-type.app-extension\";TargetType[\"WATCH\"]=\"com.apple.product-type.application.watchapp\";TargetType[\"APP_CLIP\"]=\"com.apple.product-type.application.on-demand-install-capable\";TargetType[\"STICKER_PACK_EXTENSION\"]=\"com.apple.product-type.app-extension.messages-sticker-pack\";TargetType[\"OTHER\"]=\"other\";})(TargetType||(exports.TargetType=TargetType={}));function getXCBuildConfigurationFromPbxproj(project){var _ref=arguments.length>1&&arguments[1]!==undefined?arguments[1]:{},targetName=_ref.targetName,_ref$buildConfigurati=_ref.buildConfiguration,buildConfiguration=_ref$buildConfigurati===void 0?'Release':_ref$buildConfigurati;var _ref2=targetName?findNativeTargetByName(project,targetName):findFirstNativeTarget(project),_ref3=_slicedToArray(_ref2,2),nativeTarget=_ref3[1];var _ref4=(0,_Xcodeproj().getBuildConfigurationForListIdAndName)(project,{configurationListId:nativeTarget.buildConfigurationList,buildConfiguration:buildConfiguration}),_ref5=_slicedToArray(_ref4,2),xcBuildConfiguration=_ref5[1];return xcBuildConfiguration!==null&&xcBuildConfiguration!==void 0?xcBuildConfiguration:null;}function findApplicationTargetWithDependenciesAsync(_x,_x2){return _findApplicationTargetWithDependenciesAsync.apply(this,arguments);}function _findApplicationTargetWithDependenciesAsync(){_findApplicationTargetWithDependenciesAsync=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(projectRoot,scheme){var applicationTargetName,project,_findNativeTargetByNa,_findNativeTargetByNa2,applicationTarget,dependencies;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:_context.next=2;return(0,_BuildScheme().getApplicationTargetNameForSchemeAsync)(projectRoot,scheme);case 2:applicationTargetName=_context.sent;project=(0,_Xcodeproj().getPbxproj)(projectRoot);_findNativeTargetByNa=findNativeTargetByName(project,applicationTargetName),_findNativeTargetByNa2=_slicedToArray(_findNativeTargetByNa,2),applicationTarget=_findNativeTargetByNa2[1];dependencies=getTargetDependencies(project,applicationTarget);return _context.abrupt(\"return\",{name:(0,_string().trimQuotes)(applicationTarget.name),type:TargetType.APPLICATION,dependencies:dependencies});case 7:case\"end\":return _context.stop();}}},_callee);}));return _findApplicationTargetWithDependenciesAsync.apply(this,arguments);}function getTargetDependencies(project,parentTarget){if(!parentTarget.dependencies||parentTarget.dependencies.length===0){return undefined;}return parentTarget.dependencies.map(function(_ref6){var value=_ref6.value;var _project$getPBXGroupB=project.getPBXGroupByKeyAndType(value,'PBXTargetDependency'),targetId=_project$getPBXGroupB.target;var _findNativeTargetById=findNativeTargetById(project,targetId),_findNativeTargetById2=_slicedToArray(_findNativeTargetById,2),target=_findNativeTargetById2[1];var type=isTargetOfType(target,TargetType.EXTENSION)?TargetType.EXTENSION:TargetType.OTHER;return{name:(0,_string().trimQuotes)(target.name),type:type,dependencies:getTargetDependencies(project,target)};});}function isTargetOfType(target,targetType){return(0,_string().trimQuotes)(target.productType)===targetType;}function getNativeTargets(project){var section=project.pbxNativeTargetSection();return Object.entries(section).filter(_Xcodeproj().isNotComment);}function findSignableTargets(project){var targets=getNativeTargets(project);var signableTargetTypes=[TargetType.APPLICATION,TargetType.APP_CLIP,TargetType.EXTENSION,TargetType.WATCH,TargetType.STICKER_PACK_EXTENSION];var applicationTargets=targets.filter(function(_ref7){var _ref8=_slicedToArray(_ref7,2),target=_ref8[1];var _iterator=_createForOfIteratorHelper(signableTargetTypes),_step;try{for(_iterator.s();!(_step=_iterator.n()).done;){var targetType=_step.value;if(isTargetOfType(target,targetType)){return true;}}}catch(err){_iterator.e(err);}finally{_iterator.f();}return false;});if(applicationTargets.length===0){throw new Error(\"Could not find any signable targets in project.pbxproj\");}return applicationTargets;}function findFirstNativeTarget(project){var targets=getNativeTargets(project);var applicationTargets=targets.filter(function(_ref9){var _ref10=_slicedToArray(_ref9,2),target=_ref10[1];return isTargetOfType(target,TargetType.APPLICATION);});if(applicationTargets.length===0){throw new Error(\"Could not find any application target in project.pbxproj\");}return applicationTargets[0];}function findNativeTargetByName(project,targetName){var nativeTargets=getNativeTargets(project);var nativeTargetEntry=nativeTargets.find(function(_ref11){var _ref12=_slicedToArray(_ref11,2),i=_ref12[1];return(0,_string().trimQuotes)(i.name)===targetName;});if(!nativeTargetEntry){throw new Error(\"Could not find target '\".concat(targetName,\"' in project.pbxproj\"));}return nativeTargetEntry;}function findNativeTargetById(project,targetId){var nativeTargets=getNativeTargets(project);var nativeTargetEntry=nativeTargets.find(function(_ref13){var _ref14=_slicedToArray(_ref13,1),key=_ref14[0];return key===targetId;});if(!nativeTargetEntry){throw new Error(\"Could not find target with id '\".concat(targetId,\"' in project.pbxproj\"));}return nativeTargetEntry;}","map":{"version":3,"sources":["../../src/ios/Target.ts"],"names":["TargetType","buildConfiguration","targetName","findNativeTargetByName","findFirstNativeTarget","configurationListId","nativeTarget","xcBuildConfiguration","applicationTargetName","project","dependencies","getTargetDependencies","name","applicationTarget","type","parentTarget","value","target","targetId","findNativeTargetById","isTargetOfType","section","Object","isNotComment","targets","getNativeTargets","signableTargetTypes","applicationTargets","nativeTargets","nativeTargetEntry","i","key"],"mappings":"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","sourcesContent":["import { PBXNativeTarget, PBXTargetDependency, XCBuildConfiguration, XcodeProject } from 'xcode';\n\nimport { getApplicationTargetNameForSchemeAsync } from './BuildScheme';\nimport {\n  getBuildConfigurationForListIdAndName,\n  getPbxproj,\n  isNotComment,\n  NativeTargetSectionEntry,\n} from './utils/Xcodeproj';\nimport { trimQuotes } from './utils/string';\n\nexport enum TargetType {\n  APPLICATION = 'com.apple.product-type.application',\n  EXTENSION = 'com.apple.product-type.app-extension',\n  WATCH = 'com.apple.product-type.application.watchapp',\n  APP_CLIP = 'com.apple.product-type.application.on-demand-install-capable',\n  STICKER_PACK_EXTENSION = 'com.apple.product-type.app-extension.messages-sticker-pack',\n  OTHER = 'other',\n}\n\nexport interface Target {\n  name: string;\n  type: TargetType;\n  dependencies?: Target[];\n}\n\nexport function getXCBuildConfigurationFromPbxproj(\n  project: XcodeProject,\n  {\n    targetName,\n    buildConfiguration = 'Release',\n  }: { targetName?: string; buildConfiguration?: string } = {}\n): XCBuildConfiguration | null {\n  const [, nativeTarget] = targetName\n    ? findNativeTargetByName(project, targetName)\n    : findFirstNativeTarget(project);\n  const [, xcBuildConfiguration] = getBuildConfigurationForListIdAndName(project, {\n    configurationListId: nativeTarget.buildConfigurationList,\n    buildConfiguration,\n  });\n  return xcBuildConfiguration ?? null;\n}\n\nexport async function findApplicationTargetWithDependenciesAsync(\n  projectRoot: string,\n  scheme: string\n): Promise<Target> {\n  const applicationTargetName = await getApplicationTargetNameForSchemeAsync(projectRoot, scheme);\n  const project = getPbxproj(projectRoot);\n  const [, applicationTarget] = findNativeTargetByName(project, applicationTargetName);\n  const dependencies = getTargetDependencies(project, applicationTarget);\n  return {\n    name: trimQuotes(applicationTarget.name),\n    type: TargetType.APPLICATION,\n    dependencies,\n  };\n}\n\nfunction getTargetDependencies(\n  project: XcodeProject,\n  parentTarget: PBXNativeTarget\n): Target[] | undefined {\n  if (!parentTarget.dependencies || parentTarget.dependencies.length === 0) {\n    return undefined;\n  }\n  return parentTarget.dependencies.map(({ value }) => {\n    const { target: targetId } = project.getPBXGroupByKeyAndType(\n      value,\n      'PBXTargetDependency'\n    ) as PBXTargetDependency;\n\n    const [, target] = findNativeTargetById(project, targetId);\n\n    const type = isTargetOfType(target, TargetType.EXTENSION)\n      ? TargetType.EXTENSION\n      : TargetType.OTHER;\n    return {\n      name: trimQuotes(target.name),\n      type,\n      dependencies: getTargetDependencies(project, target),\n    };\n  });\n}\n\nexport function isTargetOfType(target: PBXNativeTarget, targetType: TargetType): boolean {\n  return trimQuotes(target.productType) === targetType;\n}\n\nexport function getNativeTargets(project: XcodeProject): NativeTargetSectionEntry[] {\n  const section = project.pbxNativeTargetSection();\n  return Object.entries(section).filter(isNotComment);\n}\n\nexport function findSignableTargets(project: XcodeProject): NativeTargetSectionEntry[] {\n  const targets = getNativeTargets(project);\n\n  const signableTargetTypes = [\n    TargetType.APPLICATION,\n    TargetType.APP_CLIP,\n    TargetType.EXTENSION,\n    TargetType.WATCH,\n    TargetType.STICKER_PACK_EXTENSION,\n  ];\n\n  const applicationTargets = targets.filter(([, target]) => {\n    for (const targetType of signableTargetTypes) {\n      if (isTargetOfType(target, targetType)) {\n        return true;\n      }\n    }\n    return false;\n  });\n  if (applicationTargets.length === 0) {\n    throw new Error(`Could not find any signable targets in project.pbxproj`);\n  }\n  return applicationTargets;\n}\n\nexport function findFirstNativeTarget(project: XcodeProject): NativeTargetSectionEntry {\n  const targets = getNativeTargets(project);\n  const applicationTargets = targets.filter(([, target]) =>\n    isTargetOfType(target, TargetType.APPLICATION)\n  );\n  if (applicationTargets.length === 0) {\n    throw new Error(`Could not find any application target in project.pbxproj`);\n  }\n  return applicationTargets[0];\n}\n\nexport function findNativeTargetByName(\n  project: XcodeProject,\n  targetName: string\n): NativeTargetSectionEntry {\n  const nativeTargets = getNativeTargets(project);\n  const nativeTargetEntry = nativeTargets.find(([, i]) => trimQuotes(i.name) === targetName);\n  if (!nativeTargetEntry) {\n    throw new Error(`Could not find target '${targetName}' in project.pbxproj`);\n  }\n  return nativeTargetEntry;\n}\n\nfunction findNativeTargetById(project: XcodeProject, targetId: string): NativeTargetSectionEntry {\n  const nativeTargets = getNativeTargets(project);\n  const nativeTargetEntry = nativeTargets.find(([key]) => key === targetId);\n  if (!nativeTargetEntry) {\n    throw new Error(`Could not find target with id '${targetId}' in project.pbxproj`);\n  }\n  return nativeTargetEntry;\n}\n"]},"metadata":{},"sourceType":"script"}