{"ast":null,"code":"import{useEffect,useRef}from'react';import{cancelAnimation}from'../animation';import{makeMutable}from'../core';export function useSharedValue(init){var ref=useRef(makeMutable(init));if(ref.current===null){ref.current=makeMutable(init);}useEffect(function(){return function(){// eslint-disable-next-line @typescript-eslint/no-non-null-assertion\ncancelAnimation(ref.current);};},[]);// eslint-disable-next-line @typescript-eslint/no-non-null-assertion\nreturn ref.current;}","map":{"version":3,"names":["useEffect","useRef","cancelAnimation","makeMutable","useSharedValue","init","ref","current"],"sources":["/Users/fernandorojo/Developer/messing/rea-tree/node_modules/react-native-reanimated/lib/reanimated2/hook/useSharedValue.js"],"sourcesContent":["import { useEffect, useRef } from 'react';\nimport { cancelAnimation } from '../animation';\nimport { makeMutable } from '../core';\nexport function useSharedValue(init) {\n  const ref = useRef(makeMutable(init));\n\n  if (ref.current === null) {\n    ref.current = makeMutable(init);\n  }\n\n  useEffect(() => {\n    return () => {\n      // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n      cancelAnimation(ref.current);\n    };\n  }, []); // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n\n  return ref.current;\n}"],"mappings":"AAAA,OAASA,SAAT,CAAoBC,MAApB,KAAkC,OAAlC,CACA,OAASC,eAAT,KAAgC,cAAhC,CACA,OAASC,WAAT,KAA4B,SAA5B,CACA,MAAO,SAASC,CAAAA,cAAT,CAAwBC,IAAxB,CAA8B,CACnC,GAAMC,CAAAA,GAAG,CAAGL,MAAM,CAACE,WAAW,CAACE,IAAD,CAAZ,CAAlB,CAEA,GAAIC,GAAG,CAACC,OAAJ,GAAgB,IAApB,CAA0B,CACxBD,GAAG,CAACC,OAAJ,CAAcJ,WAAW,CAACE,IAAD,CAAzB,CACD,CAEDL,SAAS,CAAC,UAAM,CACd,MAAO,WAAM,CACX;AACAE,eAAe,CAACI,GAAG,CAACC,OAAL,CAAf,CACD,CAHD,CAID,CALQ,CAKN,EALM,CAAT,CAKQ;AAER,MAAOD,CAAAA,GAAG,CAACC,OAAX,CACD"},"metadata":{},"sourceType":"module"}