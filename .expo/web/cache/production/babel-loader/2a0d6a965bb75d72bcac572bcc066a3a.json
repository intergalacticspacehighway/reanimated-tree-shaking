{"ast":null,"code":"\"use strict\";var _regeneratorRuntime=require(\"/Users/fernandorojo/Developer/messing/rea-tree/node_modules/next/dist/compiled/@babel/runtime/regenerator\");var _asyncToGenerator=require(\"/Users/fernandorojo/Developer/messing/rea-tree/node_modules/next/dist/compiled/@babel/runtime/helpers/asyncToGenerator\");function _createForOfIteratorHelper(o,allowArrayLike){var it=typeof Symbol!==\"undefined\"&&o[Symbol.iterator]||o[\"@@iterator\"];if(!it){if(Array.isArray(o)||(it=_unsupportedIterableToArray(o))||allowArrayLike&&o&&typeof o.length===\"number\"){if(it)o=it;var i=0;var F=function F(){};return{s:F,n:function n(){if(i>=o.length)return{done:true};return{done:false,value:o[i++]};},e:function e(_e){throw _e;},f:F};}throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");}var normalCompletion=true,didErr=false,err;return{s:function s(){it=it.call(o);},n:function n(){var step=it.next();normalCompletion=step.done;return step;},e:function e(_e2){didErr=true;err=_e2;},f:function f(){try{if(!normalCompletion&&it[\"return\"]!=null)it[\"return\"]();}finally{if(didErr)throw err;}}};}function _unsupportedIterableToArray(o,minLen){if(!o)return;if(typeof o===\"string\")return _arrayLikeToArray(o,minLen);var n=Object.prototype.toString.call(o).slice(8,-1);if(n===\"Object\"&&o.constructor)n=o.constructor.name;if(n===\"Map\"||n===\"Set\")return Array.from(o);if(n===\"Arguments\"||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n))return _arrayLikeToArray(o,minLen);}function _arrayLikeToArray(arr,len){if(len==null||len>arr.length)len=arr.length;for(var i=0,arr2=new Array(len);i<len;i++){arr2[i]=arr[i];}return arr2;}Object.defineProperty(exports,\"__esModule\",{value:true});exports.getProjectStringsXMLPathAsync=getProjectStringsXMLPathAsync;exports.removeStringItem=removeStringItem;exports.setStringItem=setStringItem;function _Paths(){var data=require(\"./Paths\");_Paths=function _Paths(){return data;};return data;}function getProjectStringsXMLPathAsync(_x){return _getProjectStringsXMLPathAsync.apply(this,arguments);}function _getProjectStringsXMLPathAsync(){_getProjectStringsXMLPathAsync=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(projectRoot){var _ref,kind,_args=arguments;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:_ref=_args.length>1&&_args[1]!==undefined?_args[1]:{},kind=_ref.kind;return _context.abrupt(\"return\",(0,_Paths().getResourceXMLPathAsync)(projectRoot,{kind:kind,name:'strings'}));case 2:case\"end\":return _context.stop();}}},_callee);}));return _getProjectStringsXMLPathAsync.apply(this,arguments);}function setStringItem(itemToAdd,stringFileContentsJSON){var _stringFileContentsJS;if(!(stringFileContentsJSON!==null&&stringFileContentsJSON!==void 0&&(_stringFileContentsJS=stringFileContentsJSON.resources)!==null&&_stringFileContentsJS!==void 0&&_stringFileContentsJS.string)){if(!stringFileContentsJSON.resources||typeof stringFileContentsJSON.resources==='string'){// file was empty and JSON is `{resources : ''}`\nstringFileContentsJSON.resources={};}stringFileContentsJSON.resources.string=itemToAdd;return stringFileContentsJSON;}var _iterator=_createForOfIteratorHelper(itemToAdd),_step;try{var _loop=function _loop(){var newItem=_step.value;var stringNameExists=stringFileContentsJSON.resources.string.findIndex(function(e){return e.$.name===newItem.$.name;});if(stringNameExists>-1){// replace the previous item\nstringFileContentsJSON.resources.string[stringNameExists]=newItem;}else{stringFileContentsJSON.resources.string=stringFileContentsJSON.resources.string.concat(newItem);}};for(_iterator.s();!(_step=_iterator.n()).done;){_loop();}}catch(err){_iterator.e(err);}finally{_iterator.f();}return stringFileContentsJSON;}function removeStringItem(named,stringFileContentsJSON){var _stringFileContentsJS2;if(stringFileContentsJSON!==null&&stringFileContentsJSON!==void 0&&(_stringFileContentsJS2=stringFileContentsJSON.resources)!==null&&_stringFileContentsJS2!==void 0&&_stringFileContentsJS2.string){var stringNameExists=stringFileContentsJSON.resources.string.findIndex(function(e){return e.$.name===named;});if(stringNameExists>-1){// replace the previous value\nstringFileContentsJSON.resources.string.splice(stringNameExists,1);}}return stringFileContentsJSON;}","map":{"version":3,"sources":["../../src/android/Strings.ts"],"names":["kind","name","stringFileContentsJSON","stringNameExists","e","newItem"],"mappings":"g3DAAA,QAAA,CAAA,MAAA,EAAA,CAAA,GAAA,CAAA,IAAA,CAAA,OAAA,CAAA,SAAA,CAAA,CAAA,MAAA,CAAA,iBAAA,CAAA,MAAA,CAAA,IAAA,CAAA,CAAA,CAAA,MAAA,CAAA,IAAA,CAAA,C,QAGO,CAAA,6B,mMAAA,iBAAA,WAAA,mMAAA,EAAA,CAEHA,IAFG,MAEHA,IAFG,iCAIE,CAAA,EAAA,MAAA,GAAA,uBAAA,EAAA,WAAA,CAAqC,CAAEA,IAAF,CAAEA,IAAF,CAAQC,IAAI,CAAE,SAAd,CAArC,CAJF,wD,gEAOA,QAAA,CAAA,aAAA,CAAA,SAAA,CAAA,sBAAA,CAGQ,CAAA,GAAA,CAAA,qBAAA,CACb,GAAI,EAACC,sBAAD,GAAA,IAACA,EAAAA,sBAAD,GAAA,IAAA,EAACA,EAAD,CAAA,qBAAA,CAACA,sBAAsB,CAAvB,SAAA,IAAA,IAACA,EAAD,qBAAA,GAAA,IAAA,EAACA,EAAAA,qBAAAA,CAAL,MAAI,CAAJ,CAAgD,CAC9C,GAAI,CAACA,sBAAsB,CAAvB,SAAA,EAAqC,MAAOA,CAAAA,sBAAsB,CAA7B,SAAA,GAAzC,QAAA,CAA+F,CAC7F;AACAA,sBAAsB,CAAtBA,SAAAA,CAAAA,EAAAA,CACD,CACDA,sBAAsB,CAAtBA,SAAAA,CAAAA,MAAAA,CAAAA,SAAAA,CACA,MAAA,CAAA,sBAAA,CACD,CARY,yCAUb,SAVa,0CAUb,CAAA,OAVa,aAWX,GAAMC,CAAAA,gBAAgB,CAAGD,sBAAsB,CAAtBA,SAAAA,CAAAA,MAAAA,CAAAA,SAAAA,CACtBE,SAAAA,CAAD,QAAwBA,CAAAA,CAAC,CAADA,CAAAA,CAAAA,IAAAA,GAAaC,OAAO,CAAPA,CAAAA,CADvC,IACE,EADuBH,CAAzB,CAGA,GAAIC,gBAAgB,CAAG,CAAvB,CAAA,CAA2B,CACzB;AACAD,sBAAsB,CAAtBA,SAAAA,CAAAA,MAAAA,CAAAA,gBAAAA,EAAAA,OAAAA,CAFF,CAAA,IAGO,CACLA,sBAAsB,CAAtBA,SAAAA,CAAAA,MAAAA,CAA0CA,sBAAsB,CAAtBA,SAAAA,CAAAA,MAAAA,CAAAA,MAAAA,CAA1CA,OAA0CA,CAA1CA,CAGD,CArBU,EAUb,+CAAiC,SAYhC,CAtBY,qDAuBb,MAAA,CAAA,sBAAA,CACD,CAEM,QAAA,CAAA,gBAAA,CAAA,KAAA,CAAA,sBAAA,CAA2F,CAAA,GAAA,CAAA,sBAAA,CAChG,GAAIA,sBAAJ,GAAA,IAAIA,EAAAA,sBAAJ,GAAA,IAAA,EAAIA,EAAJ,CAAA,sBAAA,CAAIA,sBAAsB,CAA1B,SAAA,IAAA,IAAIA,EAAJ,sBAAA,GAAA,IAAA,EAAIA,EAAAA,sBAAAA,CAAJ,MAAA,CAA+C,CAC7C,GAAMC,CAAAA,gBAAgB,CAAGD,sBAAsB,CAAtBA,SAAAA,CAAAA,MAAAA,CAAAA,SAAAA,CACtBE,SAAAA,CAAD,QAAwBA,CAAAA,CAAC,CAADA,CAAAA,CAAAA,IAAAA,GAD1B,KACE,EADuBF,CAAzB,CAGA,GAAIC,gBAAgB,CAAG,CAAvB,CAAA,CAA2B,CACzB;AACAD,sBAAsB,CAAtBA,SAAAA,CAAAA,MAAAA,CAAAA,MAAAA,CAAAA,gBAAAA,CAAAA,CAAAA,EACD,CACF,CACD,MAAA,CAAA,sBAAA,CACD","sourcesContent":["import { getResourceXMLPathAsync } from './Paths';\nimport { ResourceItemXML, ResourceKind, ResourceXML } from './Resources';\n\nexport async function getProjectStringsXMLPathAsync(\n  projectRoot: string,\n  { kind }: { kind?: ResourceKind } = {}\n): Promise<string> {\n  return getResourceXMLPathAsync(projectRoot, { kind, name: 'strings' });\n}\n\nexport function setStringItem(\n  itemToAdd: ResourceItemXML[],\n  stringFileContentsJSON: ResourceXML\n): ResourceXML {\n  if (!stringFileContentsJSON?.resources?.string) {\n    if (!stringFileContentsJSON.resources || typeof stringFileContentsJSON.resources === 'string') {\n      // file was empty and JSON is `{resources : ''}`\n      stringFileContentsJSON.resources = {};\n    }\n    stringFileContentsJSON.resources.string = itemToAdd;\n    return stringFileContentsJSON;\n  }\n\n  for (const newItem of itemToAdd) {\n    const stringNameExists = stringFileContentsJSON.resources.string.findIndex(\n      (e: ResourceItemXML) => e.$.name === newItem.$.name\n    );\n    if (stringNameExists > -1) {\n      // replace the previous item\n      stringFileContentsJSON.resources.string[stringNameExists] = newItem;\n    } else {\n      stringFileContentsJSON.resources.string = stringFileContentsJSON.resources.string.concat(\n        newItem\n      );\n    }\n  }\n  return stringFileContentsJSON;\n}\n\nexport function removeStringItem(named: string, stringFileContentsJSON: ResourceXML): ResourceXML {\n  if (stringFileContentsJSON?.resources?.string) {\n    const stringNameExists = stringFileContentsJSON.resources.string.findIndex(\n      (e: ResourceItemXML) => e.$.name === named\n    );\n    if (stringNameExists > -1) {\n      // replace the previous value\n      stringFileContentsJSON.resources.string.splice(stringNameExists, 1);\n    }\n  }\n  return stringFileContentsJSON;\n}\n"]},"metadata":{},"sourceType":"script"}