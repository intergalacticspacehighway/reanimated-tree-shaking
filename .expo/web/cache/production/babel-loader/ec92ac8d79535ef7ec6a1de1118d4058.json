{"ast":null,"code":"\"use strict\";var _regeneratorRuntime=require(\"/Users/fernandorojo/Developer/messing/rea-tree/node_modules/next/dist/compiled/@babel/runtime/regenerator\");var _asyncToGenerator=require(\"/Users/fernandorojo/Developer/messing/rea-tree/node_modules/next/dist/compiled/@babel/runtime/helpers/asyncToGenerator\");var __importDefault=this&&this.__importDefault||function(mod){return mod&&mod.__esModule?mod:{\"default\":mod};};Object.defineProperty(exports,\"__esModule\",{value:true});exports.getAbsolute=exports.getProductionPath=exports.getPublicPaths=exports.getServedPath=exports.getPathsAsync=exports.getPaths=void 0;/* eslint-env node */var config_1=require(\"@expo/config\");var paths_1=require(\"@expo/config/paths\");var find_yarn_workspace_root_1=__importDefault(require(\"find-yarn-workspace-root\"));var fs_1=__importDefault(require(\"fs\"));var path_1=__importDefault(require(\"path\"));var url_1=__importDefault(require(\"url\"));var getMode_1=__importDefault(require(\"./getMode\"));function getAbsolutePathWithProjectRoot(projectRoot){var _path_1$default;for(var _len=arguments.length,pathComponents=new Array(_len>1?_len-1:0),_key=1;_key<_len;_key++){pathComponents[_key-1]=arguments[_key];}// Simple check if we are dealing with a URL.\nif((pathComponents===null||pathComponents===void 0?void 0:pathComponents.length)===1&&pathComponents[0].startsWith('http')){return pathComponents[0];}return(_path_1$default=path_1[\"default\"]).resolve.apply(_path_1$default,[projectRoot].concat(pathComponents));}function getModulesPath(projectRoot){var workspaceRoot=(0,find_yarn_workspace_root_1[\"default\"])(path_1[\"default\"].resolve(projectRoot));// Absolute path or null\nif(workspaceRoot){return path_1[\"default\"].resolve(workspaceRoot,'node_modules');}return path_1[\"default\"].resolve(projectRoot,'node_modules');}function getPlatformExtensions(platform){if(platform==='ios'||platform==='android'){return[platform,'native'];}return[platform];}function parsePaths(projectRoot,nativeAppManifest){var env=arguments.length>2&&arguments[2]!==undefined?arguments[2]:{};var _a;var inputProjectRoot=projectRoot||(0,paths_1.getPossibleProjectRoot)();function absolute(){for(var _len2=arguments.length,pathComponents=new Array(_len2),_key2=0;_key2<_len2;_key2++){pathComponents[_key2]=arguments[_key2];}return getAbsolutePathWithProjectRoot.apply(void 0,[inputProjectRoot].concat(pathComponents));}var packageJsonPath=absolute('package.json');var modulesPath=getModulesPath(inputProjectRoot);var productionPath=absolute((0,config_1.getWebOutputPath)(nativeAppManifest));function templatePath(){var filename=arguments.length>0&&arguments[0]!==undefined?arguments[0]:'';var _a;var overridePath=absolute((_a=env.platform)!==null&&_a!==void 0?_a:'web',filename);if(fs_1[\"default\"].existsSync(overridePath)){return overridePath;}return path_1[\"default\"].join(__dirname,'../../web-default',filename);}function getProductionPath(){var _path_1$default2;for(var _len3=arguments.length,props=new Array(_len3),_key3=0;_key3<_len3;_key3++){props[_key3]=arguments[_key3];}return(_path_1$default2=path_1[\"default\"]).resolve.apply(_path_1$default2,[productionPath].concat(props));}function getIncludeModule(){var _path_1$default3;for(var _len4=arguments.length,props=new Array(_len4),_key4=0;_key4<_len4;_key4++){props[_key4]=arguments[_key4];}return(_path_1$default3=path_1[\"default\"]).resolve.apply(_path_1$default3,[modulesPath].concat(props));}var appMain=null;try{appMain=(0,paths_1.getEntryPoint)(inputProjectRoot,['./index','./src/index'],getPlatformExtensions((_a=env.platform)!==null&&_a!==void 0?_a:'web'));}catch(_unused){// ignore the error\n}return{absolute:absolute,includeModule:getIncludeModule,packageJson:packageJsonPath,root:path_1[\"default\"].resolve(inputProjectRoot),appMain:appMain,modules:modulesPath,servedPath:getServedPath(inputProjectRoot),template:{get:templatePath,folder:templatePath(),indexHtml:templatePath('index.html'),manifest:templatePath('manifest.json'),serveJson:templatePath('serve.json'),favicon:templatePath('favicon.ico')},production:{get:getProductionPath,folder:getProductionPath(),indexHtml:getProductionPath('index.html'),manifest:getProductionPath('manifest.json'),serveJson:getProductionPath('serve.json'),favicon:getProductionPath('favicon.ico')}};}/**\n * Sync method for getting default paths used throughout the Webpack config.\n * This is useful for Next.js which doesn't support async Webpack configs.\n *\n * @param projectRoot\n * @category env\n */function getPaths(projectRoot){var env=arguments.length>1&&arguments[1]!==undefined?arguments[1]:{};var _ref=(0,config_1.getConfig)(projectRoot,{skipSDKVersionRequirement:true}),exp=_ref.exp;return parsePaths(projectRoot,exp,env);}exports.getPaths=getPaths;/**\n * Async method for getting default paths used throughout the Webpack config.\n *\n * @param projectRoot\n * @category env\n */function getPathsAsync(_x){return _getPathsAsync.apply(this,arguments);}function _getPathsAsync(){_getPathsAsync=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(projectRoot){var env,exp,_args=arguments;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:env=_args.length>1&&_args[1]!==undefined?_args[1]:{};try{exp=(0,config_1.getConfig)(projectRoot,{skipSDKVersionRequirement:true}).exp;}catch(_unused2){}return _context.abrupt(\"return\",parsePaths(projectRoot,exp,env));case 3:case\"end\":return _context.stop();}}},_callee);}));return _getPathsAsync.apply(this,arguments);}exports.getPathsAsync=getPathsAsync;/**\n * Get paths dictating where the app is served regardless of the current Webpack mode.\n *\n * @param projectRoot\n * @category env\n */function getServedPath(projectRoot){var _ref2=(0,config_1.getConfig)(projectRoot,{skipSDKVersionRequirement:true}),pkg=_ref2.pkg;var envPublicUrl=process.env.WEB_PUBLIC_URL;// We use `WEB_PUBLIC_URL` environment variable or \"homepage\" field to infer\n// \"public path\" at which the app is served.\n// Webpack needs to know it to put the right <script> hrefs into HTML even in\n// single-page apps that may serve index.html for nested URLs like /todos/42.\n// We can't use a relative path in HTML because we don't want to load something\n// like /todos/42/static/js/bundle.7289d.js. We have to know the root.\nvar publicUrl=envPublicUrl||pkg.homepage;var servedUrl=envPublicUrl||(publicUrl?url_1[\"default\"].parse(publicUrl).pathname:'/');return(0,paths_1.ensureSlash)(servedUrl,true);}exports.getServedPath=getServedPath;/**\n * Get paths dictating where the app is served. In development mode this returns default values.\n *\n * @param env\n * @category env\n */function getPublicPaths(env){var parsedMode=(0,getMode_1[\"default\"])(env);if(parsedMode==='production'){var publicPath=getServedPath(env.projectRoot);return{publicPath:publicPath,publicUrl:publicPath.slice(0,-1)};}return{publicUrl:'',publicPath:'/'};}exports.getPublicPaths=getPublicPaths;/**\n * Get the output folder path. Defaults to `web-build`.\n *\n * @param projectRoot\n * @category env\n */function getProductionPath(projectRoot){var _ref3=(0,config_1.getConfig)(projectRoot,{skipSDKVersionRequirement:true}),exp=_ref3.exp;return getAbsolutePathWithProjectRoot(projectRoot,(0,config_1.getWebOutputPath)(exp));}exports.getProductionPath=getProductionPath;/**\n * Get an absolute path relative to the project root while accounting for remote paths (`https://`).\n *\n * @param projectRoot\n * @category env\n */function getAbsolute(projectRoot){var inputProjectRoot=projectRoot||(0,paths_1.getPossibleProjectRoot)();for(var _len5=arguments.length,pathComponents=new Array(_len5>1?_len5-1:0),_key5=1;_key5<_len5;_key5++){pathComponents[_key5-1]=arguments[_key5];}return getAbsolutePathWithProjectRoot.apply(void 0,[inputProjectRoot].concat(pathComponents));}exports.getAbsolute=getAbsolute;","map":{"version":3,"sources":["../../src/env/paths.ts"],"names":[],"mappings":"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","sourcesContent":["/* eslint-env node */\nimport { ExpoConfig, getConfig, getWebOutputPath } from '@expo/config';\nimport { ensureSlash, getEntryPoint, getPossibleProjectRoot } from '@expo/config/paths';\nimport findWorkspaceRoot from 'find-yarn-workspace-root';\nimport fs from 'fs';\nimport path from 'path';\nimport url from 'url';\n\nimport { Environment, FilePaths, InputEnvironment } from '../types';\nimport getMode from './getMode';\n\nfunction getAbsolutePathWithProjectRoot(projectRoot: string, ...pathComponents: string[]): string {\n  // Simple check if we are dealing with a URL.\n  if (pathComponents?.length === 1 && pathComponents[0].startsWith('http')) {\n    return pathComponents[0];\n  }\n\n  return path.resolve(projectRoot, ...pathComponents);\n}\n\nfunction getModulesPath(projectRoot: string): string {\n  const workspaceRoot = findWorkspaceRoot(path.resolve(projectRoot)); // Absolute path or null\n  if (workspaceRoot) {\n    return path.resolve(workspaceRoot, 'node_modules');\n  }\n\n  return path.resolve(projectRoot, 'node_modules');\n}\n\nfunction getPlatformExtensions(platform: string): string[] {\n  if (platform === 'ios' || platform === 'android') {\n    return [platform, 'native'];\n  }\n  return [platform];\n}\n\nfunction parsePaths(\n  projectRoot: string,\n  nativeAppManifest?: ExpoConfig,\n  env: Pick<InputEnvironment, 'platform'> = {}\n): FilePaths {\n  const inputProjectRoot = projectRoot || getPossibleProjectRoot();\n\n  function absolute(...pathComponents: string[]): string {\n    return getAbsolutePathWithProjectRoot(inputProjectRoot, ...pathComponents);\n  }\n\n  const packageJsonPath = absolute('package.json');\n  const modulesPath = getModulesPath(inputProjectRoot);\n  const productionPath = absolute(getWebOutputPath(nativeAppManifest));\n\n  function templatePath(filename: string = ''): string {\n    const overridePath = absolute(env.platform ?? 'web', filename);\n    if (fs.existsSync(overridePath)) {\n      return overridePath;\n    }\n    return path.join(__dirname, '../../web-default', filename);\n  }\n\n  function getProductionPath(...props: string[]): string {\n    return path.resolve(productionPath, ...props);\n  }\n\n  function getIncludeModule(...props: string[]): string {\n    return path.resolve(modulesPath, ...props);\n  }\n\n  let appMain: string | null = null;\n  try {\n    appMain = getEntryPoint(\n      inputProjectRoot,\n      ['./index', './src/index'],\n      getPlatformExtensions(env.platform ?? 'web')\n    );\n  } catch {\n    // ignore the error\n  }\n\n  return {\n    absolute,\n    includeModule: getIncludeModule,\n    packageJson: packageJsonPath,\n    root: path.resolve(inputProjectRoot),\n    appMain,\n    modules: modulesPath,\n    servedPath: getServedPath(inputProjectRoot),\n    template: {\n      get: templatePath,\n      folder: templatePath(),\n      indexHtml: templatePath('index.html'),\n      manifest: templatePath('manifest.json'),\n      serveJson: templatePath('serve.json'),\n      favicon: templatePath('favicon.ico'),\n    },\n    production: {\n      get: getProductionPath,\n      folder: getProductionPath(),\n      indexHtml: getProductionPath('index.html'),\n      manifest: getProductionPath('manifest.json'),\n      serveJson: getProductionPath('serve.json'),\n      favicon: getProductionPath('favicon.ico'),\n    },\n  };\n}\n\n/**\n * Sync method for getting default paths used throughout the Webpack config.\n * This is useful for Next.js which doesn't support async Webpack configs.\n *\n * @param projectRoot\n * @category env\n */\nexport function getPaths(\n  projectRoot: string,\n  env: Pick<InputEnvironment, 'platform'> = {}\n): FilePaths {\n  const { exp } = getConfig(projectRoot, {\n    skipSDKVersionRequirement: true,\n  });\n  return parsePaths(projectRoot, exp, env);\n}\n\n/**\n * Async method for getting default paths used throughout the Webpack config.\n *\n * @param projectRoot\n * @category env\n */\nexport async function getPathsAsync(\n  projectRoot: string,\n  env: Pick<InputEnvironment, 'platform'> = {}\n): Promise<FilePaths> {\n  let exp;\n  try {\n    exp = getConfig(projectRoot, { skipSDKVersionRequirement: true }).exp;\n  } catch {}\n  return parsePaths(projectRoot, exp, env);\n}\n\n/**\n * Get paths dictating where the app is served regardless of the current Webpack mode.\n *\n * @param projectRoot\n * @category env\n */\nexport function getServedPath(projectRoot: string): string {\n  const { pkg } = getConfig(projectRoot, {\n    skipSDKVersionRequirement: true,\n  });\n  const envPublicUrl = process.env.WEB_PUBLIC_URL;\n\n  // We use `WEB_PUBLIC_URL` environment variable or \"homepage\" field to infer\n  // \"public path\" at which the app is served.\n  // Webpack needs to know it to put the right <script> hrefs into HTML even in\n  // single-page apps that may serve index.html for nested URLs like /todos/42.\n  // We can't use a relative path in HTML because we don't want to load something\n  // like /todos/42/static/js/bundle.7289d.js. We have to know the root.\n  const publicUrl = envPublicUrl || pkg.homepage;\n  const servedUrl = envPublicUrl || (publicUrl ? url.parse(publicUrl).pathname : '/');\n  return ensureSlash(servedUrl!, true);\n}\n\n/**\n * Get paths dictating where the app is served. In development mode this returns default values.\n *\n * @param env\n * @category env\n */\nexport function getPublicPaths(\n  env: Pick<Environment, 'mode' | 'projectRoot'>\n): {\n  /**\n   * Webpack uses `publicPath` to determine where the app is being served from.\n   * It requires a trailing slash, or the file assets will get an incorrect path.\n   * In development, we always serve from the root. This makes config easier.\n   */\n  publicPath: string;\n\n  /**\n   * `publicUrl` is just like `publicPath`, but we will provide it to our app\n   * as %WEB_PUBLIC_URL% in `index.html` and `process.env.WEB_PUBLIC_URL` in JavaScript.\n   * Omit trailing slash as %WEB_PUBLIC_URL%/xyz looks better than %WEB_PUBLIC_URL%xyz.\n   */\n  publicUrl: string;\n} {\n  const parsedMode = getMode(env);\n  if (parsedMode === 'production') {\n    const publicPath = getServedPath(env.projectRoot);\n    return {\n      publicPath,\n      publicUrl: publicPath.slice(0, -1),\n    };\n  }\n\n  return { publicUrl: '', publicPath: '/' };\n}\n\n/**\n * Get the output folder path. Defaults to `web-build`.\n *\n * @param projectRoot\n * @category env\n */\nexport function getProductionPath(projectRoot: string): string {\n  const { exp } = getConfig(projectRoot, {\n    skipSDKVersionRequirement: true,\n  });\n  return getAbsolutePathWithProjectRoot(projectRoot, getWebOutputPath(exp));\n}\n\n/**\n * Get an absolute path relative to the project root while accounting for remote paths (`https://`).\n *\n * @param projectRoot\n * @category env\n */\nexport function getAbsolute(projectRoot: string, ...pathComponents: string[]): string {\n  const inputProjectRoot = projectRoot || getPossibleProjectRoot();\n  return getAbsolutePathWithProjectRoot(inputProjectRoot, ...pathComponents);\n}\n"],"sourceRoot":""},"metadata":{},"sourceType":"script"}