{"ast":null,"code":"import _slicedToArray from\"/Users/fernandorojo/Developer/messing/rea-tree/node_modules/next/dist/compiled/@babel/runtime/helpers/esm/slicedToArray\";function _createForOfIteratorHelper(o,allowArrayLike){var it=typeof Symbol!==\"undefined\"&&o[Symbol.iterator]||o[\"@@iterator\"];if(!it){if(Array.isArray(o)||(it=_unsupportedIterableToArray(o))||allowArrayLike&&o&&typeof o.length===\"number\"){if(it)o=it;var i=0;var F=function F(){};return{s:F,n:function n(){if(i>=o.length)return{done:true};return{done:false,value:o[i++]};},e:function e(_e){throw _e;},f:F};}throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");}var normalCompletion=true,didErr=false,err;return{s:function s(){it=it.call(o);},n:function n(){var step=it.next();normalCompletion=step.done;return step;},e:function e(_e2){didErr=true;err=_e2;},f:function f(){try{if(!normalCompletion&&it[\"return\"]!=null)it[\"return\"]();}finally{if(didErr)throw err;}}};}function _unsupportedIterableToArray(o,minLen){if(!o)return;if(typeof o===\"string\")return _arrayLikeToArray(o,minLen);var n=Object.prototype.toString.call(o).slice(8,-1);if(n===\"Object\"&&o.constructor)n=o.constructor.name;if(n===\"Map\"||n===\"Set\")return Array.from(o);if(n===\"Arguments\"||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n))return _arrayLikeToArray(o,minLen);}function _arrayLikeToArray(arr,len){if(len==null||len>arr.length)len=arr.length;for(var i=0,arr2=new Array(len);i<len;i++){arr2[i]=arr[i];}return arr2;}import{lessThan,multiply,sub,add,divide,greaterThan,lessOrEq,eq}from'../operators';import invariant from'invariant';import AnimatedNode from'../core/AnimatedNode';import{createAnimatedCond as cond}from'../core/AnimatedCond';import{createAnimatedFunction as proc}from'../core/AnimatedFunction';var interpolateInternalSingleProc=proc(function(value,inS,inE,outS,outE){var progress=divide(sub(value,inS),sub(inE,inS));// logic below was made in order to provide a compatibility witn an Animated API\nvar resultForNonZeroRange=add(outS,multiply(progress,sub(outE,outS)));var result=cond(eq(inS,inE),cond(lessOrEq(value,inS),outS,outE),resultForNonZeroRange);return result;});function interpolateInternalSingle(value,inputRange,outputRange,offset){var inS=inputRange[offset];var inE=inputRange[offset+1];var outS=outputRange[offset];var outE=outputRange[offset+1];return interpolateInternalSingleProc(value,inS,inE,outS,outE);}function interpolateInternal(value,inputRange,outputRange){var offset=arguments.length>3&&arguments[3]!==undefined?arguments[3]:0;if(inputRange.length-offset===2){return interpolateInternalSingle(value,inputRange,outputRange,offset);}return cond(lessThan(value,inputRange[offset+1]),interpolateInternalSingle(value,inputRange,outputRange,offset),interpolateInternal(value,inputRange,outputRange,offset+1));}export var Extrapolate={EXTEND:'extend',CLAMP:'clamp',IDENTITY:'identity'};function checkNonDecreasing(name,arr){for(var i=1;i<arr.length;++i){// We can't validate animated nodes in JS.\nif(arr[i]instanceof AnimatedNode||arr[i-1]instanceof AnimatedNode)continue;invariant(arr[i]>=arr[i-1],'%s must be monotonically non-decreasing. (%s)',name,arr);}}function checkMinElements(name,arr){invariant(arr.length>=2,'%s must have at least 2 elements. (%s)',name,arr);}function checkValidNumbers(name,arr){for(var i=0;i<arr.length;i++){// We can't validate animated nodes in JS.\nif(arr[i]instanceof AnimatedNode||typeof arr[i]!=='number')continue;invariant(Number.isFinite(arr[i]),'%s cannot include %s. (%s)',name,arr[i],arr);}}function convertToRadians(outputRange){var _iterator=_createForOfIteratorHelper(outputRange.entries()),_step;try{for(_iterator.s();!(_step=_iterator.n()).done;){var _step$value=_slicedToArray(_step.value,2),i=_step$value[0],value=_step$value[1];if(typeof value==='string'&&value.endsWith('deg')){outputRange[i]=parseFloat(value)*(Math.PI/180);}else if(typeof value==='string'&&value.endsWith('rad')){outputRange[i]=parseFloat(value);}}}catch(err){_iterator.e(err);}finally{_iterator.f();}}export default function interpolate(value,config){var inputRange=config.inputRange,outputRange=config.outputRange,_config$extrapolate=config.extrapolate,extrapolate=_config$extrapolate===void 0?Extrapolate.EXTEND:_config$extrapolate,extrapolateLeft=config.extrapolateLeft,extrapolateRight=config.extrapolateRight;checkMinElements('inputRange',inputRange);checkValidNumbers('inputRange',inputRange);checkMinElements('outputRange',outputRange);checkValidNumbers('outputRange',outputRange);checkNonDecreasing('inputRange',inputRange);invariant(inputRange.length===outputRange.length,'inputRange and outputRange must be the same length.');convertToRadians(outputRange);var left=extrapolateLeft||extrapolate;var right=extrapolateRight||extrapolate;var output=interpolateInternal(value,inputRange,outputRange);if(left===Extrapolate.CLAMP){output=cond(lessThan(value,inputRange[0]),outputRange[0],output);}else if(left===Extrapolate.IDENTITY){output=cond(lessThan(value,inputRange[0]),value,output);}if(right===Extrapolate.CLAMP){output=cond(greaterThan(value,inputRange[inputRange.length-1]),outputRange[outputRange.length-1],output);}else if(right===Extrapolate.IDENTITY){output=cond(greaterThan(value,inputRange[inputRange.length-1]),value,output);}return output;}","map":{"version":3,"names":["lessThan","multiply","sub","add","divide","greaterThan","lessOrEq","eq","invariant","AnimatedNode","createAnimatedCond","cond","createAnimatedFunction","proc","interpolateInternalSingleProc","value","inS","inE","outS","outE","progress","resultForNonZeroRange","result","interpolateInternalSingle","inputRange","outputRange","offset","interpolateInternal","length","Extrapolate","EXTEND","CLAMP","IDENTITY","checkNonDecreasing","name","arr","i","checkMinElements","checkValidNumbers","Number","isFinite","convertToRadians","entries","endsWith","parseFloat","Math","PI","interpolate","config","extrapolate","extrapolateLeft","extrapolateRight","left","right","output"],"sources":["/Users/fernandorojo/Developer/messing/rea-tree/node_modules/react-native-reanimated/lib/reanimated1/derived/interpolate.js"],"sourcesContent":["import { lessThan, multiply, sub, add, divide, greaterThan, lessOrEq, eq } from '../operators';\nimport invariant from 'invariant';\nimport AnimatedNode from '../core/AnimatedNode';\nimport { createAnimatedCond as cond } from '../core/AnimatedCond';\nimport { createAnimatedFunction as proc } from '../core/AnimatedFunction';\nconst interpolateInternalSingleProc = proc(function (value, inS, inE, outS, outE) {\n  const progress = divide(sub(value, inS), sub(inE, inS)); // logic below was made in order to provide a compatibility witn an Animated API\n\n  const resultForNonZeroRange = add(outS, multiply(progress, sub(outE, outS)));\n  const result = cond(eq(inS, inE), cond(lessOrEq(value, inS), outS, outE), resultForNonZeroRange);\n  return result;\n});\n\nfunction interpolateInternalSingle(value, inputRange, outputRange, offset) {\n  const inS = inputRange[offset];\n  const inE = inputRange[offset + 1];\n  const outS = outputRange[offset];\n  const outE = outputRange[offset + 1];\n  return interpolateInternalSingleProc(value, inS, inE, outS, outE);\n}\n\nfunction interpolateInternal(value, inputRange, outputRange, offset = 0) {\n  if (inputRange.length - offset === 2) {\n    return interpolateInternalSingle(value, inputRange, outputRange, offset);\n  }\n\n  return cond(lessThan(value, inputRange[offset + 1]), interpolateInternalSingle(value, inputRange, outputRange, offset), interpolateInternal(value, inputRange, outputRange, offset + 1));\n}\n\nexport const Extrapolate = {\n  EXTEND: 'extend',\n  CLAMP: 'clamp',\n  IDENTITY: 'identity'\n};\n\nfunction checkNonDecreasing(name, arr) {\n  for (let i = 1; i < arr.length; ++i) {\n    // We can't validate animated nodes in JS.\n    if (arr[i] instanceof AnimatedNode || arr[i - 1] instanceof AnimatedNode) continue;\n    invariant(arr[i] >= arr[i - 1], '%s must be monotonically non-decreasing. (%s)', name, arr);\n  }\n}\n\nfunction checkMinElements(name, arr) {\n  invariant(arr.length >= 2, '%s must have at least 2 elements. (%s)', name, arr);\n}\n\nfunction checkValidNumbers(name, arr) {\n  for (let i = 0; i < arr.length; i++) {\n    // We can't validate animated nodes in JS.\n    if (arr[i] instanceof AnimatedNode || typeof arr[i] !== 'number') continue;\n    invariant(Number.isFinite(arr[i]), '%s cannot include %s. (%s)', name, arr[i], arr);\n  }\n}\n\nfunction convertToRadians(outputRange) {\n  for (const [i, value] of outputRange.entries()) {\n    if (typeof value === 'string' && value.endsWith('deg')) {\n      outputRange[i] = parseFloat(value) * (Math.PI / 180);\n    } else if (typeof value === 'string' && value.endsWith('rad')) {\n      outputRange[i] = parseFloat(value);\n    }\n  }\n}\n\nexport default function interpolate(value, config) {\n  const {\n    inputRange,\n    outputRange,\n    extrapolate = Extrapolate.EXTEND,\n    extrapolateLeft,\n    extrapolateRight\n  } = config;\n  checkMinElements('inputRange', inputRange);\n  checkValidNumbers('inputRange', inputRange);\n  checkMinElements('outputRange', outputRange);\n  checkValidNumbers('outputRange', outputRange);\n  checkNonDecreasing('inputRange', inputRange);\n  invariant(inputRange.length === outputRange.length, 'inputRange and outputRange must be the same length.');\n  convertToRadians(outputRange);\n  const left = extrapolateLeft || extrapolate;\n  const right = extrapolateRight || extrapolate;\n  let output = interpolateInternal(value, inputRange, outputRange);\n\n  if (left === Extrapolate.CLAMP) {\n    output = cond(lessThan(value, inputRange[0]), outputRange[0], output);\n  } else if (left === Extrapolate.IDENTITY) {\n    output = cond(lessThan(value, inputRange[0]), value, output);\n  }\n\n  if (right === Extrapolate.CLAMP) {\n    output = cond(greaterThan(value, inputRange[inputRange.length - 1]), outputRange[outputRange.length - 1], output);\n  } else if (right === Extrapolate.IDENTITY) {\n    output = cond(greaterThan(value, inputRange[inputRange.length - 1]), value, output);\n  }\n\n  return output;\n}"],"mappings":"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"},"metadata":{},"sourceType":"module"}