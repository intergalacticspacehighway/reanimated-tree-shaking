{"ast":null,"code":"\"use strict\";Object.defineProperty(exports,\"__esModule\",{value:true});exports.getGoogleMapsApiKey=getGoogleMapsApiKey;exports.setGoogleMapsApiKey=setGoogleMapsApiKey;exports.withGoogleMapsApiKey=void 0;function _androidPlugins(){var data=require(\"../plugins/android-plugins\");_androidPlugins=function _androidPlugins(){return data;};return data;}function _Manifest(){var data=require(\"./Manifest\");_Manifest=function _Manifest(){return data;};return data;}var META_API_KEY='com.google.android.geo.API_KEY';var LIB_HTTP='org.apache.http.legacy';var withGoogleMapsApiKey=(0,_androidPlugins().createAndroidManifestPlugin)(setGoogleMapsApiKey,'withGoogleMapsApiKey');exports.withGoogleMapsApiKey=withGoogleMapsApiKey;function getGoogleMapsApiKey(config){var _config$android$confi,_config$android,_config$android$confi2,_config$android$confi3;return(_config$android$confi=(_config$android=config.android)===null||_config$android===void 0?void 0:(_config$android$confi2=_config$android.config)===null||_config$android$confi2===void 0?void 0:(_config$android$confi3=_config$android$confi2.googleMaps)===null||_config$android$confi3===void 0?void 0:_config$android$confi3.apiKey)!==null&&_config$android$confi!==void 0?_config$android$confi:null;}function setGoogleMapsApiKey(config,androidManifest){var apiKey=getGoogleMapsApiKey(config);var mainApplication=(0,_Manifest().getMainApplicationOrThrow)(androidManifest);if(apiKey){// If the item exists, add it back\n(0,_Manifest().addMetaDataItemToMainApplication)(mainApplication,META_API_KEY,apiKey);(0,_Manifest().addUsesLibraryItemToMainApplication)(mainApplication,{name:LIB_HTTP,required:false});}else{// Remove any existing item\n(0,_Manifest().removeMetaDataItemFromMainApplication)(mainApplication,META_API_KEY);(0,_Manifest().removeUsesLibraryItemFromMainApplication)(mainApplication,LIB_HTTP);}return androidManifest;}","map":{"version":3,"sources":["../../src/android/GoogleMapsApiKey.ts"],"names":["META_API_KEY","LIB_HTTP","withGoogleMapsApiKey","config","apiKey","getGoogleMapsApiKey","mainApplication","name","required"],"mappings":"0MAEA,QAAA,CAAA,eAAA,EAAA,CAAA,GAAA,CAAA,IAAA,CAAA,OAAA,CAAA,4BAAA,CAAA,CAAA,eAAA,CAAA,0BAAA,CAAA,MAAA,CAAA,IAAA,CAAA,CAAA,CAAA,MAAA,CAAA,IAAA,CAAA,CACA,QAAA,CAAA,SAAA,EAAA,CAAA,GAAA,CAAA,IAAA,CAAA,OAAA,CAAA,YAAA,CAAA,CAAA,SAAA,CAAA,oBAAA,CAAA,MAAA,CAAA,IAAA,CAAA,CAAA,CAAA,MAAA,CAAA,IAAA,CAAA,CASA,GAAMA,CAAAA,YAAY,CAAlB,gCAAA,CACA,GAAMC,CAAAA,QAAQ,CAAd,wBAAA,CAEO,GAAMC,CAAAA,oBAAoB,CAAG,CAAA,EAAA,eAAA,GAAA,2BAAA,EAAA,mBAAA,CAA7B,sBAA6B,CAA7B,C,kDAKA,QAAA,CAAA,mBAAA,CAAA,MAAA,CAAkE,CAAA,GAAA,CAAA,qBAAA,CAAA,eAAA,CAAA,sBAAA,CAAA,sBAAA,CACvE,MAAA,CAAA,qBAAA,CAAA,CAAA,eAAA,CAAOC,MAAM,CAAb,OAAA,IAAA,IAAA,EAAA,eAAA,GAAA,IAAA,EAAA,CAAA,IAAA,EAAA,CAAA,CAAA,sBAAA,CAAOA,eAAAA,CAAP,MAAA,IAAA,IAAA,EAAA,sBAAA,GAAA,IAAA,EAAA,CAAA,IAAA,EAAA,CAAA,CAAA,sBAAA,CAAOA,sBAAAA,CAAP,UAAA,IAAA,IAAA,EAAA,sBAAA,GAAA,IAAA,EAAA,CAAA,IAAA,EAAA,CAAOA,sBAAAA,CAAP,MAAA,IAAA,IAAA,EAAA,qBAAA,GAAA,IAAA,EAAA,CAAA,qBAAA,CAAA,IAAA,CACD,CAEM,QAAA,CAAA,mBAAA,CAAA,MAAA,CAAA,eAAA,CAGL,CACA,GAAMC,CAAAA,MAAM,CAAGC,mBAAmB,CAAlC,MAAkC,CAAlC,CACA,GAAMC,CAAAA,eAAe,CAAG,CAAA,EAAA,SAAA,GAAA,yBAAA,EAAxB,eAAwB,CAAxB,CAEA,GAAA,MAAA,CAAY,CACV;AACA,CAAA,EAAA,SAAA,GAAA,gCAAA,EAAA,eAAA,CAAA,YAAA,CAAA,MAAA,EACA,CAAA,EAAA,SAAA,GAAA,mCAAA,EAAA,eAAA,CAAqD,CACnDC,IAAI,CAD+C,QAAA,CAEnDC,QAAQ,CAAE,KAFyC,CAArD,EAHF,CAAA,IAOO,CACL;AACA,CAAA,EAAA,SAAA,GAAA,qCAAA,EAAA,eAAA,CAAA,YAAA,EACA,CAAA,EAAA,SAAA,GAAA,wCAAA,EAAA,eAAA,CAAA,QAAA,EACD,CAED,MAAA,CAAA,eAAA,CACD","sourcesContent":["import { ExpoConfig } from '@expo/config-types';\n\nimport { createAndroidManifestPlugin } from '../plugins/android-plugins';\nimport {\n  addMetaDataItemToMainApplication,\n  addUsesLibraryItemToMainApplication,\n  AndroidManifest,\n  getMainApplicationOrThrow,\n  removeMetaDataItemFromMainApplication,\n  removeUsesLibraryItemFromMainApplication,\n} from './Manifest';\n\nconst META_API_KEY = 'com.google.android.geo.API_KEY';\nconst LIB_HTTP = 'org.apache.http.legacy';\n\nexport const withGoogleMapsApiKey = createAndroidManifestPlugin(\n  setGoogleMapsApiKey,\n  'withGoogleMapsApiKey'\n);\n\nexport function getGoogleMapsApiKey(config: Pick<ExpoConfig, 'android'>) {\n  return config.android?.config?.googleMaps?.apiKey ?? null;\n}\n\nexport function setGoogleMapsApiKey(\n  config: Pick<ExpoConfig, 'android'>,\n  androidManifest: AndroidManifest\n) {\n  const apiKey = getGoogleMapsApiKey(config);\n  const mainApplication = getMainApplicationOrThrow(androidManifest);\n\n  if (apiKey) {\n    // If the item exists, add it back\n    addMetaDataItemToMainApplication(mainApplication, META_API_KEY, apiKey);\n    addUsesLibraryItemToMainApplication(mainApplication, {\n      name: LIB_HTTP,\n      required: false,\n    });\n  } else {\n    // Remove any existing item\n    removeMetaDataItemFromMainApplication(mainApplication, META_API_KEY);\n    removeUsesLibraryItemFromMainApplication(mainApplication, LIB_HTTP);\n  }\n\n  return androidManifest;\n}\n"]},"metadata":{},"sourceType":"script"}