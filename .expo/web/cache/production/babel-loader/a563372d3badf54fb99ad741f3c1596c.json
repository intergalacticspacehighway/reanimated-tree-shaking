{"ast":null,"code":"function _createForOfIteratorHelper(o,allowArrayLike){var it=typeof Symbol!==\"undefined\"&&o[Symbol.iterator]||o[\"@@iterator\"];if(!it){if(Array.isArray(o)||(it=_unsupportedIterableToArray(o))||allowArrayLike&&o&&typeof o.length===\"number\"){if(it)o=it;var i=0;var F=function F(){};return{s:F,n:function n(){if(i>=o.length)return{done:true};return{done:false,value:o[i++]};},e:function e(_e){throw _e;},f:F};}throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");}var normalCompletion=true,didErr=false,err;return{s:function s(){it=it.call(o);},n:function n(){var step=it.next();normalCompletion=step.done;return step;},e:function e(_e2){didErr=true;err=_e2;},f:function f(){try{if(!normalCompletion&&it[\"return\"]!=null)it[\"return\"]();}finally{if(didErr)throw err;}}};}function _unsupportedIterableToArray(o,minLen){if(!o)return;if(typeof o===\"string\")return _arrayLikeToArray(o,minLen);var n=Object.prototype.toString.call(o).slice(8,-1);if(n===\"Object\"&&o.constructor)n=o.constructor.name;if(n===\"Map\"||n===\"Set\")return Array.from(o);if(n===\"Arguments\"||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n))return _arrayLikeToArray(o,minLen);}function _arrayLikeToArray(arr,len){if(len==null||len>arr.length)len=arr.length;for(var i=0,arr2=new Array(len);i<len;i++){arr2[i]=arr[i];}return arr2;}import{defineAnimation}from'./util';import{withTiming}from'./timing';import{ColorProperties}from'../UpdateProps';import{processColor}from'../Colors';// resolves path to value for nested objects\n// if path cannot be resolved returns undefined\nexport var resolvePath=function(){var _f=function _f(obj,path){var keys=Array.isArray(path)?path:[path];return keys.reduce(function(acc,current){if(Array.isArray(acc)&&typeof current==='number'){return acc[current];}else if(typeof acc==='object'&&current in acc){return acc[current];}return undefined;},obj);};_f._closure={};_f.asString=\"function resolvePath(obj,path){const keys=Array.isArray(path)?path:[path];return keys.reduce(function(acc,current){if(Array.isArray(acc)&&typeof current==='number'){return acc[current];}else if(typeof acc==='object'&&current in acc){return acc[current];}return undefined;},obj);}\";_f.__workletHash=6802843237952;_f.__location=\"/Users/fernandorojo/Developer/messing/rea-tree/node_modules/react-native-reanimated/lib/reanimated2/animation/styleAnimation.js (7:7)\";return _f;}();export var setPath=function(){var _f=function _f(obj,path,value){var keys=Array.isArray(path)?path:[path];var currObj=obj;for(var i=0;i<keys.length-1;i++){// creates entry if there isn't one\ncurrObj=currObj;if(!currObj[keys[i]]){// if next key is a number create an array\nif(typeof keys[i+1]==='number'){currObj[keys[i]]=[];}else{currObj[keys[i]]={};}}currObj=currObj[keys[i]];}currObj[keys[keys.length-1]]=value;};_f._closure={};_f.asString=\"function setPath(obj,path,value){const keys=Array.isArray(path)?path:[path];let currObj=obj;for(let i=0;i<keys.length-1;i++){currObj=currObj;if(!currObj[keys[i]]){if(typeof keys[i+1]==='number'){currObj[keys[i]]=[];}else{currObj[keys[i]]={};}}currObj=currObj[keys[i]];}currObj[keys[keys.length-1]]=value;}\";_f.__workletHash=16252556056779;_f.__location=\"/Users/fernandorojo/Developer/messing/rea-tree/node_modules/react-native-reanimated/lib/reanimated2/animation/styleAnimation.js (20:7)\";return _f;}();export var withStyleAnimation=function(){var _f=function _f(styleAnimations){return defineAnimation({},function(){var _f=function _f(){var onFrame=function onFrame(animation,now){var stillGoing=false;var entriesToCheck=[{value:animation.styleAnimations,path:[]}];while(entriesToCheck.length>0){var currentEntry=entriesToCheck.pop();if(Array.isArray(currentEntry.value)){for(var index=0;index<currentEntry.value.length;index++){entriesToCheck.push({value:currentEntry.value[index],path:currentEntry.path.concat(index)});}}else if(typeof currentEntry.value==='object'&&currentEntry.value.onFrame===undefined){// nested object\nfor(var _i=0,_Object$keys=Object.keys(currentEntry.value);_i<_Object$keys.length;_i++){var key=_Object$keys[_i];entriesToCheck.push({value:currentEntry.value[key],path:currentEntry.path.concat(key)});}}else{var currentStyleAnimation=currentEntry.value;if(currentStyleAnimation.finished){continue;}var finished=currentStyleAnimation.onFrame(currentStyleAnimation,now);if(finished){currentStyleAnimation.finished=true;if(currentStyleAnimation.callback){currentStyleAnimation.callback(true);}}else{stillGoing=true;}if(ColorProperties.includes(currentEntry.path[0])){currentStyleAnimation.current=processColor(currentStyleAnimation.current);}setPath(animation.current,currentEntry.path,currentStyleAnimation.current);}}return!stillGoing;};var onStart=function onStart(animation,value,now,previousAnimation){var entriesToCheck=[{value:styleAnimations,path:[]}];while(entriesToCheck.length>0){var currentEntry=entriesToCheck.pop();if(Array.isArray(currentEntry.value)){for(var index=0;index<currentEntry.value.length;index++){entriesToCheck.push({value:currentEntry.value[index],path:currentEntry.path.concat(index)});}}else if(typeof currentEntry.value==='object'&&currentEntry.value.onStart===undefined){for(var _i2=0,_Object$keys2=Object.keys(currentEntry.value);_i2<_Object$keys2.length;_i2++){var key=_Object$keys2[_i2];entriesToCheck.push({value:currentEntry.value[key],path:currentEntry.path.concat(key)});}}else{var prevAnimation=resolvePath(previousAnimation===null||previousAnimation===void 0?void 0:previousAnimation.styleAnimations,currentEntry.path);var prevVal=resolvePath(value,currentEntry.path);if(prevAnimation&&!prevVal){prevVal=prevAnimation.current;}setPath(animation.current,currentEntry.path,prevVal);var currentAnimation=void 0;if(typeof currentEntry.value!=='object'||!currentEntry.value.onStart){currentAnimation=withTiming(currentEntry.value,{duration:0});setPath(animation.styleAnimations,currentEntry.path,currentAnimation);}else{currentAnimation=currentEntry.value;}currentAnimation.onStart(currentAnimation,prevVal,now,prevAnimation);}}};var callback=function callback(finished){if(!finished){var animationsToCheck=[styleAnimations];while(animationsToCheck.length>0){var currentAnimation=animationsToCheck.pop();if(Array.isArray(currentAnimation)){var _iterator=_createForOfIteratorHelper(currentAnimation),_step;try{for(_iterator.s();!(_step=_iterator.n()).done;){var element=_step.value;animationsToCheck.push(element);}}catch(err){_iterator.e(err);}finally{_iterator.f();}}else if(typeof currentAnimation==='object'&&currentAnimation.onStart===undefined){for(var _i3=0,_Object$values=Object.values(currentAnimation);_i3<_Object$values.length;_i3++){var value=_Object$values[_i3];animationsToCheck.push(value);}}else{var currentStyleAnimation=currentAnimation;if(!currentStyleAnimation.finished&&currentStyleAnimation.callback){currentStyleAnimation.callback(false);}}}}};return{isHigherOrder:true,onFrame:onFrame,onStart:onStart,current:{},styleAnimations:styleAnimations,callback:callback};};_f._closure={ColorProperties:ColorProperties,processColor:processColor,setPath:setPath,styleAnimations:styleAnimations,resolvePath:resolvePath,withTiming:withTiming};_f.asString=\"function _f(){const{ColorProperties,processColor,setPath,styleAnimations,resolvePath,withTiming}=jsThis._closure;{const onFrame=function(animation,now){let stillGoing=false;const entriesToCheck=[{value:animation.styleAnimations,path:[]}];while(entriesToCheck.length>0){const currentEntry=entriesToCheck.pop();if(Array.isArray(currentEntry.value)){for(let index=0;index<currentEntry.value.length;index++){entriesToCheck.push({value:currentEntry.value[index],path:currentEntry.path.concat(index)});}}else if(typeof currentEntry.value==='object'&&currentEntry.value.onFrame===undefined){for(const key of Object.keys(currentEntry.value)){entriesToCheck.push({value:currentEntry.value[key],path:currentEntry.path.concat(key)});}}else{const currentStyleAnimation=currentEntry.value;if(currentStyleAnimation.finished){continue;}const finished=currentStyleAnimation.onFrame(currentStyleAnimation,now);if(finished){currentStyleAnimation.finished=true;if(currentStyleAnimation.callback){currentStyleAnimation.callback(true);}}else{stillGoing=true;}if(ColorProperties.includes(currentEntry.path[0])){currentStyleAnimation.current=processColor(currentStyleAnimation.current);}setPath(animation.current,currentEntry.path,currentStyleAnimation.current);}}return!stillGoing;};const onStart=function(animation,value,now,previousAnimation){const entriesToCheck=[{value:styleAnimations,path:[]}];while(entriesToCheck.length>0){const currentEntry=entriesToCheck.pop();if(Array.isArray(currentEntry.value)){for(let index=0;index<currentEntry.value.length;index++){entriesToCheck.push({value:currentEntry.value[index],path:currentEntry.path.concat(index)});}}else if(typeof currentEntry.value==='object'&&currentEntry.value.onStart===undefined){for(const key of Object.keys(currentEntry.value)){entriesToCheck.push({value:currentEntry.value[key],path:currentEntry.path.concat(key)});}}else{const prevAnimation=resolvePath(previousAnimation===null||previousAnimation===void 0?void 0:previousAnimation.styleAnimations,currentEntry.path);let prevVal=resolvePath(value,currentEntry.path);if(prevAnimation&&!prevVal){prevVal=prevAnimation.current;}setPath(animation.current,currentEntry.path,prevVal);let currentAnimation;if(typeof currentEntry.value!=='object'||!currentEntry.value.onStart){currentAnimation=withTiming(currentEntry.value,{duration:0});setPath(animation.styleAnimations,currentEntry.path,currentAnimation);}else{currentAnimation=currentEntry.value;}currentAnimation.onStart(currentAnimation,prevVal,now,prevAnimation);}}};const callback=function(finished){if(!finished){const animationsToCheck=[styleAnimations];while(animationsToCheck.length>0){const currentAnimation=animationsToCheck.pop();if(Array.isArray(currentAnimation)){for(const element of currentAnimation){animationsToCheck.push(element);}}else if(typeof currentAnimation==='object'&&currentAnimation.onStart===undefined){for(const value of Object.values(currentAnimation)){animationsToCheck.push(value);}}else{const currentStyleAnimation=currentAnimation;if(!currentStyleAnimation.finished&&currentStyleAnimation.callback){currentStyleAnimation.callback(false);}}}}};return{isHigherOrder:true,onFrame:onFrame,onStart:onStart,current:{},styleAnimations:styleAnimations,callback:callback};}}\";_f.__workletHash=9887536897803;_f.__location=\"/Users/fernandorojo/Developer/messing/rea-tree/node_modules/react-native-reanimated/lib/reanimated2/animation/styleAnimation.js (43:31)\";return _f;}());};_f._closure={defineAnimation:defineAnimation,ColorProperties:ColorProperties,processColor:processColor,setPath:setPath,resolvePath:resolvePath,withTiming:withTiming};_f.asString=\"function withStyleAnimation(styleAnimations){const{defineAnimation,ColorProperties,processColor,setPath,resolvePath,withTiming}=jsThis._closure;{return defineAnimation({},function(){'worklet';const onFrame=function(animation,now){let stillGoing=false;const entriesToCheck=[{value:animation.styleAnimations,path:[]}];while(entriesToCheck.length>0){const currentEntry=entriesToCheck.pop();if(Array.isArray(currentEntry.value)){for(let index=0;index<currentEntry.value.length;index++){entriesToCheck.push({value:currentEntry.value[index],path:currentEntry.path.concat(index)});}}else if(typeof currentEntry.value==='object'&&currentEntry.value.onFrame===undefined){for(const key of Object.keys(currentEntry.value)){entriesToCheck.push({value:currentEntry.value[key],path:currentEntry.path.concat(key)});}}else{const currentStyleAnimation=currentEntry.value;if(currentStyleAnimation.finished){continue;}const finished=currentStyleAnimation.onFrame(currentStyleAnimation,now);if(finished){currentStyleAnimation.finished=true;if(currentStyleAnimation.callback){currentStyleAnimation.callback(true);}}else{stillGoing=true;}if(ColorProperties.includes(currentEntry.path[0])){currentStyleAnimation.current=processColor(currentStyleAnimation.current);}setPath(animation.current,currentEntry.path,currentStyleAnimation.current);}}return!stillGoing;};const onStart=function(animation,value,now,previousAnimation){const entriesToCheck=[{value:styleAnimations,path:[]}];while(entriesToCheck.length>0){const currentEntry=entriesToCheck.pop();if(Array.isArray(currentEntry.value)){for(let index=0;index<currentEntry.value.length;index++){entriesToCheck.push({value:currentEntry.value[index],path:currentEntry.path.concat(index)});}}else if(typeof currentEntry.value==='object'&&currentEntry.value.onStart===undefined){for(const key of Object.keys(currentEntry.value)){entriesToCheck.push({value:currentEntry.value[key],path:currentEntry.path.concat(key)});}}else{const prevAnimation=resolvePath(previousAnimation===null||previousAnimation===void 0?void 0:previousAnimation.styleAnimations,currentEntry.path);let prevVal=resolvePath(value,currentEntry.path);if(prevAnimation&&!prevVal){prevVal=prevAnimation.current;}setPath(animation.current,currentEntry.path,prevVal);let currentAnimation;if(typeof currentEntry.value!=='object'||!currentEntry.value.onStart){currentAnimation=withTiming(currentEntry.value,{duration:0});setPath(animation.styleAnimations,currentEntry.path,currentAnimation);}else{currentAnimation=currentEntry.value;}currentAnimation.onStart(currentAnimation,prevVal,now,prevAnimation);}}};const callback=function(finished){if(!finished){const animationsToCheck=[styleAnimations];while(animationsToCheck.length>0){const currentAnimation=animationsToCheck.pop();if(Array.isArray(currentAnimation)){for(const element of currentAnimation){animationsToCheck.push(element);}}else if(typeof currentAnimation==='object'&&currentAnimation.onStart===undefined){for(const value of Object.values(currentAnimation)){animationsToCheck.push(value);}}else{const currentStyleAnimation=currentAnimation;if(!currentStyleAnimation.finished&&currentStyleAnimation.callback){currentStyleAnimation.callback(false);}}}}};return{isHigherOrder:true,onFrame:onFrame,onStart:onStart,current:{},styleAnimations:styleAnimations,callback:callback};});}}\";_f.__workletHash=15006684130601;_f.__location=\"/Users/fernandorojo/Developer/messing/rea-tree/node_modules/react-native-reanimated/lib/reanimated2/animation/styleAnimation.js (41:7)\";return _f;}();","map":{"version":3,"names":["defineAnimation","withTiming","ColorProperties","processColor","resolvePath","_f","obj","path","keys","Array","isArray","reduce","acc","current","undefined","_closure","asString","__workletHash","__location","setPath","value","currObj","i","length","withStyleAnimation","styleAnimations","onFrame","animation","now","stillGoing","entriesToCheck","currentEntry","pop","index","push","concat","Object","key","currentStyleAnimation","finished","callback","includes","onStart","previousAnimation","prevAnimation","prevVal","currentAnimation","duration","animationsToCheck","element","values","isHigherOrder"],"sources":["/Users/fernandorojo/Developer/messing/rea-tree/node_modules/react-native-reanimated/lib/reanimated2/animation/styleAnimation.js"],"sourcesContent":["import { defineAnimation } from './util';\nimport { withTiming } from './timing';\nimport { ColorProperties } from '../UpdateProps';\nimport { processColor } from '../Colors'; // resolves path to value for nested objects\n// if path cannot be resolved returns undefined\n\nexport const resolvePath = function () {\n  const _f = function (obj, path) {\n    const keys = Array.isArray(path) ? path : [path];\n    return keys.reduce((acc, current) => {\n      if (Array.isArray(acc) && typeof current === 'number') {\n        return acc[current];\n      } else if (typeof acc === 'object' && current in acc) {\n        return acc[current];\n      }\n\n      return undefined;\n    }, obj);\n  };\n\n  _f._closure = {};\n  _f.asString = \"function resolvePath(obj,path){const keys=Array.isArray(path)?path:[path];return keys.reduce(function(acc,current){if(Array.isArray(acc)&&typeof current==='number'){return acc[current];}else if(typeof acc==='object'&&current in acc){return acc[current];}return undefined;},obj);}\";\n  _f.__workletHash = 6802843237952;\n  _f.__location = \"/Users/fernandorojo/Developer/messing/rea-tree/node_modules/react-native-reanimated/lib/reanimated2/animation/styleAnimation.js (7:7)\";\n  return _f;\n}();\nexport const setPath = function () {\n  const _f = function (obj, path, value) {\n    const keys = Array.isArray(path) ? path : [path];\n    let currObj = obj;\n\n    for (let i = 0; i < keys.length - 1; i++) {\n      // creates entry if there isn't one\n      currObj = currObj;\n\n      if (!currObj[keys[i]]) {\n        // if next key is a number create an array\n        if (typeof keys[i + 1] === 'number') {\n          currObj[keys[i]] = [];\n        } else {\n          currObj[keys[i]] = {};\n        }\n      }\n\n      currObj = currObj[keys[i]];\n    }\n\n    currObj[keys[keys.length - 1]] = value;\n  };\n\n  _f._closure = {};\n  _f.asString = \"function setPath(obj,path,value){const keys=Array.isArray(path)?path:[path];let currObj=obj;for(let i=0;i<keys.length-1;i++){currObj=currObj;if(!currObj[keys[i]]){if(typeof keys[i+1]==='number'){currObj[keys[i]]=[];}else{currObj[keys[i]]={};}}currObj=currObj[keys[i]];}currObj[keys[keys.length-1]]=value;}\";\n  _f.__workletHash = 16252556056779;\n  _f.__location = \"/Users/fernandorojo/Developer/messing/rea-tree/node_modules/react-native-reanimated/lib/reanimated2/animation/styleAnimation.js (20:7)\";\n  return _f;\n}();\nexport const withStyleAnimation = function () {\n  const _f = function (styleAnimations) {\n    return defineAnimation({}, function () {\n      const _f = function () {\n        const onFrame = (animation, now) => {\n          let stillGoing = false;\n          const entriesToCheck = [{\n            value: animation.styleAnimations,\n            path: []\n          }];\n\n          while (entriesToCheck.length > 0) {\n            const currentEntry = entriesToCheck.pop();\n\n            if (Array.isArray(currentEntry.value)) {\n              for (let index = 0; index < currentEntry.value.length; index++) {\n                entriesToCheck.push({\n                  value: currentEntry.value[index],\n                  path: currentEntry.path.concat(index)\n                });\n              }\n            } else if (typeof currentEntry.value === 'object' && currentEntry.value.onFrame === undefined) {\n              // nested object\n              for (const key of Object.keys(currentEntry.value)) {\n                entriesToCheck.push({\n                  value: currentEntry.value[key],\n                  path: currentEntry.path.concat(key)\n                });\n              }\n            } else {\n              const currentStyleAnimation = currentEntry.value;\n\n              if (currentStyleAnimation.finished) {\n                continue;\n              }\n\n              const finished = currentStyleAnimation.onFrame(currentStyleAnimation, now);\n\n              if (finished) {\n                currentStyleAnimation.finished = true;\n\n                if (currentStyleAnimation.callback) {\n                  currentStyleAnimation.callback(true);\n                }\n              } else {\n                stillGoing = true;\n              }\n\n              if (ColorProperties.includes(currentEntry.path[0])) {\n                currentStyleAnimation.current = processColor(currentStyleAnimation.current);\n              }\n\n              setPath(animation.current, currentEntry.path, currentStyleAnimation.current);\n            }\n          }\n\n          return !stillGoing;\n        };\n\n        const onStart = (animation, value, now, previousAnimation) => {\n          const entriesToCheck = [{\n            value: styleAnimations,\n            path: []\n          }];\n\n          while (entriesToCheck.length > 0) {\n            const currentEntry = entriesToCheck.pop();\n\n            if (Array.isArray(currentEntry.value)) {\n              for (let index = 0; index < currentEntry.value.length; index++) {\n                entriesToCheck.push({\n                  value: currentEntry.value[index],\n                  path: currentEntry.path.concat(index)\n                });\n              }\n            } else if (typeof currentEntry.value === 'object' && currentEntry.value.onStart === undefined) {\n              for (const key of Object.keys(currentEntry.value)) {\n                entriesToCheck.push({\n                  value: currentEntry.value[key],\n                  path: currentEntry.path.concat(key)\n                });\n              }\n            } else {\n              const prevAnimation = resolvePath(previousAnimation === null || previousAnimation === void 0 ? void 0 : previousAnimation.styleAnimations, currentEntry.path);\n              let prevVal = resolvePath(value, currentEntry.path);\n\n              if (prevAnimation && !prevVal) {\n                prevVal = prevAnimation.current;\n              }\n\n              setPath(animation.current, currentEntry.path, prevVal);\n              let currentAnimation;\n\n              if (typeof currentEntry.value !== 'object' || !currentEntry.value.onStart) {\n                currentAnimation = withTiming(currentEntry.value, {\n                  duration: 0\n                });\n                setPath(animation.styleAnimations, currentEntry.path, currentAnimation);\n              } else {\n                currentAnimation = currentEntry.value;\n              }\n\n              currentAnimation.onStart(currentAnimation, prevVal, now, prevAnimation);\n            }\n          }\n        };\n\n        const callback = finished => {\n          if (!finished) {\n            const animationsToCheck = [styleAnimations];\n\n            while (animationsToCheck.length > 0) {\n              const currentAnimation = animationsToCheck.pop();\n\n              if (Array.isArray(currentAnimation)) {\n                for (const element of currentAnimation) {\n                  animationsToCheck.push(element);\n                }\n              } else if (typeof currentAnimation === 'object' && currentAnimation.onStart === undefined) {\n                for (const value of Object.values(currentAnimation)) {\n                  animationsToCheck.push(value);\n                }\n              } else {\n                const currentStyleAnimation = currentAnimation;\n\n                if (!currentStyleAnimation.finished && currentStyleAnimation.callback) {\n                  currentStyleAnimation.callback(false);\n                }\n              }\n            }\n          }\n        };\n\n        return {\n          isHigherOrder: true,\n          onFrame,\n          onStart,\n          current: {},\n          styleAnimations,\n          callback\n        };\n      };\n\n      _f._closure = {\n        ColorProperties,\n        processColor,\n        setPath,\n        styleAnimations,\n        resolvePath,\n        withTiming\n      };\n      _f.asString = \"function _f(){const{ColorProperties,processColor,setPath,styleAnimations,resolvePath,withTiming}=jsThis._closure;{const onFrame=function(animation,now){let stillGoing=false;const entriesToCheck=[{value:animation.styleAnimations,path:[]}];while(entriesToCheck.length>0){const currentEntry=entriesToCheck.pop();if(Array.isArray(currentEntry.value)){for(let index=0;index<currentEntry.value.length;index++){entriesToCheck.push({value:currentEntry.value[index],path:currentEntry.path.concat(index)});}}else if(typeof currentEntry.value==='object'&&currentEntry.value.onFrame===undefined){for(const key of Object.keys(currentEntry.value)){entriesToCheck.push({value:currentEntry.value[key],path:currentEntry.path.concat(key)});}}else{const currentStyleAnimation=currentEntry.value;if(currentStyleAnimation.finished){continue;}const finished=currentStyleAnimation.onFrame(currentStyleAnimation,now);if(finished){currentStyleAnimation.finished=true;if(currentStyleAnimation.callback){currentStyleAnimation.callback(true);}}else{stillGoing=true;}if(ColorProperties.includes(currentEntry.path[0])){currentStyleAnimation.current=processColor(currentStyleAnimation.current);}setPath(animation.current,currentEntry.path,currentStyleAnimation.current);}}return!stillGoing;};const onStart=function(animation,value,now,previousAnimation){const entriesToCheck=[{value:styleAnimations,path:[]}];while(entriesToCheck.length>0){const currentEntry=entriesToCheck.pop();if(Array.isArray(currentEntry.value)){for(let index=0;index<currentEntry.value.length;index++){entriesToCheck.push({value:currentEntry.value[index],path:currentEntry.path.concat(index)});}}else if(typeof currentEntry.value==='object'&&currentEntry.value.onStart===undefined){for(const key of Object.keys(currentEntry.value)){entriesToCheck.push({value:currentEntry.value[key],path:currentEntry.path.concat(key)});}}else{const prevAnimation=resolvePath(previousAnimation===null||previousAnimation===void 0?void 0:previousAnimation.styleAnimations,currentEntry.path);let prevVal=resolvePath(value,currentEntry.path);if(prevAnimation&&!prevVal){prevVal=prevAnimation.current;}setPath(animation.current,currentEntry.path,prevVal);let currentAnimation;if(typeof currentEntry.value!=='object'||!currentEntry.value.onStart){currentAnimation=withTiming(currentEntry.value,{duration:0});setPath(animation.styleAnimations,currentEntry.path,currentAnimation);}else{currentAnimation=currentEntry.value;}currentAnimation.onStart(currentAnimation,prevVal,now,prevAnimation);}}};const callback=function(finished){if(!finished){const animationsToCheck=[styleAnimations];while(animationsToCheck.length>0){const currentAnimation=animationsToCheck.pop();if(Array.isArray(currentAnimation)){for(const element of currentAnimation){animationsToCheck.push(element);}}else if(typeof currentAnimation==='object'&&currentAnimation.onStart===undefined){for(const value of Object.values(currentAnimation)){animationsToCheck.push(value);}}else{const currentStyleAnimation=currentAnimation;if(!currentStyleAnimation.finished&&currentStyleAnimation.callback){currentStyleAnimation.callback(false);}}}}};return{isHigherOrder:true,onFrame:onFrame,onStart:onStart,current:{},styleAnimations:styleAnimations,callback:callback};}}\";\n      _f.__workletHash = 9887536897803;\n      _f.__location = \"/Users/fernandorojo/Developer/messing/rea-tree/node_modules/react-native-reanimated/lib/reanimated2/animation/styleAnimation.js (43:31)\";\n      return _f;\n    }());\n  };\n\n  _f._closure = {\n    defineAnimation,\n    ColorProperties,\n    processColor,\n    setPath,\n    resolvePath,\n    withTiming\n  };\n  _f.asString = \"function withStyleAnimation(styleAnimations){const{defineAnimation,ColorProperties,processColor,setPath,resolvePath,withTiming}=jsThis._closure;{return defineAnimation({},function(){'worklet';const onFrame=function(animation,now){let stillGoing=false;const entriesToCheck=[{value:animation.styleAnimations,path:[]}];while(entriesToCheck.length>0){const currentEntry=entriesToCheck.pop();if(Array.isArray(currentEntry.value)){for(let index=0;index<currentEntry.value.length;index++){entriesToCheck.push({value:currentEntry.value[index],path:currentEntry.path.concat(index)});}}else if(typeof currentEntry.value==='object'&&currentEntry.value.onFrame===undefined){for(const key of Object.keys(currentEntry.value)){entriesToCheck.push({value:currentEntry.value[key],path:currentEntry.path.concat(key)});}}else{const currentStyleAnimation=currentEntry.value;if(currentStyleAnimation.finished){continue;}const finished=currentStyleAnimation.onFrame(currentStyleAnimation,now);if(finished){currentStyleAnimation.finished=true;if(currentStyleAnimation.callback){currentStyleAnimation.callback(true);}}else{stillGoing=true;}if(ColorProperties.includes(currentEntry.path[0])){currentStyleAnimation.current=processColor(currentStyleAnimation.current);}setPath(animation.current,currentEntry.path,currentStyleAnimation.current);}}return!stillGoing;};const onStart=function(animation,value,now,previousAnimation){const entriesToCheck=[{value:styleAnimations,path:[]}];while(entriesToCheck.length>0){const currentEntry=entriesToCheck.pop();if(Array.isArray(currentEntry.value)){for(let index=0;index<currentEntry.value.length;index++){entriesToCheck.push({value:currentEntry.value[index],path:currentEntry.path.concat(index)});}}else if(typeof currentEntry.value==='object'&&currentEntry.value.onStart===undefined){for(const key of Object.keys(currentEntry.value)){entriesToCheck.push({value:currentEntry.value[key],path:currentEntry.path.concat(key)});}}else{const prevAnimation=resolvePath(previousAnimation===null||previousAnimation===void 0?void 0:previousAnimation.styleAnimations,currentEntry.path);let prevVal=resolvePath(value,currentEntry.path);if(prevAnimation&&!prevVal){prevVal=prevAnimation.current;}setPath(animation.current,currentEntry.path,prevVal);let currentAnimation;if(typeof currentEntry.value!=='object'||!currentEntry.value.onStart){currentAnimation=withTiming(currentEntry.value,{duration:0});setPath(animation.styleAnimations,currentEntry.path,currentAnimation);}else{currentAnimation=currentEntry.value;}currentAnimation.onStart(currentAnimation,prevVal,now,prevAnimation);}}};const callback=function(finished){if(!finished){const animationsToCheck=[styleAnimations];while(animationsToCheck.length>0){const currentAnimation=animationsToCheck.pop();if(Array.isArray(currentAnimation)){for(const element of currentAnimation){animationsToCheck.push(element);}}else if(typeof currentAnimation==='object'&&currentAnimation.onStart===undefined){for(const value of Object.values(currentAnimation)){animationsToCheck.push(value);}}else{const currentStyleAnimation=currentAnimation;if(!currentStyleAnimation.finished&&currentStyleAnimation.callback){currentStyleAnimation.callback(false);}}}}};return{isHigherOrder:true,onFrame:onFrame,onStart:onStart,current:{},styleAnimations:styleAnimations,callback:callback};});}}\";\n  _f.__workletHash = 15006684130601;\n  _f.__location = \"/Users/fernandorojo/Developer/messing/rea-tree/node_modules/react-native-reanimated/lib/reanimated2/animation/styleAnimation.js (41:7)\";\n  return _f;\n}();"],"mappings":"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"},"metadata":{},"sourceType":"module"}