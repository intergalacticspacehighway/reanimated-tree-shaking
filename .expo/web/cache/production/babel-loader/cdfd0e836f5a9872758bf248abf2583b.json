{"ast":null,"code":"import useCode from'../derived/useCode';import AnimatedNode from'./AnimatedNode';function assertNodesNotNull(code,children,exec){if(!code){var error=!children?\"Got \\\"\".concat(typeof children,\"\\\" type passed to children\"):\"Got \\\"\".concat(typeof exec,\"\\\" type passed to exec\");throw new Error(\"<Animated.Code /> expects the 'exec' prop or children to be an animated node or a function returning an animated node. \".concat(error));}}function Code(_ref){var exec=_ref.exec,children=_ref.children,dependencies=_ref.dependencies;var nodes=children||exec;var code=null;if(nodes instanceof AnimatedNode){code=function code(){return nodes;};}else if(typeof nodes==='function'){code=nodes;}assertNodesNotNull(code,children,exec);useCode(code,dependencies);return null;}export default Code;","map":{"version":3,"names":["useCode","AnimatedNode","assertNodesNotNull","code","children","exec","error","Error","Code","dependencies","nodes"],"sources":["/Users/fernandorojo/Developer/messing/rea-tree/node_modules/react-native-reanimated/lib/reanimated1/core/AnimatedCode.js"],"sourcesContent":["import useCode from '../derived/useCode';\nimport AnimatedNode from './AnimatedNode';\n\nfunction assertNodesNotNull(code, children, exec) {\n  if (!code) {\n    const error = !children ? `Got \"${typeof children}\" type passed to children` : `Got \"${typeof exec}\" type passed to exec`;\n    throw new Error(`<Animated.Code /> expects the 'exec' prop or children to be an animated node or a function returning an animated node. ${error}`);\n  }\n}\n\nfunction Code({\n  exec,\n  children,\n  dependencies\n}) {\n  const nodes = children || exec;\n  let code = null;\n\n  if (nodes instanceof AnimatedNode) {\n    code = () => nodes;\n  } else if (typeof nodes === 'function') {\n    code = nodes;\n  }\n\n  assertNodesNotNull(code, children, exec);\n  useCode(code, dependencies);\n  return null;\n}\n\nexport default Code;"],"mappings":"AAAA,MAAOA,CAAAA,OAAP,KAAoB,oBAApB,CACA,MAAOC,CAAAA,YAAP,KAAyB,gBAAzB,CAEA,QAASC,CAAAA,kBAAT,CAA4BC,IAA5B,CAAkCC,QAAlC,CAA4CC,IAA5C,CAAkD,CAChD,GAAI,CAACF,IAAL,CAAW,CACT,GAAMG,CAAAA,KAAK,CAAG,CAACF,QAAD,iBAAoB,MAAOA,CAAAA,QAA3B,+CAAyE,MAAOC,CAAAA,IAAhF,0BAAd,CACA,KAAM,IAAIE,CAAAA,KAAJ,kIAAoID,KAApI,EAAN,CACD,CACF,CAED,QAASE,CAAAA,IAAT,MAIG,IAHDH,CAAAA,IAGC,MAHDA,IAGC,CAFDD,QAEC,MAFDA,QAEC,CADDK,YACC,MADDA,YACC,CACD,GAAMC,CAAAA,KAAK,CAAGN,QAAQ,EAAIC,IAA1B,CACA,GAAIF,CAAAA,IAAI,CAAG,IAAX,CAEA,GAAIO,KAAK,WAAYT,CAAAA,YAArB,CAAmC,CACjCE,IAAI,CAAG,sBAAMO,CAAAA,KAAN,EAAP,CACD,CAFD,IAEO,IAAI,MAAOA,CAAAA,KAAP,GAAiB,UAArB,CAAiC,CACtCP,IAAI,CAAGO,KAAP,CACD,CAEDR,kBAAkB,CAACC,IAAD,CAAOC,QAAP,CAAiBC,IAAjB,CAAlB,CACAL,OAAO,CAACG,IAAD,CAAOM,YAAP,CAAP,CACA,MAAO,KAAP,CACD,CAED,cAAeD,CAAAA,IAAf"},"metadata":{},"sourceType":"module"}