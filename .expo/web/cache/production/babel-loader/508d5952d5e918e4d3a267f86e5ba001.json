{"ast":null,"code":"/* global _stopObservingProgress, _startObservingProgress */import{runOnUI}from'../core';import{withStyleAnimation}from'../animation/styleAnimation';import{ColorProperties}from'../UpdateProps';import{processColor}from'../Colors';runOnUI(function(){var _f=function _f(){var configs={};var enteringAnimationForTag={};global.LayoutAnimationRepository={configs:configs,registerConfig:function registerConfig(tag,config){configs[tag]=config;enteringAnimationForTag[tag]=null;},removeConfig:function removeConfig(tag){delete configs[tag];delete enteringAnimationForTag[tag];},startAnimationForTag:function startAnimationForTag(tag,type,yogaValues){if(configs[tag]==null){return;// :(\n}var style=configs[tag][type](yogaValues);var currentAnimation=style.animations;if(type==='entering'){enteringAnimationForTag[tag]=style;}else if(type==='layout'&&enteringAnimationForTag[tag]!==null){var entryAniamtion=enteringAnimationForTag[tag].animations;var layoutAnimation=style.animations;currentAnimation={};for(var key in entryAniamtion){currentAnimation[key]=entryAniamtion[key];}for(var _key in layoutAnimation){currentAnimation[_key]=layoutAnimation[_key];}}var sv=configs[tag].sv;_stopObservingProgress(tag,false);_startObservingProgress(tag,sv);var backupColor={};for(var _key2 in style.initialValues){if(ColorProperties.includes(_key2)){var value=style.initialValues[_key2];backupColor[_key2]=value;style.initialValues[_key2]=processColor(value);}}sv.value=Object.assign({},sv._value,style.initialValues);_stopObservingProgress(tag,false);var animation=withStyleAnimation(currentAnimation);animation.callback=function(finished){if(finished){_stopObservingProgress(tag,finished);}style.callback&&style.callback(finished);};if(backupColor){configs[tag].sv._value=Object.assign(Object.assign({},configs[tag].sv.value),backupColor);}configs[tag].sv.value=animation;_startObservingProgress(tag,sv);}};};_f._closure={ColorProperties:ColorProperties,processColor:processColor,withStyleAnimation:withStyleAnimation};_f.asString=\"function _f(){const{ColorProperties,processColor,withStyleAnimation}=jsThis._closure;{const configs={};const enteringAnimationForTag={};global.LayoutAnimationRepository={configs:configs,registerConfig:function(tag,config){configs[tag]=config;enteringAnimationForTag[tag]=null;},removeConfig:function(tag){delete configs[tag];delete enteringAnimationForTag[tag];},startAnimationForTag:function(tag,type,yogaValues){if(configs[tag]==null){return;}const style=configs[tag][type](yogaValues);let currentAnimation=style.animations;if(type==='entering'){enteringAnimationForTag[tag]=style;}else if(type==='layout'&&enteringAnimationForTag[tag]!==null){const entryAniamtion=enteringAnimationForTag[tag].animations;const layoutAnimation=style.animations;currentAnimation={};for(const key in entryAniamtion){currentAnimation[key]=entryAniamtion[key];}for(const key in layoutAnimation){currentAnimation[key]=layoutAnimation[key];}}const sv=configs[tag].sv;_stopObservingProgress(tag,false);_startObservingProgress(tag,sv);const backupColor={};for(const key in style.initialValues){if(ColorProperties.includes(key)){const value=style.initialValues[key];backupColor[key]=value;style.initialValues[key]=processColor(value);}}sv.value=Object.assign({},sv._value,style.initialValues);_stopObservingProgress(tag,false);const animation=withStyleAnimation(currentAnimation);animation.callback=function(finished){if(finished){_stopObservingProgress(tag,finished);}style.callback&&style.callback(finished);};if(backupColor){configs[tag].sv._value=Object.assign(Object.assign({},configs[tag].sv.value),backupColor);}configs[tag].sv.value=animation;_startObservingProgress(tag,sv);}};}}\";_f.__workletHash=15633326713685;_f.__location=\"/Users/fernandorojo/Developer/messing/rea-tree/node_modules/react-native-reanimated/lib/reanimated2/layoutReanimation/LayoutAnimationRepository.js (6:8)\";return _f;}())();","map":{"version":3,"names":["runOnUI","withStyleAnimation","ColorProperties","processColor","_f","configs","enteringAnimationForTag","global","LayoutAnimationRepository","registerConfig","tag","config","removeConfig","startAnimationForTag","type","yogaValues","style","currentAnimation","animations","entryAniamtion","layoutAnimation","key","sv","_stopObservingProgress","_startObservingProgress","backupColor","initialValues","includes","value","Object","assign","_value","animation","callback","finished","_closure","asString","__workletHash","__location"],"sources":["/Users/fernandorojo/Developer/messing/rea-tree/node_modules/react-native-reanimated/lib/reanimated2/layoutReanimation/LayoutAnimationRepository.js"],"sourcesContent":["/* global _stopObservingProgress, _startObservingProgress */\nimport { runOnUI } from '../core';\nimport { withStyleAnimation } from '../animation/styleAnimation';\nimport { ColorProperties } from '../UpdateProps';\nimport { processColor } from '../Colors';\nrunOnUI(function () {\n  const _f = function () {\n    const configs = {};\n    const enteringAnimationForTag = {};\n    global.LayoutAnimationRepository = {\n      configs,\n\n      registerConfig(tag, config) {\n        configs[tag] = config;\n        enteringAnimationForTag[tag] = null;\n      },\n\n      removeConfig(tag) {\n        delete configs[tag];\n        delete enteringAnimationForTag[tag];\n      },\n\n      startAnimationForTag(tag, type, yogaValues) {\n        if (configs[tag] == null) {\n          return; // :(\n        }\n\n        const style = configs[tag][type](yogaValues);\n        let currentAnimation = style.animations;\n\n        if (type === 'entering') {\n          enteringAnimationForTag[tag] = style;\n        } else if (type === 'layout' && enteringAnimationForTag[tag] !== null) {\n          const entryAniamtion = enteringAnimationForTag[tag].animations;\n          const layoutAnimation = style.animations;\n          currentAnimation = {};\n\n          for (const key in entryAniamtion) {\n            currentAnimation[key] = entryAniamtion[key];\n          }\n\n          for (const key in layoutAnimation) {\n            currentAnimation[key] = layoutAnimation[key];\n          }\n        }\n\n        const sv = configs[tag].sv;\n\n        _stopObservingProgress(tag, false);\n\n        _startObservingProgress(tag, sv);\n\n        const backupColor = {};\n\n        for (const key in style.initialValues) {\n          if (ColorProperties.includes(key)) {\n            const value = style.initialValues[key];\n            backupColor[key] = value;\n            style.initialValues[key] = processColor(value);\n          }\n        }\n\n        sv.value = Object.assign({}, sv._value, style.initialValues);\n\n        _stopObservingProgress(tag, false);\n\n        const animation = withStyleAnimation(currentAnimation);\n\n        animation.callback = finished => {\n          if (finished) {\n            _stopObservingProgress(tag, finished);\n          }\n\n          style.callback && style.callback(finished);\n        };\n\n        if (backupColor) {\n          configs[tag].sv._value = Object.assign(Object.assign({}, configs[tag].sv.value), backupColor);\n        }\n\n        configs[tag].sv.value = animation;\n\n        _startObservingProgress(tag, sv);\n      }\n\n    };\n  };\n\n  _f._closure = {\n    ColorProperties,\n    processColor,\n    withStyleAnimation\n  };\n  _f.asString = \"function _f(){const{ColorProperties,processColor,withStyleAnimation}=jsThis._closure;{const configs={};const enteringAnimationForTag={};global.LayoutAnimationRepository={configs:configs,registerConfig:function(tag,config){configs[tag]=config;enteringAnimationForTag[tag]=null;},removeConfig:function(tag){delete configs[tag];delete enteringAnimationForTag[tag];},startAnimationForTag:function(tag,type,yogaValues){if(configs[tag]==null){return;}const style=configs[tag][type](yogaValues);let currentAnimation=style.animations;if(type==='entering'){enteringAnimationForTag[tag]=style;}else if(type==='layout'&&enteringAnimationForTag[tag]!==null){const entryAniamtion=enteringAnimationForTag[tag].animations;const layoutAnimation=style.animations;currentAnimation={};for(const key in entryAniamtion){currentAnimation[key]=entryAniamtion[key];}for(const key in layoutAnimation){currentAnimation[key]=layoutAnimation[key];}}const sv=configs[tag].sv;_stopObservingProgress(tag,false);_startObservingProgress(tag,sv);const backupColor={};for(const key in style.initialValues){if(ColorProperties.includes(key)){const value=style.initialValues[key];backupColor[key]=value;style.initialValues[key]=processColor(value);}}sv.value=Object.assign({},sv._value,style.initialValues);_stopObservingProgress(tag,false);const animation=withStyleAnimation(currentAnimation);animation.callback=function(finished){if(finished){_stopObservingProgress(tag,finished);}style.callback&&style.callback(finished);};if(backupColor){configs[tag].sv._value=Object.assign(Object.assign({},configs[tag].sv.value),backupColor);}configs[tag].sv.value=animation;_startObservingProgress(tag,sv);}};}}\";\n  _f.__workletHash = 15633326713685;\n  _f.__location = \"/Users/fernandorojo/Developer/messing/rea-tree/node_modules/react-native-reanimated/lib/reanimated2/layoutReanimation/LayoutAnimationRepository.js (6:8)\";\n  return _f;\n}())();"],"mappings":"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"},"metadata":{},"sourceType":"module"}