{"ast":null,"code":"\"use strict\";Object.defineProperty(exports,\"__esModule\",{value:true});exports.assignColorValue=assignColorValue;exports.getColorsAsObject=getColorsAsObject;exports.getObjectAsColorsXml=getObjectAsColorsXml;exports.getProjectColorsXMLPathAsync=getProjectColorsXMLPathAsync;exports.removeColorItem=removeColorItem;exports.setColorItem=setColorItem;function _Paths(){var data=require(\"./Paths\");_Paths=function _Paths(){return data;};return data;}function _Resources(){var data=require(\"./Resources\");_Resources=function _Resources(){return data;};return data;}function getProjectColorsXMLPathAsync(projectRoot){var _ref=arguments.length>1&&arguments[1]!==undefined?arguments[1]:{},kind=_ref.kind;return(0,_Paths().getResourceXMLPathAsync)(projectRoot,{kind:kind,name:'colors'});}function setColorItem(itemToAdd,colorFileContentsJSON){var _colorFileContentsJSO;if((_colorFileContentsJSO=colorFileContentsJSON.resources)!==null&&_colorFileContentsJSO!==void 0&&_colorFileContentsJSO.color){var colorNameExists=colorFileContentsJSON.resources.color.filter(function(e){return e.$.name===itemToAdd.$.name;})[0];if(colorNameExists){colorNameExists._=itemToAdd._;}else{colorFileContentsJSON.resources.color.push(itemToAdd);}}else{if(!colorFileContentsJSON.resources||typeof colorFileContentsJSON.resources==='string'){//file was empty and JSON is `{resources : ''}`\ncolorFileContentsJSON.resources={};}colorFileContentsJSON.resources.color=[itemToAdd];}return colorFileContentsJSON;}function removeColorItem(named,contents){var _contents$resources;if((_contents$resources=contents.resources)!==null&&_contents$resources!==void 0&&_contents$resources.color){var index=contents.resources.color.findIndex(function(e){return e.$.name===named;});if(index>-1){// replace the previous value\ncontents.resources.color.splice(index,1);}}return contents;}/**\n * Set or remove value in XML based on nullish factor of the `value` property.\n */function assignColorValue(xml,_ref2){var value=_ref2.value,name=_ref2.name;if(value){return setColorItem((0,_Resources().buildResourceItem)({name:name,value:value}),xml);}return removeColorItem(name,xml);}/**\n * Helper to convert a basic XML object into a simple k/v pair.\n * `colors.xml` is a very basic XML file so this is pretty safe to do.\n * Added for testing purposes.\n *\n * @param xml\n * @returns\n */function getColorsAsObject(xml){var _xml$resources;if(!(xml!==null&&xml!==void 0&&(_xml$resources=xml.resources)!==null&&_xml$resources!==void 0&&_xml$resources.color)){return null;}return(0,_Resources().getResourceItemsAsObject)(xml.resources.color);}/**\n * Helper to convert a basic k/v object to a colors XML object.\n *\n * @param xml\n * @returns\n */function getObjectAsColorsXml(obj){return{resources:{color:(0,_Resources().getObjectAsResourceItems)(obj)}};}","map":{"version":3,"sources":["../../src/android/Colors.ts"],"names":["kind","name","colorFileContentsJSON","colorNameExists","e","itemToAdd","contents","index","setColorItem","value","removeColorItem","xml","resources","color"],"mappings":"0VAAA,QAAA,CAAA,MAAA,EAAA,CAAA,GAAA,CAAA,IAAA,CAAA,OAAA,CAAA,SAAA,CAAA,CAAA,MAAA,CAAA,iBAAA,CAAA,MAAA,CAAA,IAAA,CAAA,CAAA,CAAA,MAAA,CAAA,IAAA,CAAA,CACA,QAAA,CAAA,UAAA,EAAA,CAAA,GAAA,CAAA,IAAA,CAAA,OAAA,CAAA,aAAA,CAAA,CAAA,UAAA,CAAA,qBAAA,CAAA,MAAA,CAAA,IAAA,CAAA,CAAA,CAAA,MAAA,CAAA,IAAA,CAAA,CASO,QAAA,CAAA,4BAAA,CAAA,WAAA,CAGL,oEAHK,EAGL,CADEA,IACF,MADEA,IACF,CACA,MAAO,CAAA,EAAA,MAAA,GAAA,uBAAA,EAAA,WAAA,CAAqC,CAAEA,IAAF,CAAEA,IAAF,CAAQC,IAAI,CAAE,QAAd,CAArC,CAAP,CACD,CAEM,QAAA,CAAA,YAAA,CAAA,SAAA,CAAA,qBAAA,CAAsF,CAAA,GAAA,CAAA,qBAAA,CAC3F,GAAA,CAAA,qBAAA,CAAIC,qBAAqB,CAAzB,SAAA,IAAA,IAAA,EAAA,qBAAA,GAAA,IAAA,EAAA,EAAIA,qBAAAA,CAAJ,KAAA,CAA4C,CAC1C,GAAMC,CAAAA,eAAe,CAAGD,qBAAqB,CAArBA,SAAAA,CAAAA,KAAAA,CAAAA,MAAAA,CACrBE,SAAAA,CAAD,QAAwBA,CAAAA,CAAC,CAADA,CAAAA,CAAAA,IAAAA,GAAaC,SAAS,CAATA,CAAAA,CADfH,IACtB,EADsBA,EAAxB,CAAwBA,CAAxB,CAGA,GAAA,eAAA,CAAqB,CACnBC,eAAe,CAAfA,CAAAA,CAAoBE,SAAS,CAA7BF,CAAAA,CADF,CAAA,IAEO,CACLD,qBAAqB,CAArBA,SAAAA,CAAAA,KAAAA,CAAAA,IAAAA,CAAAA,SAAAA,EACD,CARH,CAAA,IASO,CACL,GAAI,CAACA,qBAAqB,CAAtB,SAAA,EAAoC,MAAOA,CAAAA,qBAAqB,CAA5B,SAAA,GAAxC,QAAA,CAA6F,CAC3F;AACAA,qBAAqB,CAArBA,SAAAA,CAAAA,EAAAA,CACD,CACDA,qBAAqB,CAArBA,SAAAA,CAAAA,KAAAA,CAAwC,CAAxCA,SAAwC,CAAxCA,CACD,CACD,MAAA,CAAA,qBAAA,CACD,CAEM,QAAA,CAAA,eAAA,CAAA,KAAA,CAAA,QAAA,CAA+D,CAAA,GAAA,CAAA,mBAAA,CACpE,GAAA,CAAA,mBAAA,CAAII,QAAQ,CAAZ,SAAA,IAAA,IAAA,EAAA,mBAAA,GAAA,IAAA,EAAA,EAAIA,mBAAAA,CAAJ,KAAA,CAA+B,CAC7B,GAAMC,CAAAA,KAAK,CAAGD,QAAQ,CAARA,SAAAA,CAAAA,KAAAA,CAAAA,SAAAA,CAAoCF,SAAAA,CAAD,QAAwBA,CAAAA,CAAC,CAADA,CAAAA,CAAAA,IAAAA,GAAzE,KAAiD,EAAnCE,CAAd,CACA,GAAIC,KAAK,CAAG,CAAZ,CAAA,CAAgB,CACd;AACAD,QAAQ,CAARA,SAAAA,CAAAA,KAAAA,CAAAA,MAAAA,CAAAA,KAAAA,CAAAA,CAAAA,EACD,CACF,CACD,MAAA,CAAA,QAAA,CACD,CAED;AACA;AACA,GACO,QAAA,CAAA,gBAAA,CAAA,GAAA,OASL,IAPA,CAAA,KAOA,OAPA,KAOA,CALEL,IAKF,OALEA,IAKF,CACA,GAAA,KAAA,CAAW,CACT,MAAOO,CAAAA,YAAY,CACjB,CAAA,EAAA,UAAA,GAAA,iBAAA,EAAkB,CAChBP,IADgB,CAChBA,IADgB,CAEhBQ,KAAAA,CAAAA,KAFgB,CAAlB,CADiB,CAAnB,GAAmB,CAAnB,CAOD,CAED,MAAOC,CAAAA,eAAe,CAAA,IAAA,CAAtB,GAAsB,CAAtB,CACD,CAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GACO,QAAA,CAAA,iBAAA,CAAA,GAAA,CAA4E,CAAA,GAAA,CAAA,cAAA,CACjF,GAAI,EAACC,GAAD,GAAA,IAACA,EAAAA,GAAD,GAAA,IAAA,EAACA,EAAD,CAAA,cAAA,CAACA,GAAG,CAAJ,SAAA,IAAA,IAACA,EAAD,cAAA,GAAA,IAAA,EAACA,EAAAA,cAAAA,CAAL,KAAI,CAAJ,CAA4B,CAC1B,MAAA,KAAA,CACD,CAED,MAAO,CAAA,EAAA,UAAA,GAAA,wBAAA,EAAyBA,GAAG,CAAHA,SAAAA,CAAhC,KAAO,CAAP,CACD,CAED;AACA;AACA;AACA;AACA;AACA,GACO,QAAA,CAAA,oBAAA,CAAA,GAAA,CAAwE,CAC7E,MAAO,CACLC,SAAS,CAAE,CACTC,KAAK,CAAE,CAAA,EAAA,UAAA,GAAA,wBAAA,EAAA,GAAA,CADE,CADN,CAAP,CAKD","sourcesContent":["import { getResourceXMLPathAsync } from './Paths';\nimport {\n  buildResourceItem,\n  getObjectAsResourceItems,\n  getResourceItemsAsObject,\n  ResourceItemXML,\n  ResourceKind,\n  ResourceXML,\n} from './Resources';\n\nexport function getProjectColorsXMLPathAsync(\n  projectRoot: string,\n  { kind }: { kind?: ResourceKind } = {}\n) {\n  return getResourceXMLPathAsync(projectRoot, { kind, name: 'colors' });\n}\n\nexport function setColorItem(itemToAdd: ResourceItemXML, colorFileContentsJSON: ResourceXML) {\n  if (colorFileContentsJSON.resources?.color) {\n    const colorNameExists = colorFileContentsJSON.resources.color.filter(\n      (e: ResourceItemXML) => e.$.name === itemToAdd.$.name\n    )[0];\n    if (colorNameExists) {\n      colorNameExists._ = itemToAdd._;\n    } else {\n      colorFileContentsJSON.resources.color.push(itemToAdd);\n    }\n  } else {\n    if (!colorFileContentsJSON.resources || typeof colorFileContentsJSON.resources === 'string') {\n      //file was empty and JSON is `{resources : ''}`\n      colorFileContentsJSON.resources = {};\n    }\n    colorFileContentsJSON.resources.color = [itemToAdd];\n  }\n  return colorFileContentsJSON;\n}\n\nexport function removeColorItem(named: string, contents: ResourceXML) {\n  if (contents.resources?.color) {\n    const index = contents.resources.color.findIndex((e: ResourceItemXML) => e.$.name === named);\n    if (index > -1) {\n      // replace the previous value\n      contents.resources.color.splice(index, 1);\n    }\n  }\n  return contents;\n}\n\n/**\n * Set or remove value in XML based on nullish factor of the `value` property.\n */\nexport function assignColorValue(\n  xml: ResourceXML,\n  {\n    value,\n    name,\n  }: {\n    value?: string | null;\n    name: string;\n  }\n) {\n  if (value) {\n    return setColorItem(\n      buildResourceItem({\n        name,\n        value,\n      }),\n      xml\n    );\n  }\n\n  return removeColorItem(name, xml);\n}\n\n/**\n * Helper to convert a basic XML object into a simple k/v pair.\n * `colors.xml` is a very basic XML file so this is pretty safe to do.\n * Added for testing purposes.\n *\n * @param xml\n * @returns\n */\nexport function getColorsAsObject(xml: ResourceXML): Record<string, string> | null {\n  if (!xml?.resources?.color) {\n    return null;\n  }\n\n  return getResourceItemsAsObject(xml.resources.color);\n}\n\n/**\n * Helper to convert a basic k/v object to a colors XML object.\n *\n * @param xml\n * @returns\n */\nexport function getObjectAsColorsXml(obj: Record<string, string>): ResourceXML {\n  return {\n    resources: {\n      color: getObjectAsResourceItems(obj),\n    },\n  };\n}\n"]},"metadata":{},"sourceType":"script"}