{"ast":null,"code":"\"use strict\";var _defineProperty=require(\"/Users/fernandorojo/Developer/messing/rea-tree/node_modules/next/dist/compiled/@babel/runtime/helpers/defineProperty\");function ownKeys(object,enumerableOnly){var keys=Object.keys(object);if(Object.getOwnPropertySymbols){var symbols=Object.getOwnPropertySymbols(object);enumerableOnly&&(symbols=symbols.filter(function(sym){return Object.getOwnPropertyDescriptor(object,sym).enumerable;})),keys.push.apply(keys,symbols);}return keys;}function _objectSpread(target){for(var i=1;i<arguments.length;i++){var source=null!=arguments[i]?arguments[i]:{};i%2?ownKeys(Object(source),!0).forEach(function(key){_defineProperty(target,key,source[key]);}):Object.getOwnPropertyDescriptors?Object.defineProperties(target,Object.getOwnPropertyDescriptors(source)):ownKeys(Object(source)).forEach(function(key){Object.defineProperty(target,key,Object.getOwnPropertyDescriptor(source,key));});}return target;}var __importDefault=this&&this.__importDefault||function(mod){return mod&&mod.__esModule?mod:{\"default\":mod};};Object.defineProperty(exports,\"__esModule\",{value:true});exports.isDebugMode=void 0;var getenv_1=require(\"getenv\");var is_wsl_1=__importDefault(require(\"is-wsl\"));var optimize_css_assets_webpack_plugin_1=__importDefault(require(\"optimize-css-assets-webpack-plugin\"));var postcss_safe_parser_1=__importDefault(require(\"postcss-safe-parser\"));var terser_webpack_plugin_1=__importDefault(require(\"terser-webpack-plugin\"));/**\n * Returns `true` if the Expo web environment variable enabled.\n * @internal\n */function isDebugMode(){return(0,getenv_1.boolish)('EXPO_WEB_DEBUG',false);}exports.isDebugMode=isDebugMode;/**\n * Add the minifier and other optimizations for production builds.\n *\n * @param webpackConfig Existing Webpack config to modify.\n * @category addons\n */function withOptimizations(webpackConfig){if(webpackConfig.mode!=='production'){return webpackConfig;}var shouldUseSourceMap=typeof webpackConfig.devtool==='string';var _isDebugMode=isDebugMode();webpackConfig.optimization=_objectSpread(_objectSpread({},webpackConfig.optimization||{}),{},{nodeEnv:false,minimize:true,minimizer:[// This is only used in production mode\nnew terser_webpack_plugin_1[\"default\"]({terserOptions:{parse:{// we want terser to parse ecma 8 code. However, we don't want it\n// to apply any minfication steps that turns valid ecma 5 code\n// into invalid ecma 5 code. This is why the 'compress' and 'output'\n// sections only apply transformations that are ecma 5 safe\n// https://github.com/facebook/create-react-app/pull/4234\necma:8},compress:{warnings:_isDebugMode,// Disabled because of an issue with Uglify breaking seemingly valid code:\n// https://github.com/facebook/create-react-app/issues/2376\n// Pending further investigation:\n// https://github.com/mishoo/UglifyJS2/issues/2011\ncomparisons:false,// Disabled because of an issue with Terser breaking valid code:\n// https://github.com/facebook/create-react-app/issues/5250\n// Pending futher investigation:\n// https://github.com/terser-js/terser/issues/120\ninline:2},mangle:_isDebugMode?false:{safari10:true},output:{ecma:5,comments:_isDebugMode,// Turned on because emoji and regex is not minified properly using default\n// https://github.com/facebook/create-react-app/issues/2488\nascii_only:true}},// Use multi-process parallel running to improve the build speed\n// Default number of concurrent runs: os.cpus().length - 1\n// Disabled on WSL (Windows Subsystem for Linux) due to an issue with Terser\n// https://github.com/webpack-contrib/terser-webpack-plugin/issues/21\nparallel:!is_wsl_1[\"default\"],// Enable file caching\ncache:true,sourceMap:shouldUseSourceMap}),// This is only used in production mode\nnew optimize_css_assets_webpack_plugin_1[\"default\"]({cssProcessorOptions:{parser:postcss_safe_parser_1[\"default\"],map:shouldUseSourceMap?{// `inline: false` forces the sourcemap to be output into a\n// separate file\ninline:false,// `annotation: true` appends the sourceMappingURL to the end of\n// the css file, helping the browser find the sourcemap\nannotation:true}:false}})],// Automatically split vendor and commons\n// https://twitter.com/wSokra/status/969633336732905474\n// https://medium.com/webpack/webpack-4-code-splitting-chunk-graph-and-the-splitchunks-optimization-be739a861366\nsplitChunks:{chunks:'all',name:false},// Keep the runtime chunk separated to enable long term caching\n// https://twitter.com/wSokra/status/969679223278505985\nruntimeChunk:true,// Skip the emitting phase whenever there are errors while compiling. This ensures that no erroring assets are emitted.\nnoEmitOnErrors:true});return webpackConfig;}exports[\"default\"]=withOptimizations;","map":{"version":3,"sources":["../../src/addons/withOptimizations.ts"],"names":[],"mappings":"ymCAAA,GAAA,CAAA,QAAA,CAAA,OAAA,CAAA,QAAA,CAAA,CACA,GAAA,CAAA,QAAA,CAAA,eAAA,CAAA,OAAA,CAAA,QAAA,CAAA,CAAA,CACA,GAAA,CAAA,oCAAA,CAAA,eAAA,CAAA,OAAA,CAAA,oCAAA,CAAA,CAAA,CACA,GAAA,CAAA,qBAAA,CAAA,eAAA,CAAA,OAAA,CAAA,qBAAA,CAAA,CAAA,CACA,GAAA,CAAA,uBAAA,CAAA,eAAA,CAAA,OAAA,CAAA,uBAAA,CAAA,CAAA,CAIA;;;AAGG,GACH,QAAgB,CAAA,WAAhB,EAA2B,CACzB,MAAO,CAAA,EAAA,QAAA,CAAA,OAAA,EAAQ,gBAAR,CAA0B,KAA1B,CAAP,CACD,CAFD,OAAA,CAAA,WAAA,CAAA,WAAA,CAIA;;;;;AAKG,GACH,QAAwB,CAAA,iBAAxB,CAA0C,aAA1C,CAAyE,CACvE,GAAI,aAAa,CAAC,IAAd,GAAuB,YAA3B,CAAyC,CACvC,MAAO,CAAA,aAAP,CACD,CACD,GAAM,CAAA,kBAAkB,CAAG,MAAO,CAAA,aAAa,CAAC,OAArB,GAAiC,QAA5D,CAEA,GAAM,CAAA,YAAY,CAAG,WAAW,EAAhC,CAEA,aAAa,CAAC,YAAd,gCACM,aAAa,CAAC,YAAd,EAA8B,EADpC,MAEE,OAAO,CAAE,KAFX,CAGE,QAAQ,CAAE,IAHZ,CAIE,SAAS,CAAE,CACT;AACA,GAAI,CAAA,uBAAA,WAAJ,CAAiB,CACf,aAAa,CAAE,CACb,KAAK,CAAE,CACL;AACA;AACA;AACA;AACA;AACA,IAAI,CAAE,CAND,CADM,CASb,QAAQ,CAAE,CACR,QAAQ,CAAE,YADF,CAER;AACA;AACA;AACA;AACA,WAAW,CAAE,KANL,CAOR;AACA;AACA;AACA;AACA,MAAM,CAAE,CAXA,CATG,CAsBb,MAAM,CAAE,YAAY,CAChB,KADgB,CAEhB,CACE,QAAQ,CAAE,IADZ,CAxBS,CA2Bb,MAAM,CAAE,CACN,IAAI,CAAE,CADA,CAEN,QAAQ,CAAE,YAFJ,CAGN;AACA;AACA,UAAU,CAAE,IALN,CA3BK,CADA,CAoCf;AACA;AACA;AACA;AACA,QAAQ,CAAE,CAAC,QAAA,WAxCI,CAyCf;AACA,KAAK,CAAE,IA1CQ,CA2Cf,SAAS,CAAE,kBA3CI,CAAjB,CAFS,CA+CT;AACA,GAAI,CAAA,oCAAA,WAAJ,CAA4B,CAC1B,mBAAmB,CAAE,CACnB,MAAM,CAAE,qBAAA,WADW,CAEnB,GAAG,CAAE,kBAAkB,CACnB,CACE;AACA;AACA,MAAM,CAAE,KAHV,CAIE;AACA;AACA,UAAU,CAAE,IANd,CADmB,CASnB,KAXe,CADK,CAA5B,CAhDS,CAJb,CAoEE;AACA;AACA;AACA,WAAW,CAAE,CACX,MAAM,CAAE,KADG,CAEX,IAAI,CAAE,KAFK,CAvEf,CA2EE;AACA;AACA,YAAY,CAAE,IA7EhB,CA+EE;AACA,cAAc,CAAE,IAhFlB,GAmFA,MAAO,CAAA,aAAP,CACD,CA5FD,OAAA,WAAA,CAAA,iBAAA","sourcesContent":["import { boolish } from 'getenv';\nimport isWsl from 'is-wsl';\nimport OptimizeCSSAssetsPlugin from 'optimize-css-assets-webpack-plugin';\nimport safePostCssParser from 'postcss-safe-parser';\nimport TerserPlugin from 'terser-webpack-plugin';\n\nimport { AnyConfiguration } from '../types';\n\n/**\n * Returns `true` if the Expo web environment variable enabled.\n * @internal\n */\nexport function isDebugMode(): boolean {\n  return boolish('EXPO_WEB_DEBUG', false);\n}\n\n/**\n * Add the minifier and other optimizations for production builds.\n *\n * @param webpackConfig Existing Webpack config to modify.\n * @category addons\n */\nexport default function withOptimizations(webpackConfig: AnyConfiguration): AnyConfiguration {\n  if (webpackConfig.mode !== 'production') {\n    return webpackConfig;\n  }\n  const shouldUseSourceMap = typeof webpackConfig.devtool === 'string';\n\n  const _isDebugMode = isDebugMode();\n\n  webpackConfig.optimization = {\n    ...(webpackConfig.optimization || {}),\n    nodeEnv: false,\n    minimize: true,\n    minimizer: [\n      // This is only used in production mode\n      new TerserPlugin({\n        terserOptions: {\n          parse: {\n            // we want terser to parse ecma 8 code. However, we don't want it\n            // to apply any minfication steps that turns valid ecma 5 code\n            // into invalid ecma 5 code. This is why the 'compress' and 'output'\n            // sections only apply transformations that are ecma 5 safe\n            // https://github.com/facebook/create-react-app/pull/4234\n            ecma: 8,\n          },\n          compress: {\n            warnings: _isDebugMode,\n            // Disabled because of an issue with Uglify breaking seemingly valid code:\n            // https://github.com/facebook/create-react-app/issues/2376\n            // Pending further investigation:\n            // https://github.com/mishoo/UglifyJS2/issues/2011\n            comparisons: false,\n            // Disabled because of an issue with Terser breaking valid code:\n            // https://github.com/facebook/create-react-app/issues/5250\n            // Pending futher investigation:\n            // https://github.com/terser-js/terser/issues/120\n            inline: 2,\n          },\n          mangle: _isDebugMode\n            ? false\n            : {\n                safari10: true,\n              },\n          output: {\n            ecma: 5,\n            comments: _isDebugMode,\n            // Turned on because emoji and regex is not minified properly using default\n            // https://github.com/facebook/create-react-app/issues/2488\n            ascii_only: true,\n          },\n        },\n        // Use multi-process parallel running to improve the build speed\n        // Default number of concurrent runs: os.cpus().length - 1\n        // Disabled on WSL (Windows Subsystem for Linux) due to an issue with Terser\n        // https://github.com/webpack-contrib/terser-webpack-plugin/issues/21\n        parallel: !isWsl,\n        // Enable file caching\n        cache: true,\n        sourceMap: shouldUseSourceMap,\n      }),\n      // This is only used in production mode\n      new OptimizeCSSAssetsPlugin({\n        cssProcessorOptions: {\n          parser: safePostCssParser,\n          map: shouldUseSourceMap\n            ? {\n                // `inline: false` forces the sourcemap to be output into a\n                // separate file\n                inline: false,\n                // `annotation: true` appends the sourceMappingURL to the end of\n                // the css file, helping the browser find the sourcemap\n                annotation: true,\n              }\n            : false,\n        },\n      }),\n    ],\n    // Automatically split vendor and commons\n    // https://twitter.com/wSokra/status/969633336732905474\n    // https://medium.com/webpack/webpack-4-code-splitting-chunk-graph-and-the-splitchunks-optimization-be739a861366\n    splitChunks: {\n      chunks: 'all',\n      name: false,\n    },\n    // Keep the runtime chunk separated to enable long term caching\n    // https://twitter.com/wSokra/status/969679223278505985\n    runtimeChunk: true,\n\n    // Skip the emitting phase whenever there are errors while compiling. This ensures that no erroring assets are emitted.\n    noEmitOnErrors: true,\n  };\n\n  return webpackConfig;\n}\n"],"sourceRoot":""},"metadata":{},"sourceType":"script"}