{"ast":null,"code":"\"use strict\";exports.__esModule=true;exports[\"default\"]=void 0;var _UIManager=_interopRequireDefault(require(\"../../exports/UIManager\"));function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{\"default\":obj};}/**\n * Copyright (c) Nicolas Gallagher.\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * \n */ /**\n * This class is responsible for coordinating the \"focused\"\n * state for TextInputs. All calls relating to the keyboard\n * should be funneled through here\n */var TextInputState={/**\n   * Internal state\n   */_currentlyFocusedNode:null,/**\n   * Returns the ID of the currently focused text field, if one exists\n   * If no text field is focused it returns null\n   */currentlyFocusedField:function currentlyFocusedField(){if(document.activeElement!==this._currentlyFocusedNode){this._currentlyFocusedNode=null;}return this._currentlyFocusedNode;},/**\n   * @param {Object} TextInputID id of the text field to focus\n   * Focuses the specified text field\n   * noop if the text field was already focused\n   */focusTextInput:function focusTextInput(textFieldNode){if(textFieldNode!==null){this._currentlyFocusedNode=textFieldNode;if(document.activeElement!==textFieldNode){_UIManager[\"default\"].focus(textFieldNode);}}},/**\n   * @param {Object} textFieldNode id of the text field to focus\n   * Unfocuses the specified text field\n   * noop if it wasn't focused\n   */blurTextInput:function blurTextInput(textFieldNode){if(textFieldNode!==null){this._currentlyFocusedNode=null;if(document.activeElement===textFieldNode){_UIManager[\"default\"].blur(textFieldNode);}}}};var _default=TextInputState;exports[\"default\"]=_default;module.exports=exports[\"default\"];","map":{"version":3,"names":["exports","__esModule","_UIManager","_interopRequireDefault","require","obj","TextInputState","_currentlyFocusedNode","currentlyFocusedField","document","activeElement","focusTextInput","textFieldNode","focus","blurTextInput","blur","_default","module"],"sources":["/Users/fernandorojo/Developer/messing/rea-tree/node_modules/react-native-web/dist/cjs/modules/TextInputState/index.js"],"sourcesContent":["\"use strict\";\n\nexports.__esModule = true;\nexports.default = void 0;\n\nvar _UIManager = _interopRequireDefault(require(\"../../exports/UIManager\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n/**\n * Copyright (c) Nicolas Gallagher.\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * \n */\n\n/**\n * This class is responsible for coordinating the \"focused\"\n * state for TextInputs. All calls relating to the keyboard\n * should be funneled through here\n */\nvar TextInputState = {\n  /**\n   * Internal state\n   */\n  _currentlyFocusedNode: null,\n\n  /**\n   * Returns the ID of the currently focused text field, if one exists\n   * If no text field is focused it returns null\n   */\n  currentlyFocusedField: function currentlyFocusedField() {\n    if (document.activeElement !== this._currentlyFocusedNode) {\n      this._currentlyFocusedNode = null;\n    }\n\n    return this._currentlyFocusedNode;\n  },\n\n  /**\n   * @param {Object} TextInputID id of the text field to focus\n   * Focuses the specified text field\n   * noop if the text field was already focused\n   */\n  focusTextInput: function focusTextInput(textFieldNode) {\n    if (textFieldNode !== null) {\n      this._currentlyFocusedNode = textFieldNode;\n\n      if (document.activeElement !== textFieldNode) {\n        _UIManager.default.focus(textFieldNode);\n      }\n    }\n  },\n\n  /**\n   * @param {Object} textFieldNode id of the text field to focus\n   * Unfocuses the specified text field\n   * noop if it wasn't focused\n   */\n  blurTextInput: function blurTextInput(textFieldNode) {\n    if (textFieldNode !== null) {\n      this._currentlyFocusedNode = null;\n\n      if (document.activeElement === textFieldNode) {\n        _UIManager.default.blur(textFieldNode);\n      }\n    }\n  }\n};\nvar _default = TextInputState;\nexports.default = _default;\nmodule.exports = exports.default;"],"mappings":"AAAA,aAEAA,OAAO,CAACC,UAAR,CAAqB,IAArB,CACAD,OAAO,WAAP,CAAkB,IAAK,EAAvB,CAEA,GAAIE,CAAAA,UAAU,CAAGC,sBAAsB,CAACC,OAAO,CAAC,yBAAD,CAAR,CAAvC,CAEA,QAASD,CAAAA,sBAAT,CAAgCE,GAAhC,CAAqC,CAAE,MAAOA,CAAAA,GAAG,EAAIA,GAAG,CAACJ,UAAX,CAAwBI,GAAxB,CAA8B,CAAE,UAASA,GAAX,CAArC,CAAwD,CAE/F;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,G,CAEA;AACA;AACA;AACA;AACA,GACA,GAAIC,CAAAA,cAAc,CAAG,CACnB;AACF;AACA,KACEC,qBAAqB,CAAE,IAJJ,CAMnB;AACF;AACA;AACA,KACEC,qBAAqB,CAAE,QAASA,CAAAA,qBAAT,EAAiC,CACtD,GAAIC,QAAQ,CAACC,aAAT,GAA2B,KAAKH,qBAApC,CAA2D,CACzD,KAAKA,qBAAL,CAA6B,IAA7B,CACD,CAED,MAAO,MAAKA,qBAAZ,CACD,CAhBkB,CAkBnB;AACF;AACA;AACA;AACA,KACEI,cAAc,CAAE,QAASA,CAAAA,cAAT,CAAwBC,aAAxB,CAAuC,CACrD,GAAIA,aAAa,GAAK,IAAtB,CAA4B,CAC1B,KAAKL,qBAAL,CAA6BK,aAA7B,CAEA,GAAIH,QAAQ,CAACC,aAAT,GAA2BE,aAA/B,CAA8C,CAC5CV,UAAU,WAAV,CAAmBW,KAAnB,CAAyBD,aAAzB,EACD,CACF,CACF,CA/BkB,CAiCnB;AACF;AACA;AACA;AACA,KACEE,aAAa,CAAE,QAASA,CAAAA,aAAT,CAAuBF,aAAvB,CAAsC,CACnD,GAAIA,aAAa,GAAK,IAAtB,CAA4B,CAC1B,KAAKL,qBAAL,CAA6B,IAA7B,CAEA,GAAIE,QAAQ,CAACC,aAAT,GAA2BE,aAA/B,CAA8C,CAC5CV,UAAU,WAAV,CAAmBa,IAAnB,CAAwBH,aAAxB,EACD,CACF,CACF,CA9CkB,CAArB,CAgDA,GAAII,CAAAA,QAAQ,CAAGV,cAAf,CACAN,OAAO,WAAP,CAAkBgB,QAAlB,CACAC,MAAM,CAACjB,OAAP,CAAiBA,OAAO,WAAxB"},"metadata":{},"sourceType":"script"}