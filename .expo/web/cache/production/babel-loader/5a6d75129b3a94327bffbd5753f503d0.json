{"ast":null,"code":"\"use strict\";var _toArray=require(\"/Users/fernandorojo/Developer/messing/rea-tree/node_modules/next/dist/compiled/@babel/runtime/helpers/toArray\");Object.defineProperty(exports,\"__esModule\",{value:true});exports.findSchemeNames=findSchemeNames;exports.findSchemePaths=findSchemePaths;exports.getAllEntitlementsPaths=getAllEntitlementsPaths;exports.getAllInfoPlistPaths=getAllInfoPlistPaths;exports.getAllPBXProjectPaths=getAllPBXProjectPaths;exports.getAllXcodeProjectPaths=getAllXcodeProjectPaths;exports.getAppDelegate=getAppDelegate;exports.getAppDelegateFilePath=getAppDelegateFilePath;exports.getAppDelegateHeaderFilePath=getAppDelegateHeaderFilePath;exports.getAppDelegateObjcHeaderFilePath=getAppDelegateObjcHeaderFilePath;exports.getEntitlementsPath=getEntitlementsPath;exports.getExpoPlistPath=getExpoPlistPath;exports.getFileInfo=getFileInfo;exports.getInfoPlistPath=getInfoPlistPath;exports.getPBXProjectPath=getPBXProjectPath;exports.getSourceRoot=getSourceRoot;exports.getSupportingPath=getSupportingPath;exports.getXcodeProjectPath=getXcodeProjectPath;function _fs(){var data=require(\"fs\");_fs=function _fs(){return data;};return data;}function _glob(){var data=require(\"glob\");_glob=function _glob(){return data;};return data;}function path(){var data=_interopRequireWildcard(require(\"path\"));path=function path(){return data;};return data;}function _errors(){var data=require(\"../utils/errors\");_errors=function _errors(){return data;};return data;}function _warnings(){var data=require(\"../utils/warnings\");_warnings=function _warnings(){return data;};return data;}function Entitlements(){var data=_interopRequireWildcard(require(\"./Entitlements\"));Entitlements=function Entitlements(){return data;};return data;}function _getRequireWildcardCache(nodeInterop){if(typeof WeakMap!==\"function\")return null;var cacheBabelInterop=new WeakMap();var cacheNodeInterop=new WeakMap();return(_getRequireWildcardCache=function _getRequireWildcardCache(nodeInterop){return nodeInterop?cacheNodeInterop:cacheBabelInterop;})(nodeInterop);}function _interopRequireWildcard(obj,nodeInterop){if(!nodeInterop&&obj&&obj.__esModule){return obj;}if(obj===null||typeof obj!==\"object\"&&typeof obj!==\"function\"){return{\"default\":obj};}var cache=_getRequireWildcardCache(nodeInterop);if(cache&&cache.has(obj)){return cache.get(obj);}var newObj={};var hasPropertyDescriptor=Object.defineProperty&&Object.getOwnPropertyDescriptor;for(var key in obj){if(key!==\"default\"&&Object.prototype.hasOwnProperty.call(obj,key)){var desc=hasPropertyDescriptor?Object.getOwnPropertyDescriptor(obj,key):null;if(desc&&(desc.get||desc.set)){Object.defineProperty(newObj,key,desc);}else{newObj[key]=obj[key];}}}newObj[\"default\"]=obj;if(cache){cache.set(obj,newObj);}return newObj;}var ignoredPaths=['**/@(Carthage|Pods|vendor|node_modules)/**'];function getAppDelegateHeaderFilePath(projectRoot){var _ref=(0,_glob().sync)('ios/*/AppDelegate.h',{absolute:true,cwd:projectRoot,ignore:ignoredPaths}),_ref2=_toArray(_ref),using=_ref2[0],extra=_ref2.slice(1);if(!using){throw new(_errors().UnexpectedError)(\"Could not locate a valid AppDelegate header at root: \\\"\".concat(projectRoot,\"\\\"\"));}if(extra.length){warnMultipleFiles({tag:'app-delegate-header',fileName:'AppDelegate',projectRoot:projectRoot,using:using,extra:extra});}return using;}function getAppDelegateFilePath(projectRoot){var _ref3=(0,_glob().sync)('ios/*/AppDelegate.@(m|mm|swift)',{absolute:true,cwd:projectRoot,ignore:ignoredPaths}),_ref4=_toArray(_ref3),using=_ref4[0],extra=_ref4.slice(1);if(!using){throw new(_errors().UnexpectedError)(\"Could not locate a valid AppDelegate at root: \\\"\".concat(projectRoot,\"\\\"\"));}if(extra.length){warnMultipleFiles({tag:'app-delegate',fileName:'AppDelegate',projectRoot:projectRoot,using:using,extra:extra});}return using;}function getAppDelegateObjcHeaderFilePath(projectRoot){var _ref5=(0,_glob().sync)('ios/*/AppDelegate.h',{absolute:true,cwd:projectRoot,ignore:ignoredPaths}),_ref6=_toArray(_ref5),using=_ref6[0],extra=_ref6.slice(1);if(!using){throw new(_errors().UnexpectedError)(\"Could not locate a valid AppDelegate.h at root: \\\"\".concat(projectRoot,\"\\\"\"));}if(extra.length){warnMultipleFiles({tag:'app-delegate-objc-header',fileName:'AppDelegate.h',projectRoot:projectRoot,using:using,extra:extra});}return using;}function getLanguage(filePath){var extension=path().extname(filePath);switch(extension){case'.mm':return'objcpp';case'.m':case'.h':return'objc';case'.swift':return'swift';default:throw new(_errors().UnexpectedError)(\"Unexpected iOS file extension: \".concat(extension));}}function getFileInfo(filePath){return{path:path().normalize(filePath),contents:(0,_fs().readFileSync)(filePath,'utf8'),language:getLanguage(filePath)};}function getAppDelegate(projectRoot){var filePath=getAppDelegateFilePath(projectRoot);return getFileInfo(filePath);}function getSourceRoot(projectRoot){var appDelegate=getAppDelegate(projectRoot);return path().dirname(appDelegate.path);}function findSchemePaths(projectRoot){return(0,_glob().sync)('ios/*.xcodeproj/xcshareddata/xcschemes/*.xcscheme',{absolute:true,cwd:projectRoot,ignore:ignoredPaths});}function findSchemeNames(projectRoot){var schemePaths=findSchemePaths(projectRoot);return schemePaths.map(function(schemePath){return path().parse(schemePath).name;});}function getAllXcodeProjectPaths(projectRoot){var iosFolder='ios';var pbxprojPaths=(0,_glob().sync)('ios/**/*.xcodeproj',{cwd:projectRoot,ignore:ignoredPaths}).filter(function(project){return!/test|example|sample/i.test(project)||path().dirname(project)===iosFolder;})// sort alphabetically to ensure this works the same across different devices (Fail in CI (linux) without this)\n.sort().sort(function(a,b){var isAInIos=path().dirname(a)===iosFolder;var isBInIos=path().dirname(b)===iosFolder;// preserve previous sort order\nif(isAInIos&&isBInIos||!isAInIos&&!isBInIos){return 0;}return isAInIos?-1:1;});if(!pbxprojPaths.length){throw new(_errors().UnexpectedError)(\"Failed to locate the ios/*.xcodeproj files relative to path \\\"\".concat(projectRoot,\"\\\".\"));}return pbxprojPaths.map(function(value){return path().join(projectRoot,value);});}/**\n * Get the pbxproj for the given path\n */function getXcodeProjectPath(projectRoot){var _getAllXcodeProjectPa=getAllXcodeProjectPaths(projectRoot),_getAllXcodeProjectPa2=_toArray(_getAllXcodeProjectPa),using=_getAllXcodeProjectPa2[0],extra=_getAllXcodeProjectPa2.slice(1);if(extra.length){warnMultipleFiles({tag:'xcodeproj',fileName:'*.xcodeproj',projectRoot:projectRoot,using:using,extra:extra});}return using;}function getAllPBXProjectPaths(projectRoot){var projectPaths=getAllXcodeProjectPaths(projectRoot);var paths=projectPaths.map(function(value){return path().join(value,'project.pbxproj');}).filter(function(value){return(0,_fs().existsSync)(value);});if(!paths.length){throw new(_errors().UnexpectedError)(\"Failed to locate the ios/*.xcodeproj/project.pbxproj files relative to path \\\"\".concat(projectRoot,\"\\\".\"));}return paths;}function getPBXProjectPath(projectRoot){var _getAllPBXProjectPath=getAllPBXProjectPaths(projectRoot),_getAllPBXProjectPath2=_toArray(_getAllPBXProjectPath),using=_getAllPBXProjectPath2[0],extra=_getAllPBXProjectPath2.slice(1);if(extra.length){warnMultipleFiles({tag:'project-pbxproj',fileName:'project.pbxproj',projectRoot:projectRoot,using:using,extra:extra});}return using;}function getAllInfoPlistPaths(projectRoot){var paths=(0,_glob().sync)('ios/*/Info.plist',{absolute:true,cwd:projectRoot,ignore:ignoredPaths}).sort(// longer name means more suffixes, we want the shortest possible one to be first.\nfunction(a,b){return a.length-b.length;});if(!paths.length){throw new(_errors().UnexpectedError)(\"Failed to locate Info.plist files relative to path \\\"\".concat(projectRoot,\"\\\".\"));}return paths;}function getInfoPlistPath(projectRoot){var _getAllInfoPlistPaths=getAllInfoPlistPaths(projectRoot),_getAllInfoPlistPaths2=_toArray(_getAllInfoPlistPaths),using=_getAllInfoPlistPaths2[0],extra=_getAllInfoPlistPaths2.slice(1);if(extra.length){warnMultipleFiles({tag:'info-plist',fileName:'Info.plist',projectRoot:projectRoot,using:using,extra:extra});}return using;}function getAllEntitlementsPaths(projectRoot){var paths=(0,_glob().sync)('ios/*/*.entitlements',{absolute:true,cwd:projectRoot,ignore:ignoredPaths});return paths;}/**\n * @deprecated: use Entitlements.getEntitlementsPath instead\n */function getEntitlementsPath(projectRoot){return Entitlements().getEntitlementsPath(projectRoot);}function getSupportingPath(projectRoot){return path().resolve(projectRoot,'ios',path().basename(getSourceRoot(projectRoot)),'Supporting');}function getExpoPlistPath(projectRoot){var supportingPath=getSupportingPath(projectRoot);return path().join(supportingPath,'Expo.plist');}function warnMultipleFiles(_ref7){var tag=_ref7.tag,fileName=_ref7.fileName,projectRoot=_ref7.projectRoot,using=_ref7.using,extra=_ref7.extra;var usingPath=projectRoot?path().relative(projectRoot,using):using;var extraPaths=projectRoot?extra.map(function(v){return path().relative(projectRoot,v);}):extra;(0,_warnings().addWarningIOS)(\"paths-\".concat(tag),\"Found multiple \".concat(fileName,\" file paths, using \\\"\").concat(usingPath,\"\\\". Ignored paths: \").concat(JSON.stringify(extraPaths)));}","map":{"version":3,"sources":["../../src/ios/Paths.ts"],"names":["ignoredPaths","absolute","cwd","ignore","UnexpectedError","extra","warnMultipleFiles","tag","fileName","projectRoot","using","extension","path","contents","language","getLanguage","filePath","getAppDelegateFilePath","getFileInfo","appDelegate","getAppDelegate","schemePaths","findSchemePaths","schemePath","iosFolder","pbxprojPaths","project","isAInIos","isBInIos","value","getAllXcodeProjectPaths","projectPaths","paths","getAllPBXProjectPaths","a","b","getAllInfoPlistPaths","Entitlements","getSourceRoot","supportingPath","getSupportingPath","usingPath","extraPaths","v","JSON"],"mappings":"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","sourcesContent":["import { existsSync, readFileSync } from 'fs';\nimport { sync as globSync } from 'glob';\nimport * as path from 'path';\n\nimport { UnexpectedError } from '../utils/errors';\nimport { addWarningIOS } from '../utils/warnings';\nimport * as Entitlements from './Entitlements';\n\nconst ignoredPaths = ['**/@(Carthage|Pods|vendor|node_modules)/**'];\n\ninterface ProjectFile<L extends string = string> {\n  path: string;\n  language: L;\n  contents: string;\n}\n\ntype AppleLanguage = 'objc' | 'objcpp' | 'swift';\n\nexport type AppDelegateProjectFile = ProjectFile<AppleLanguage>;\n\nexport function getAppDelegateHeaderFilePath(projectRoot: string): string {\n  const [using, ...extra] = globSync('ios/*/AppDelegate.h', {\n    absolute: true,\n    cwd: projectRoot,\n    ignore: ignoredPaths,\n  });\n\n  if (!using) {\n    throw new UnexpectedError(\n      `Could not locate a valid AppDelegate header at root: \"${projectRoot}\"`\n    );\n  }\n\n  if (extra.length) {\n    warnMultipleFiles({\n      tag: 'app-delegate-header',\n      fileName: 'AppDelegate',\n      projectRoot,\n      using,\n      extra,\n    });\n  }\n\n  return using;\n}\n\nexport function getAppDelegateFilePath(projectRoot: string): string {\n  const [using, ...extra] = globSync('ios/*/AppDelegate.@(m|mm|swift)', {\n    absolute: true,\n    cwd: projectRoot,\n    ignore: ignoredPaths,\n  });\n\n  if (!using) {\n    throw new UnexpectedError(`Could not locate a valid AppDelegate at root: \"${projectRoot}\"`);\n  }\n\n  if (extra.length) {\n    warnMultipleFiles({\n      tag: 'app-delegate',\n      fileName: 'AppDelegate',\n      projectRoot,\n      using,\n      extra,\n    });\n  }\n\n  return using;\n}\n\nexport function getAppDelegateObjcHeaderFilePath(projectRoot: string): string {\n  const [using, ...extra] = globSync('ios/*/AppDelegate.h', {\n    absolute: true,\n    cwd: projectRoot,\n    ignore: ignoredPaths,\n  });\n\n  if (!using) {\n    throw new UnexpectedError(`Could not locate a valid AppDelegate.h at root: \"${projectRoot}\"`);\n  }\n\n  if (extra.length) {\n    warnMultipleFiles({\n      tag: 'app-delegate-objc-header',\n      fileName: 'AppDelegate.h',\n      projectRoot,\n      using,\n      extra,\n    });\n  }\n\n  return using;\n}\n\nfunction getLanguage(filePath: string): AppleLanguage {\n  const extension = path.extname(filePath);\n  switch (extension) {\n    case '.mm':\n      return 'objcpp';\n    case '.m':\n    case '.h':\n      return 'objc';\n    case '.swift':\n      return 'swift';\n    default:\n      throw new UnexpectedError(`Unexpected iOS file extension: ${extension}`);\n  }\n}\n\nexport function getFileInfo(filePath: string) {\n  return {\n    path: path.normalize(filePath),\n    contents: readFileSync(filePath, 'utf8'),\n    language: getLanguage(filePath),\n  };\n}\n\nexport function getAppDelegate(projectRoot: string): AppDelegateProjectFile {\n  const filePath = getAppDelegateFilePath(projectRoot);\n  return getFileInfo(filePath);\n}\n\nexport function getSourceRoot(projectRoot: string): string {\n  const appDelegate = getAppDelegate(projectRoot);\n  return path.dirname(appDelegate.path);\n}\n\nexport function findSchemePaths(projectRoot: string): string[] {\n  return globSync('ios/*.xcodeproj/xcshareddata/xcschemes/*.xcscheme', {\n    absolute: true,\n    cwd: projectRoot,\n    ignore: ignoredPaths,\n  });\n}\n\nexport function findSchemeNames(projectRoot: string): string[] {\n  const schemePaths = findSchemePaths(projectRoot);\n  return schemePaths.map(schemePath => path.parse(schemePath).name);\n}\n\nexport function getAllXcodeProjectPaths(projectRoot: string): string[] {\n  const iosFolder = 'ios';\n  const pbxprojPaths = globSync('ios/**/*.xcodeproj', { cwd: projectRoot, ignore: ignoredPaths })\n    .filter(project => !/test|example|sample/i.test(project) || path.dirname(project) === iosFolder)\n    // sort alphabetically to ensure this works the same across different devices (Fail in CI (linux) without this)\n    .sort()\n    .sort((a, b) => {\n      const isAInIos = path.dirname(a) === iosFolder;\n      const isBInIos = path.dirname(b) === iosFolder;\n      // preserve previous sort order\n      if ((isAInIos && isBInIos) || (!isAInIos && !isBInIos)) {\n        return 0;\n      }\n      return isAInIos ? -1 : 1;\n    });\n\n  if (!pbxprojPaths.length) {\n    throw new UnexpectedError(\n      `Failed to locate the ios/*.xcodeproj files relative to path \"${projectRoot}\".`\n    );\n  }\n  return pbxprojPaths.map(value => path.join(projectRoot, value));\n}\n\n/**\n * Get the pbxproj for the given path\n */\nexport function getXcodeProjectPath(projectRoot: string): string {\n  const [using, ...extra] = getAllXcodeProjectPaths(projectRoot);\n\n  if (extra.length) {\n    warnMultipleFiles({\n      tag: 'xcodeproj',\n      fileName: '*.xcodeproj',\n      projectRoot,\n      using,\n      extra,\n    });\n  }\n\n  return using;\n}\n\nexport function getAllPBXProjectPaths(projectRoot: string): string[] {\n  const projectPaths = getAllXcodeProjectPaths(projectRoot);\n  const paths = projectPaths\n    .map(value => path.join(value, 'project.pbxproj'))\n    .filter(value => existsSync(value));\n\n  if (!paths.length) {\n    throw new UnexpectedError(\n      `Failed to locate the ios/*.xcodeproj/project.pbxproj files relative to path \"${projectRoot}\".`\n    );\n  }\n  return paths;\n}\n\nexport function getPBXProjectPath(projectRoot: string): string {\n  const [using, ...extra] = getAllPBXProjectPaths(projectRoot);\n\n  if (extra.length) {\n    warnMultipleFiles({\n      tag: 'project-pbxproj',\n      fileName: 'project.pbxproj',\n      projectRoot,\n      using,\n      extra,\n    });\n  }\n\n  return using;\n}\n\nexport function getAllInfoPlistPaths(projectRoot: string): string[] {\n  const paths = globSync('ios/*/Info.plist', {\n    absolute: true,\n    cwd: projectRoot,\n    ignore: ignoredPaths,\n  }).sort(\n    // longer name means more suffixes, we want the shortest possible one to be first.\n    (a, b) => a.length - b.length\n  );\n\n  if (!paths.length) {\n    throw new UnexpectedError(\n      `Failed to locate Info.plist files relative to path \"${projectRoot}\".`\n    );\n  }\n  return paths;\n}\n\nexport function getInfoPlistPath(projectRoot: string): string {\n  const [using, ...extra] = getAllInfoPlistPaths(projectRoot);\n\n  if (extra.length) {\n    warnMultipleFiles({\n      tag: 'info-plist',\n      fileName: 'Info.plist',\n      projectRoot,\n      using,\n      extra,\n    });\n  }\n\n  return using;\n}\n\nexport function getAllEntitlementsPaths(projectRoot: string): string[] {\n  const paths = globSync('ios/*/*.entitlements', {\n    absolute: true,\n    cwd: projectRoot,\n    ignore: ignoredPaths,\n  });\n  return paths;\n}\n\n/**\n * @deprecated: use Entitlements.getEntitlementsPath instead\n */\nexport function getEntitlementsPath(projectRoot: string): string | null {\n  return Entitlements.getEntitlementsPath(projectRoot);\n}\n\nexport function getSupportingPath(projectRoot: string): string {\n  return path.resolve(projectRoot, 'ios', path.basename(getSourceRoot(projectRoot)), 'Supporting');\n}\n\nexport function getExpoPlistPath(projectRoot: string): string {\n  const supportingPath = getSupportingPath(projectRoot);\n  return path.join(supportingPath, 'Expo.plist');\n}\n\nfunction warnMultipleFiles({\n  tag,\n  fileName,\n  projectRoot,\n  using,\n  extra,\n}: {\n  tag: string;\n  fileName: string;\n  projectRoot?: string;\n  using: string;\n  extra: string[];\n}) {\n  const usingPath = projectRoot ? path.relative(projectRoot, using) : using;\n  const extraPaths = projectRoot ? extra.map(v => path.relative(projectRoot, v)) : extra;\n  addWarningIOS(\n    `paths-${tag}`,\n    `Found multiple ${fileName} file paths, using \"${usingPath}\". Ignored paths: ${JSON.stringify(\n      extraPaths\n    )}`\n  );\n}\n"]},"metadata":{},"sourceType":"script"}