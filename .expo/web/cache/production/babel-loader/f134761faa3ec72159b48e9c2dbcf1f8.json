{"ast":null,"code":"\"use strict\";Object.defineProperty(exports,\"__esModule\",{value:true});exports.SCREEN_ORIENTATION_ATTRIBUTE=void 0;exports.getOrientation=getOrientation;exports.setAndroidOrientation=setAndroidOrientation;exports.withOrientation=void 0;function _androidPlugins(){var data=require(\"../plugins/android-plugins\");_androidPlugins=function _androidPlugins(){return data;};return data;}function _Manifest(){var data=require(\"./Manifest\");_Manifest=function _Manifest(){return data;};return data;}var SCREEN_ORIENTATION_ATTRIBUTE='android:screenOrientation';exports.SCREEN_ORIENTATION_ATTRIBUTE=SCREEN_ORIENTATION_ATTRIBUTE;var withOrientation=(0,_androidPlugins().createAndroidManifestPlugin)(setAndroidOrientation,'withOrientation');exports.withOrientation=withOrientation;function getOrientation(config){return typeof config.orientation==='string'?config.orientation:null;}function setAndroidOrientation(config,androidManifest){var orientation=getOrientation(config);// TODO: Remove this if we decide to remove any orientation configuration when not specified\nif(!orientation){return androidManifest;}var mainActivity=(0,_Manifest().getMainActivityOrThrow)(androidManifest);mainActivity.$[SCREEN_ORIENTATION_ATTRIBUTE]=orientation!=='default'?orientation:'unspecified';return androidManifest;}","map":{"version":3,"sources":["../../src/android/Orientation.ts"],"names":["SCREEN_ORIENTATION_ATTRIBUTE","withOrientation","config","orientation","getOrientation","mainActivity"],"mappings":"2OAEA,QAAA,CAAA,eAAA,EAAA,CAAA,GAAA,CAAA,IAAA,CAAA,OAAA,CAAA,4BAAA,CAAA,CAAA,eAAA,CAAA,0BAAA,CAAA,MAAA,CAAA,IAAA,CAAA,CAAA,CAAA,MAAA,CAAA,IAAA,CAAA,CACA,QAAA,CAAA,SAAA,EAAA,CAAA,GAAA,CAAA,IAAA,CAAA,OAAA,CAAA,YAAA,CAAA,CAAA,SAAA,CAAA,oBAAA,CAAA,MAAA,CAAA,IAAA,CAAA,CAAA,CAAA,MAAA,CAAA,IAAA,CAAA,CAEO,GAAMA,CAAAA,4BAA4B,CAAlC,2BAAA,C,kEAEA,GAAMC,CAAAA,eAAe,CAAG,CAAA,EAAA,eAAA,GAAA,2BAAA,EAAA,qBAAA,CAAxB,iBAAwB,CAAxB,C,wCAKA,QAAA,CAAA,cAAA,CAAA,MAAA,CAAiE,CACtE,MAAO,OAAOC,CAAAA,MAAM,CAAb,WAAA,GAAA,QAAA,CAAyCA,MAAM,CAA/C,WAAA,CAAP,IAAA,CACD,CAEM,QAAA,CAAA,qBAAA,CAAA,MAAA,CAAA,eAAA,CAGL,CACA,GAAMC,CAAAA,WAAW,CAAGC,cAAc,CADlC,MACkC,CAAlC,CACA;AACA,GAAI,CAAJ,WAAA,CAAkB,CAChB,MAAA,CAAA,eAAA,CACD,CAED,GAAMC,CAAAA,YAAY,CAAG,CAAA,EAAA,SAAA,GAAA,sBAAA,EAArB,eAAqB,CAArB,CAEAA,YAAY,CAAZA,CAAAA,CAAAA,4BAAAA,EACEF,WAAW,GAAXA,SAAAA,CAAAA,WAAAA,CADFE,aAAAA,CAGA,MAAA,CAAA,eAAA,CACD","sourcesContent":["import { ExpoConfig } from '@expo/config-types';\n\nimport { createAndroidManifestPlugin } from '../plugins/android-plugins';\nimport { AndroidManifest, getMainActivityOrThrow } from './Manifest';\n\nexport const SCREEN_ORIENTATION_ATTRIBUTE = 'android:screenOrientation';\n\nexport const withOrientation = createAndroidManifestPlugin(\n  setAndroidOrientation,\n  'withOrientation'\n);\n\nexport function getOrientation(config: Pick<ExpoConfig, 'orientation'>) {\n  return typeof config.orientation === 'string' ? config.orientation : null;\n}\n\nexport function setAndroidOrientation(\n  config: Pick<ExpoConfig, 'orientation'>,\n  androidManifest: AndroidManifest\n) {\n  const orientation = getOrientation(config);\n  // TODO: Remove this if we decide to remove any orientation configuration when not specified\n  if (!orientation) {\n    return androidManifest;\n  }\n\n  const mainActivity = getMainActivityOrThrow(androidManifest);\n\n  mainActivity.$[SCREEN_ORIENTATION_ATTRIBUTE] =\n    orientation !== 'default' ? orientation : 'unspecified';\n\n  return androidManifest;\n}\n"]},"metadata":{},"sourceType":"script"}