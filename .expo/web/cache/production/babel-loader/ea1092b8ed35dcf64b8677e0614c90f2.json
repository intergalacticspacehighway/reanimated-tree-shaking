{"ast":null,"code":"\"use strict\";var _toConsumableArray=require(\"/Users/fernandorojo/Developer/messing/rea-tree/node_modules/next/dist/compiled/@babel/runtime/helpers/toConsumableArray\");var _defineProperty=require(\"/Users/fernandorojo/Developer/messing/rea-tree/node_modules/next/dist/compiled/@babel/runtime/helpers/defineProperty\");function ownKeys(object,enumerableOnly){var keys=Object.keys(object);if(Object.getOwnPropertySymbols){var symbols=Object.getOwnPropertySymbols(object);enumerableOnly&&(symbols=symbols.filter(function(sym){return Object.getOwnPropertyDescriptor(object,sym).enumerable;})),keys.push.apply(keys,symbols);}return keys;}function _objectSpread(target){for(var i=1;i<arguments.length;i++){var source=null!=arguments[i]?arguments[i]:{};i%2?ownKeys(Object(source),!0).forEach(function(key){_defineProperty(target,key,source[key]);}):Object.getOwnPropertyDescriptors?Object.defineProperties(target,Object.getOwnPropertyDescriptors(source)):ownKeys(Object(source)).forEach(function(key){Object.defineProperty(target,key,Object.getOwnPropertyDescriptor(source,key));});}return target;}var __importDefault=this&&this.__importDefault||function(mod){return mod&&mod.__esModule?mod:{\"default\":mod};};Object.defineProperty(exports,\"__esModule\",{value:true});exports.ignoreExternalModules=void 0;var paths_1=require(\"@expo/config/paths\");var path_1=__importDefault(require(\"path\"));var env_1=require(\"../env\");var loaders_1=require(\"../loaders\");// importing from \"../plugins\" will cause dependency issues with next-adapter\n// other plugins import webpack4 packages which error on load when next-adapter uses webpack5\nvar ExpoDefinePlugin_1=__importDefault(require(\"../plugins/ExpoDefinePlugin\"));var utils_1=require(\"../utils\");var withAlias_1=__importDefault(require(\"./withAlias\"));var withEntry_1=__importDefault(require(\"./withEntry\"));/**\n * Wrap your existing webpack config with support for Unimodules.\n * ex: Storybook `({ config }) => withUnimodules(config)`\n *\n * @param webpackConfig Optional existing Webpack config to modify.\n * @param env Optional Environment options for configuring what features the Webpack config supports.\n * @param argv\n * @category addons\n */function withUnimodules(){var webpackConfig=arguments.length>0&&arguments[0]!==undefined?arguments[0]:{};var env=arguments.length>1&&arguments[1]!==undefined?arguments[1]:{};var argv=arguments.length>2&&arguments[2]!==undefined?arguments[2]:{};var _a;// @ts-ignore: We should attempt to use the project root that the other config is already using (used for Gatsby support).\nenv.projectRoot=env.projectRoot||webpackConfig.context||(0,paths_1.getPossibleProjectRoot)();// Add native react aliases\nwebpackConfig=(0,withAlias_1[\"default\"])(webpackConfig,(0,env_1.getAliases)(env.projectRoot));var isWebpack5=argv.webpack5;if(!webpackConfig.module)webpackConfig.module={rules:[]};else if(!webpackConfig.module.rules)webpackConfig.module=_objectSpread(_objectSpread({},webpackConfig.module),{},{rules:[]});if(!webpackConfig.plugins)webpackConfig.plugins=[];if(!webpackConfig.resolve)webpackConfig.resolve={};if(!webpackConfig.output)webpackConfig.output={};// Attempt to use the input webpack config mode\nenv.mode=env.mode||webpackConfig.mode;var environment=(0,env_1.validateEnvironment)(env);var supportsFontLoading=argv.supportsFontLoading;// If the args don't specify this then we'll check if the input already supports font loading.\nif(typeof supportsFontLoading==='undefined'){var supportedFonts=['ttf','otf','woff','woff2','eot'];var testFontFileNames=supportedFonts.map(function(ext){return path_1[\"default\"].resolve(environment.projectRoot,\"cool-font.\".concat(ext));});if((0,utils_1.rulesMatchAnyFiles)(webpackConfig,testFontFileNames)){supportsFontLoading=false;}}var _env$platform=env.platform,platform=_env$platform===void 0?'web':_env$platform;var config=argv.expoConfig||(0,env_1.getConfig)(environment);var mode=(0,env_1.getMode)(env);var locations=env.locations||(0,env_1.getPaths)(environment.projectRoot,environment);var _ref=config.web||{},_ref$build=_ref.build,buildConfig=_ref$build===void 0?{}:_ref$build;var _buildConfig$babel=buildConfig.babel,babelAppConfig=_buildConfig$babel===void 0?{}:_buildConfig$babel;var babelProjectRoot=babelAppConfig.root||locations.root;var babelLoader=(0,loaders_1.createBabelLoader)({projectRoot:locations.root,mode:mode,platform:platform,babelProjectRoot:babelProjectRoot,verbose:babelAppConfig.verbose,include:[].concat(_toConsumableArray(babelAppConfig.include||[]),_toConsumableArray(((_a=env.babel)===null||_a===void 0?void 0:_a.dangerouslyAddModulePathsToTranspile)||[])),use:babelAppConfig.use});function reuseOrCreatePublicPaths(){if(webpackConfig.output&&webpackConfig.output.publicPath){var _publicPath=webpackConfig.output.publicPath;return{publicPath:_publicPath,publicUrl:_publicPath.endsWith('/')?_publicPath.slice(0,-1):_publicPath};}return(0,env_1.getPublicPaths)(environment);}var _reuseOrCreatePublicP=reuseOrCreatePublicPaths(),publicPath=_reuseOrCreatePublicP.publicPath,publicUrl=_reuseOrCreatePublicP.publicUrl;webpackConfig.mode=mode;webpackConfig.output=_objectSpread(_objectSpread({},webpackConfig.output),{},{publicPath:publicPath});webpackConfig.plugins.push(// Used for surfacing information related to constants\nnew ExpoDefinePlugin_1[\"default\"]({mode:mode,publicUrl:publicUrl,config:config}));var rules=[].concat(_toConsumableArray(webpackConfig.module.rules),[// TODO: Bacon: Auto remove this loader\n{test:/\\.html$/,use:['html-loader'],exclude:locations.template.folder},// Process application code with Babel.\nbabelLoader,supportsFontLoading&&(0,loaders_1.createFontLoader)(locations.root,locations.includeModule)]).filter(Boolean);webpackConfig.module=_objectSpread(_objectSpread({},webpackConfig.module),{},{rules:rules});webpackConfig.resolve=_objectSpread(_objectSpread({},webpackConfig.resolve),{},{symlinks:false,// Support platform extensions like .web.js\nextensions:(0,env_1.getModuleFileExtensions)('web')});// Transpile and remove expo modules from Next.js externals.\nvar includeFunc=babelLoader.include;webpackConfig=ignoreExternalModules(webpackConfig,includeFunc,isWebpack5);// Add a loose requirement on the ResizeObserver polyfill if it's installed...\nwebpackConfig=(0,withEntry_1[\"default\"])(webpackConfig,env,{entryPath:'resize-observer-polyfill/dist/ResizeObserver.global'});return webpackConfig;}exports[\"default\"]=withUnimodules;/**\n * We have to transpile these modules and make them not external too.\n * We have to do this because next.js by default externals all `node_modules`'s js files.\n *\n * Reference:\n * - https://github.com/martpie/next-transpile-modules/blob/77450a0c0307e4b650d7acfbc18641ef9465f0da/index.js#L48-L62\n * - https://github.com/zeit/next.js/blob/0b496a45e85f3c9aa3cf2e77eef10888be5884fc/packages/next/build/webpack-config.ts#L185-L258\n * - `include` function is from https://github.com/expo/expo-cli/blob/3933f3d6ba65bffec2738ece71b62f2c284bd6e4/packages/webpack-config/webpack/loaders/createBabelLoaderAsync.js#L76-L96\n *\n * @param webpackConfig Config to be modified\n * @param shouldIncludeModule A method that returns a boolean when the input module should be transpiled and externed.\n */function ignoreExternalModules(webpackConfig,shouldIncludeModule,isWebpack5){if(!webpackConfig.externals){return webpackConfig;}if(!Array.isArray(webpackConfig.externals)){webpackConfig.externals=[webpackConfig.externals];}webpackConfig.externals=webpackConfig.externals.map(function(external){if(typeof external!=='function'){return external;}if(isWebpack5){return function(ctx){var relPath=path_1[\"default\"].join('node_modules',ctx.request);return shouldIncludeModule(relPath)?undefined:external(ctx);};}return function(ctx,req,cb){var relPath=path_1[\"default\"].join('node_modules',req);return shouldIncludeModule(relPath)?cb():external(ctx,req,cb);};});return webpackConfig;}exports.ignoreExternalModules=ignoreExternalModules;","map":{"version":3,"sources":["../../src/addons/withUnimodules.ts"],"names":[],"mappings":"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","sourcesContent":["import { getPossibleProjectRoot } from '@expo/config/paths';\nimport path from 'path';\nimport { ExternalsFunctionElement } from 'webpack';\n\nimport {\n  getAliases,\n  getConfig,\n  getMode,\n  getModuleFileExtensions,\n  getPaths,\n  getPublicPaths,\n  validateEnvironment,\n} from '../env';\nimport { createBabelLoader, createFontLoader } from '../loaders';\n// importing from \"../plugins\" will cause dependency issues with next-adapter\n// other plugins import webpack4 packages which error on load when next-adapter uses webpack5\nimport ExpoDefinePlugin from '../plugins/ExpoDefinePlugin';\nimport { AnyConfiguration, Arguments, Environment, InputEnvironment } from '../types';\nimport { rulesMatchAnyFiles } from '../utils';\nimport withAlias from './withAlias';\nimport withEntry from './withEntry';\n\n/**\n * Wrap your existing webpack config with support for Unimodules.\n * ex: Storybook `({ config }) => withUnimodules(config)`\n *\n * @param webpackConfig Optional existing Webpack config to modify.\n * @param env Optional Environment options for configuring what features the Webpack config supports.\n * @param argv\n * @category addons\n */\nexport default function withUnimodules(\n  webpackConfig: AnyConfiguration = {},\n  env: InputEnvironment = {},\n  argv: Arguments = {}\n): AnyConfiguration {\n  // @ts-ignore: We should attempt to use the project root that the other config is already using (used for Gatsby support).\n  env.projectRoot = env.projectRoot || webpackConfig.context || getPossibleProjectRoot();\n\n  // Add native react aliases\n  webpackConfig = withAlias(webpackConfig, getAliases(env.projectRoot));\n\n  const isWebpack5 = argv.webpack5;\n\n  if (!webpackConfig.module) webpackConfig.module = { rules: [] };\n  else if (!webpackConfig.module.rules)\n    webpackConfig.module = { ...webpackConfig.module, rules: [] };\n\n  if (!webpackConfig.plugins) webpackConfig.plugins = [];\n  if (!webpackConfig.resolve) webpackConfig.resolve = {};\n  if (!webpackConfig.output) webpackConfig.output = {};\n\n  // Attempt to use the input webpack config mode\n  env.mode = env.mode || webpackConfig.mode;\n\n  const environment: Environment = validateEnvironment(env);\n\n  let { supportsFontLoading } = argv;\n\n  // If the args don't specify this then we'll check if the input already supports font loading.\n  if (typeof supportsFontLoading === 'undefined') {\n    const supportedFonts = ['ttf', 'otf', 'woff', 'woff2', 'eot'];\n    const testFontFileNames = supportedFonts.map(ext =>\n      path.resolve(environment.projectRoot, `cool-font.${ext}`)\n    );\n    if (rulesMatchAnyFiles(webpackConfig, testFontFileNames)) {\n      supportsFontLoading = false;\n    }\n  }\n\n  const { platform = 'web' } = env;\n\n  const config = argv.expoConfig || getConfig(environment);\n\n  const mode = getMode(env);\n  const locations = env.locations || getPaths(environment.projectRoot, environment);\n\n  const { build: buildConfig = {} } = config.web || {};\n  const { babel: babelAppConfig = {} } = buildConfig;\n\n  const babelProjectRoot = babelAppConfig.root || locations.root;\n\n  const babelLoader = createBabelLoader({\n    projectRoot: locations.root,\n    mode,\n    platform,\n    babelProjectRoot,\n    verbose: babelAppConfig.verbose,\n    include: [\n      ...(babelAppConfig.include || []),\n      ...(env.babel?.dangerouslyAddModulePathsToTranspile || []),\n    ],\n    use: babelAppConfig.use,\n  });\n\n  function reuseOrCreatePublicPaths() {\n    if (webpackConfig.output && webpackConfig.output.publicPath) {\n      const publicPath = webpackConfig.output.publicPath;\n      return {\n        publicPath,\n        publicUrl: publicPath.endsWith('/') ? publicPath.slice(0, -1) : publicPath,\n      };\n    }\n    return getPublicPaths(environment);\n  }\n\n  const { publicPath, publicUrl } = reuseOrCreatePublicPaths();\n\n  webpackConfig.mode = mode;\n\n  webpackConfig.output = {\n    // This is the URL that app is served from.\n    // We use \"/\" in development.\n    ...webpackConfig.output,\n    publicPath,\n  };\n\n  webpackConfig.plugins.push(\n    // Used for surfacing information related to constants\n    new ExpoDefinePlugin({\n      mode,\n      publicUrl,\n      config,\n    })\n  );\n\n  const rules = [\n    ...webpackConfig.module.rules,\n\n    // TODO: Bacon: Auto remove this loader\n    {\n      test: /\\.html$/,\n      use: ['html-loader'],\n      exclude: locations.template.folder,\n    },\n    // Process application code with Babel.\n    babelLoader,\n\n    supportsFontLoading && createFontLoader(locations.root, locations.includeModule),\n  ].filter(Boolean);\n\n  webpackConfig.module = {\n    ...webpackConfig.module,\n    rules,\n  };\n\n  webpackConfig.resolve = {\n    ...webpackConfig.resolve,\n    symlinks: false,\n    // Support platform extensions like .web.js\n    extensions: getModuleFileExtensions('web'),\n  };\n\n  // Transpile and remove expo modules from Next.js externals.\n  const includeFunc = babelLoader.include as (path: string) => boolean;\n  webpackConfig = ignoreExternalModules(webpackConfig, includeFunc, isWebpack5);\n\n  // Add a loose requirement on the ResizeObserver polyfill if it's installed...\n  webpackConfig = withEntry(webpackConfig, env, {\n    entryPath: 'resize-observer-polyfill/dist/ResizeObserver.global',\n  });\n\n  return webpackConfig;\n}\n\n/**\n * We have to transpile these modules and make them not external too.\n * We have to do this because next.js by default externals all `node_modules`'s js files.\n *\n * Reference:\n * - https://github.com/martpie/next-transpile-modules/blob/77450a0c0307e4b650d7acfbc18641ef9465f0da/index.js#L48-L62\n * - https://github.com/zeit/next.js/blob/0b496a45e85f3c9aa3cf2e77eef10888be5884fc/packages/next/build/webpack-config.ts#L185-L258\n * - `include` function is from https://github.com/expo/expo-cli/blob/3933f3d6ba65bffec2738ece71b62f2c284bd6e4/packages/webpack-config/webpack/loaders/createBabelLoaderAsync.js#L76-L96\n *\n * @param webpackConfig Config to be modified\n * @param shouldIncludeModule A method that returns a boolean when the input module should be transpiled and externed.\n */\nexport function ignoreExternalModules(\n  webpackConfig: AnyConfiguration,\n  shouldIncludeModule: (path: string) => boolean,\n  isWebpack5: boolean\n): AnyConfiguration {\n  if (!webpackConfig.externals) {\n    return webpackConfig;\n  }\n  if (!Array.isArray(webpackConfig.externals)) {\n    webpackConfig.externals = [webpackConfig.externals];\n  }\n  webpackConfig.externals = webpackConfig.externals.map(external => {\n    if (typeof external !== 'function') {\n      return external;\n    }\n\n    if (isWebpack5) {\n      return (ctx => {\n        const relPath = path.join('node_modules', ctx.request);\n        return shouldIncludeModule(relPath) ? undefined : (external as (content: any) => any)(ctx);\n      }) as ExternalsFunctionElement;\n    }\n\n    return ((ctx, req, cb) => {\n      const relPath = path.join('node_modules', req);\n      return shouldIncludeModule(relPath) ? cb() : external(ctx, req, cb);\n    }) as ExternalsFunctionElement;\n  });\n\n  return webpackConfig;\n}\n"],"sourceRoot":""},"metadata":{},"sourceType":"script"}