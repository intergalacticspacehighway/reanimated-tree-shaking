{"ast":null,"code":"import Platform from\"react-native-web/dist/cjs/exports/Platform\";import{add,cond,concat,lessThan,multiply,round,sub,proc}from'../base';import AnimatedNode from'../core/AnimatedNode';var procColor=proc(function(r,g,b,a){var color=add(multiply(a,1<<24),multiply(round(r),1<<16),multiply(round(g),1<<8),round(b));if(Platform.OS==='android'){// on Android color is represented as signed 32 bit int\nreturn cond(lessThan(color,1<<31>>>0),color,sub(color,Math.pow(2,32)));}return color;});export default function color(r,g,b){var a=arguments.length>3&&arguments[3]!==undefined?arguments[3]:1;if(Platform.OS==='web'){// doesn't support bit shifting\nreturn concat('rgba(',r,',',g,',',b,',',a,')');}if(a instanceof AnimatedNode){a=round(multiply(a,255));}else{a=Math.round(a*255);}return procColor(r,g,b,a);}","map":{"version":3,"names":["Platform","add","cond","concat","lessThan","multiply","round","sub","proc","AnimatedNode","procColor","r","g","b","a","color","OS","Math","pow","arguments","length","undefined"],"sources":["/Users/fernandorojo/Developer/messing/rea-tree/node_modules/react-native-reanimated/lib/reanimated1/derived/color.js"],"sourcesContent":["import Platform from \"react-native-web/dist/cjs/exports/Platform\";\nimport { add, cond, concat, lessThan, multiply, round, sub, proc } from '../base';\nimport AnimatedNode from '../core/AnimatedNode';\nvar procColor = proc(function (r, g, b, a) {\n  var color = add(multiply(a, 1 << 24), multiply(round(r), 1 << 16), multiply(round(g), 1 << 8), round(b));\n\n  if (Platform.OS === 'android') {\n    // on Android color is represented as signed 32 bit int\n    return cond(lessThan(color, 1 << 31 >>> 0), color, sub(color, Math.pow(2, 32)));\n  }\n\n  return color;\n});\nexport default function color(r, g, b) {\n  var a = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : 1;\n\n  if (Platform.OS === 'web') {\n    // doesn't support bit shifting\n    return concat('rgba(', r, ',', g, ',', b, ',', a, ')');\n  }\n\n  if (a instanceof AnimatedNode) {\n    a = round(multiply(a, 255));\n  } else {\n    a = Math.round(a * 255);\n  }\n\n  return procColor(r, g, b, a);\n}"],"mappings":"AAAA,MAAOA,CAAAA,QAAP,KAAqB,4CAArB,CACA,OAASC,GAAT,CAAcC,IAAd,CAAoBC,MAApB,CAA4BC,QAA5B,CAAsCC,QAAtC,CAAgDC,KAAhD,CAAuDC,GAAvD,CAA4DC,IAA5D,KAAwE,SAAxE,CACA,MAAOC,CAAAA,YAAP,KAAyB,sBAAzB,CACA,GAAIC,CAAAA,SAAS,CAAGF,IAAI,CAAC,SAAUG,CAAV,CAAaC,CAAb,CAAgBC,CAAhB,CAAmBC,CAAnB,CAAsB,CACzC,GAAIC,CAAAA,KAAK,CAAGd,GAAG,CAACI,QAAQ,CAACS,CAAD,CAAI,GAAK,EAAT,CAAT,CAAuBT,QAAQ,CAACC,KAAK,CAACK,CAAD,CAAN,CAAW,GAAK,EAAhB,CAA/B,CAAoDN,QAAQ,CAACC,KAAK,CAACM,CAAD,CAAN,CAAW,GAAK,CAAhB,CAA5D,CAAgFN,KAAK,CAACO,CAAD,CAArF,CAAf,CAEA,GAAIb,QAAQ,CAACgB,EAAT,GAAgB,SAApB,CAA+B,CAC7B;AACA,MAAOd,CAAAA,IAAI,CAACE,QAAQ,CAACW,KAAD,CAAQ,GAAK,EAAL,GAAY,CAApB,CAAT,CAAiCA,KAAjC,CAAwCR,GAAG,CAACQ,KAAD,CAAQE,IAAI,CAACC,GAAL,CAAS,CAAT,CAAY,EAAZ,CAAR,CAA3C,CAAX,CACD,CAED,MAAOH,CAAAA,KAAP,CACD,CATmB,CAApB,CAUA,cAAe,SAASA,CAAAA,KAAT,CAAeJ,CAAf,CAAkBC,CAAlB,CAAqBC,CAArB,CAAwB,CACrC,GAAIC,CAAAA,CAAC,CAAGK,SAAS,CAACC,MAAV,CAAmB,CAAnB,EAAwBD,SAAS,CAAC,CAAD,CAAT,GAAiBE,SAAzC,CAAqDF,SAAS,CAAC,CAAD,CAA9D,CAAoE,CAA5E,CAEA,GAAInB,QAAQ,CAACgB,EAAT,GAAgB,KAApB,CAA2B,CACzB;AACA,MAAOb,CAAAA,MAAM,CAAC,OAAD,CAAUQ,CAAV,CAAa,GAAb,CAAkBC,CAAlB,CAAqB,GAArB,CAA0BC,CAA1B,CAA6B,GAA7B,CAAkCC,CAAlC,CAAqC,GAArC,CAAb,CACD,CAED,GAAIA,CAAC,WAAYL,CAAAA,YAAjB,CAA+B,CAC7BK,CAAC,CAAGR,KAAK,CAACD,QAAQ,CAACS,CAAD,CAAI,GAAJ,CAAT,CAAT,CACD,CAFD,IAEO,CACLA,CAAC,CAAGG,IAAI,CAACX,KAAL,CAAWQ,CAAC,CAAG,GAAf,CAAJ,CACD,CAED,MAAOJ,CAAAA,SAAS,CAACC,CAAD,CAAIC,CAAJ,CAAOC,CAAP,CAAUC,CAAV,CAAhB,CACD"},"metadata":{},"sourceType":"module"}