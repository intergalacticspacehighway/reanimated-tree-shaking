{"ast":null,"code":"var _classCallCheck=require(\"/Users/fernandorojo/Developer/messing/rea-tree/node_modules/next/dist/compiled/@babel/runtime/helpers/classCallCheck\");var _createClass=require(\"/Users/fernandorojo/Developer/messing/rea-tree/node_modules/next/dist/compiled/@babel/runtime/helpers/createClass\");// hoisted class for cyclic dependency\nvar Range=/*#__PURE__*/function(){\"use strict\";function Range(range,options){var _this=this;_classCallCheck(this,Range);if(!options||typeof options!=='object'){options={loose:!!options,includePrerelease:false};}if(range instanceof Range){if(range.loose===!!options.loose&&range.includePrerelease===!!options.includePrerelease){return range;}else{return new Range(range.raw,options);}}if(range instanceof Comparator){// just put it in the set and return\nthis.raw=range.value;this.set=[[range]];this.format();return this;}this.options=options;this.loose=!!options.loose;this.includePrerelease=!!options.includePrerelease;// First, split based on boolean or ||\nthis.raw=range;this.set=range.split(/\\s*\\|\\|\\s*/)// map the range to a 2d array of comparators\n.map(function(range){return _this.parseRange(range.trim());})// throw out any comparator lists that are empty\n// this generally means that it was not a valid range, which is allowed\n// in loose mode, but will still throw if the WHOLE range is invalid.\n.filter(function(c){return c.length;});if(!this.set.length){throw new TypeError(\"Invalid SemVer Range: \".concat(range));}this.format();}_createClass(Range,[{key:\"format\",value:function format(){this.range=this.set.map(function(comps){return comps.join(' ').trim();}).join('||').trim();return this.range;}},{key:\"toString\",value:function toString(){return this.range;}},{key:\"parseRange\",value:function parseRange(range){var _this2=this;var loose=this.options.loose;range=range.trim();// `1.2.3 - 1.2.4` => `>=1.2.3 <=1.2.4`\nvar hr=loose?re[t.HYPHENRANGELOOSE]:re[t.HYPHENRANGE];range=range.replace(hr,hyphenReplace(this.options.includePrerelease));debug('hyphen replace',range);// `> 1.2.3 < 1.2.5` => `>1.2.3 <1.2.5`\nrange=range.replace(re[t.COMPARATORTRIM],comparatorTrimReplace);debug('comparator trim',range,re[t.COMPARATORTRIM]);// `~ 1.2.3` => `~1.2.3`\nrange=range.replace(re[t.TILDETRIM],tildeTrimReplace);// `^ 1.2.3` => `^1.2.3`\nrange=range.replace(re[t.CARETTRIM],caretTrimReplace);// normalize spaces\nrange=range.split(/\\s+/).join(' ');// At this point, the range is completely trimmed and\n// ready to be split into comparators.\nvar compRe=loose?re[t.COMPARATORLOOSE]:re[t.COMPARATOR];return range.split(' ').map(function(comp){return parseComparator(comp,_this2.options);}).join(' ').split(/\\s+/).map(function(comp){return replaceGTE0(comp,_this2.options);})// in loose mode, throw out any that are not valid comparators\n.filter(this.options.loose?function(comp){return!!comp.match(compRe);}:function(){return true;}).map(function(comp){return new Comparator(comp,_this2.options);});}},{key:\"intersects\",value:function intersects(range,options){if(!(range instanceof Range)){throw new TypeError('a Range is required');}return this.set.some(function(thisComparators){return isSatisfiable(thisComparators,options)&&range.set.some(function(rangeComparators){return isSatisfiable(rangeComparators,options)&&thisComparators.every(function(thisComparator){return rangeComparators.every(function(rangeComparator){return thisComparator.intersects(rangeComparator,options);});});});});}// if ANY of the sets match ALL of its comparators, then pass\n},{key:\"test\",value:function test(version){if(!version){return false;}if(typeof version==='string'){try{version=new SemVer(version,this.options);}catch(er){return false;}}for(var i=0;i<this.set.length;i++){if(testSet(this.set[i],version,this.options)){return true;}}return false;}}]);return Range;}();module.exports=Range;var Comparator=require('./comparator');var debug=require('../internal/debug');var SemVer=require('./semver');var _require=require('../internal/re'),re=_require.re,t=_require.t,comparatorTrimReplace=_require.comparatorTrimReplace,tildeTrimReplace=_require.tildeTrimReplace,caretTrimReplace=_require.caretTrimReplace;// take a set of comparators and determine whether there\n// exists a version which can satisfy it\nvar isSatisfiable=function isSatisfiable(comparators,options){var result=true;var remainingComparators=comparators.slice();var testComparator=remainingComparators.pop();while(result&&remainingComparators.length){result=remainingComparators.every(function(otherComparator){return testComparator.intersects(otherComparator,options);});testComparator=remainingComparators.pop();}return result;};// comprised of xranges, tildes, stars, and gtlt's at this point.\n// already replaced the hyphen ranges\n// turn into a set of JUST comparators.\nvar parseComparator=function parseComparator(comp,options){debug('comp',comp,options);comp=replaceCarets(comp,options);debug('caret',comp);comp=replaceTildes(comp,options);debug('tildes',comp);comp=replaceXRanges(comp,options);debug('xrange',comp);comp=replaceStars(comp,options);debug('stars',comp);return comp;};var isX=function isX(id){return!id||id.toLowerCase()==='x'||id==='*';};// ~, ~> --> * (any, kinda silly)\n// ~2, ~2.x, ~2.x.x, ~>2, ~>2.x ~>2.x.x --> >=2.0.0 <3.0.0-0\n// ~2.0, ~2.0.x, ~>2.0, ~>2.0.x --> >=2.0.0 <2.1.0-0\n// ~1.2, ~1.2.x, ~>1.2, ~>1.2.x --> >=1.2.0 <1.3.0-0\n// ~1.2.3, ~>1.2.3 --> >=1.2.3 <1.3.0-0\n// ~1.2.0, ~>1.2.0 --> >=1.2.0 <1.3.0-0\nvar replaceTildes=function replaceTildes(comp,options){return comp.trim().split(/\\s+/).map(function(comp){return replaceTilde(comp,options);}).join(' ');};var replaceTilde=function replaceTilde(comp,options){var r=options.loose?re[t.TILDELOOSE]:re[t.TILDE];return comp.replace(r,function(_,M,m,p,pr){debug('tilde',comp,_,M,m,p,pr);var ret;if(isX(M)){ret='';}else if(isX(m)){ret=\">=\".concat(M,\".0.0 <\").concat(+M+1,\".0.0-0\");}else if(isX(p)){// ~1.2 == >=1.2.0 <1.3.0-0\nret=\">=\".concat(M,\".\").concat(m,\".0 <\").concat(M,\".\").concat(+m+1,\".0-0\");}else if(pr){debug('replaceTilde pr',pr);ret=\">=\".concat(M,\".\").concat(m,\".\").concat(p,\"-\").concat(pr,\" <\").concat(M,\".\").concat(+m+1,\".0-0\");}else{// ~1.2.3 == >=1.2.3 <1.3.0-0\nret=\">=\".concat(M,\".\").concat(m,\".\").concat(p,\" <\").concat(M,\".\").concat(+m+1,\".0-0\");}debug('tilde return',ret);return ret;});};// ^ --> * (any, kinda silly)\n// ^2, ^2.x, ^2.x.x --> >=2.0.0 <3.0.0-0\n// ^2.0, ^2.0.x --> >=2.0.0 <3.0.0-0\n// ^1.2, ^1.2.x --> >=1.2.0 <2.0.0-0\n// ^1.2.3 --> >=1.2.3 <2.0.0-0\n// ^1.2.0 --> >=1.2.0 <2.0.0-0\nvar replaceCarets=function replaceCarets(comp,options){return comp.trim().split(/\\s+/).map(function(comp){return replaceCaret(comp,options);}).join(' ');};var replaceCaret=function replaceCaret(comp,options){debug('caret',comp,options);var r=options.loose?re[t.CARETLOOSE]:re[t.CARET];var z=options.includePrerelease?'-0':'';return comp.replace(r,function(_,M,m,p,pr){debug('caret',comp,_,M,m,p,pr);var ret;if(isX(M)){ret='';}else if(isX(m)){ret=\">=\".concat(M,\".0.0\").concat(z,\" <\").concat(+M+1,\".0.0-0\");}else if(isX(p)){if(M==='0'){ret=\">=\".concat(M,\".\").concat(m,\".0\").concat(z,\" <\").concat(M,\".\").concat(+m+1,\".0-0\");}else{ret=\">=\".concat(M,\".\").concat(m,\".0\").concat(z,\" <\").concat(+M+1,\".0.0-0\");}}else if(pr){debug('replaceCaret pr',pr);if(M==='0'){if(m==='0'){ret=\">=\".concat(M,\".\").concat(m,\".\").concat(p,\"-\").concat(pr,\" <\").concat(M,\".\").concat(m,\".\").concat(+p+1,\"-0\");}else{ret=\">=\".concat(M,\".\").concat(m,\".\").concat(p,\"-\").concat(pr,\" <\").concat(M,\".\").concat(+m+1,\".0-0\");}}else{ret=\">=\".concat(M,\".\").concat(m,\".\").concat(p,\"-\").concat(pr,\" <\").concat(+M+1,\".0.0-0\");}}else{debug('no pr');if(M==='0'){if(m==='0'){ret=\">=\".concat(M,\".\").concat(m,\".\").concat(p).concat(z,\" <\").concat(M,\".\").concat(m,\".\").concat(+p+1,\"-0\");}else{ret=\">=\".concat(M,\".\").concat(m,\".\").concat(p).concat(z,\" <\").concat(M,\".\").concat(+m+1,\".0-0\");}}else{ret=\">=\".concat(M,\".\").concat(m,\".\").concat(p,\" <\").concat(+M+1,\".0.0-0\");}}debug('caret return',ret);return ret;});};var replaceXRanges=function replaceXRanges(comp,options){debug('replaceXRanges',comp,options);return comp.split(/\\s+/).map(function(comp){return replaceXRange(comp,options);}).join(' ');};var replaceXRange=function replaceXRange(comp,options){comp=comp.trim();var r=options.loose?re[t.XRANGELOOSE]:re[t.XRANGE];return comp.replace(r,function(ret,gtlt,M,m,p,pr){debug('xRange',comp,ret,gtlt,M,m,p,pr);var xM=isX(M);var xm=xM||isX(m);var xp=xm||isX(p);var anyX=xp;if(gtlt==='='&&anyX){gtlt='';}// if we're including prereleases in the match, then we need\n// to fix this to -0, the lowest possible prerelease value\npr=options.includePrerelease?'-0':'';if(xM){if(gtlt==='>'||gtlt==='<'){// nothing is allowed\nret='<0.0.0-0';}else{// nothing is forbidden\nret='*';}}else if(gtlt&&anyX){// we know patch is an x, because we have any x at all.\n// replace X with 0\nif(xm){m=0;}p=0;if(gtlt==='>'){// >1 => >=2.0.0\n// >1.2 => >=1.3.0\ngtlt='>=';if(xm){M=+M+1;m=0;p=0;}else{m=+m+1;p=0;}}else if(gtlt==='<='){// <=0.7.x is actually <0.8.0, since any 0.7.x should\n// pass.  Similarly, <=7.x is actually <8.0.0, etc.\ngtlt='<';if(xm){M=+M+1;}else{m=+m+1;}}if(gtlt==='<')pr='-0';ret=\"\".concat(gtlt+M,\".\").concat(m,\".\").concat(p).concat(pr);}else if(xm){ret=\">=\".concat(M,\".0.0\").concat(pr,\" <\").concat(+M+1,\".0.0-0\");}else if(xp){ret=\">=\".concat(M,\".\").concat(m,\".0\").concat(pr,\" <\").concat(M,\".\").concat(+m+1,\".0-0\");}debug('xRange return',ret);return ret;});};// Because * is AND-ed with everything else in the comparator,\n// and '' means \"any version\", just remove the *s entirely.\nvar replaceStars=function replaceStars(comp,options){debug('replaceStars',comp,options);// Looseness is ignored here.  star is always as loose as it gets!\nreturn comp.trim().replace(re[t.STAR],'');};var replaceGTE0=function replaceGTE0(comp,options){debug('replaceGTE0',comp,options);return comp.trim().replace(re[options.includePrerelease?t.GTE0PRE:t.GTE0],'');};// This function is passed to string.replace(re[t.HYPHENRANGE])\n// M, m, patch, prerelease, build\n// 1.2 - 3.4.5 => >=1.2.0 <=3.4.5\n// 1.2.3 - 3.4 => >=1.2.0 <3.5.0-0 Any 3.4.x will do\n// 1.2 - 3.4 => >=1.2.0 <3.5.0-0\nvar hyphenReplace=function hyphenReplace(incPr){return function($0,from,fM,fm,fp,fpr,fb,to,tM,tm,tp,tpr,tb){if(isX(fM)){from='';}else if(isX(fm)){from=\">=\".concat(fM,\".0.0\").concat(incPr?'-0':'');}else if(isX(fp)){from=\">=\".concat(fM,\".\").concat(fm,\".0\").concat(incPr?'-0':'');}else if(fpr){from=\">=\".concat(from);}else{from=\">=\".concat(from).concat(incPr?'-0':'');}if(isX(tM)){to='';}else if(isX(tm)){to=\"<\".concat(+tM+1,\".0.0-0\");}else if(isX(tp)){to=\"<\".concat(tM,\".\").concat(+tm+1,\".0-0\");}else if(tpr){to=\"<=\".concat(tM,\".\").concat(tm,\".\").concat(tp,\"-\").concat(tpr);}else if(incPr){to=\"<\".concat(tM,\".\").concat(tm,\".\").concat(+tp+1,\"-0\");}else{to=\"<=\".concat(to);}return\"\".concat(from,\" \").concat(to).trim();};};var testSet=function testSet(set,version,options){for(var i=0;i<set.length;i++){if(!set[i].test(version)){return false;}}if(version.prerelease.length&&!options.includePrerelease){// Find the set of versions that are allowed to have prereleases\n// For example, ^1.2.3-pr.1 desugars to >=1.2.3-pr.1 <2.0.0\n// That should allow `1.2.3-pr.2` to pass.\n// However, `1.2.4-alpha.notready` should NOT be allowed,\n// even though it's within the range set by the comparators.\nfor(var _i=0;_i<set.length;_i++){debug(set[_i].semver);if(set[_i].semver===Comparator.ANY){continue;}if(set[_i].semver.prerelease.length>0){var allowed=set[_i].semver;if(allowed.major===version.major&&allowed.minor===version.minor&&allowed.patch===version.patch){return true;}}}// Version has a -pre, but it's not one of the ones we like.\nreturn false;}return true;};","map":{"version":3,"names":["Range","range","options","loose","includePrerelease","raw","Comparator","value","set","format","split","map","parseRange","trim","filter","c","length","TypeError","comps","join","hr","re","t","HYPHENRANGELOOSE","HYPHENRANGE","replace","hyphenReplace","debug","COMPARATORTRIM","comparatorTrimReplace","TILDETRIM","tildeTrimReplace","CARETTRIM","caretTrimReplace","compRe","COMPARATORLOOSE","COMPARATOR","comp","parseComparator","replaceGTE0","match","some","thisComparators","isSatisfiable","rangeComparators","every","thisComparator","rangeComparator","intersects","version","SemVer","er","i","testSet","module","exports","require","comparators","result","remainingComparators","slice","testComparator","pop","otherComparator","replaceCarets","replaceTildes","replaceXRanges","replaceStars","isX","id","toLowerCase","replaceTilde","r","TILDELOOSE","TILDE","_","M","m","p","pr","ret","replaceCaret","CARETLOOSE","CARET","z","replaceXRange","XRANGELOOSE","XRANGE","gtlt","xM","xm","xp","anyX","STAR","GTE0PRE","GTE0","incPr","$0","from","fM","fm","fp","fpr","fb","to","tM","tm","tp","tpr","tb","test","prerelease","semver","ANY","allowed","major","minor","patch"],"sources":["/Users/fernandorojo/Developer/messing/rea-tree/node_modules/@expo/image-utils/node_modules/semver/classes/range.js"],"sourcesContent":["// hoisted class for cyclic dependency\nclass Range {\n  constructor (range, options) {\n    if (!options || typeof options !== 'object') {\n      options = {\n        loose: !!options,\n        includePrerelease: false\n      }\n    }\n\n    if (range instanceof Range) {\n      if (\n        range.loose === !!options.loose &&\n        range.includePrerelease === !!options.includePrerelease\n      ) {\n        return range\n      } else {\n        return new Range(range.raw, options)\n      }\n    }\n\n    if (range instanceof Comparator) {\n      // just put it in the set and return\n      this.raw = range.value\n      this.set = [[range]]\n      this.format()\n      return this\n    }\n\n    this.options = options\n    this.loose = !!options.loose\n    this.includePrerelease = !!options.includePrerelease\n\n    // First, split based on boolean or ||\n    this.raw = range\n    this.set = range\n      .split(/\\s*\\|\\|\\s*/)\n      // map the range to a 2d array of comparators\n      .map(range => this.parseRange(range.trim()))\n      // throw out any comparator lists that are empty\n      // this generally means that it was not a valid range, which is allowed\n      // in loose mode, but will still throw if the WHOLE range is invalid.\n      .filter(c => c.length)\n\n    if (!this.set.length) {\n      throw new TypeError(`Invalid SemVer Range: ${range}`)\n    }\n\n    this.format()\n  }\n\n  format () {\n    this.range = this.set\n      .map((comps) => {\n        return comps.join(' ').trim()\n      })\n      .join('||')\n      .trim()\n    return this.range\n  }\n\n  toString () {\n    return this.range\n  }\n\n  parseRange (range) {\n    const loose = this.options.loose\n    range = range.trim()\n    // `1.2.3 - 1.2.4` => `>=1.2.3 <=1.2.4`\n    const hr = loose ? re[t.HYPHENRANGELOOSE] : re[t.HYPHENRANGE]\n    range = range.replace(hr, hyphenReplace(this.options.includePrerelease))\n    debug('hyphen replace', range)\n    // `> 1.2.3 < 1.2.5` => `>1.2.3 <1.2.5`\n    range = range.replace(re[t.COMPARATORTRIM], comparatorTrimReplace)\n    debug('comparator trim', range, re[t.COMPARATORTRIM])\n\n    // `~ 1.2.3` => `~1.2.3`\n    range = range.replace(re[t.TILDETRIM], tildeTrimReplace)\n\n    // `^ 1.2.3` => `^1.2.3`\n    range = range.replace(re[t.CARETTRIM], caretTrimReplace)\n\n    // normalize spaces\n    range = range.split(/\\s+/).join(' ')\n\n    // At this point, the range is completely trimmed and\n    // ready to be split into comparators.\n\n    const compRe = loose ? re[t.COMPARATORLOOSE] : re[t.COMPARATOR]\n    return range\n      .split(' ')\n      .map(comp => parseComparator(comp, this.options))\n      .join(' ')\n      .split(/\\s+/)\n      .map(comp => replaceGTE0(comp, this.options))\n      // in loose mode, throw out any that are not valid comparators\n      .filter(this.options.loose ? comp => !!comp.match(compRe) : () => true)\n      .map(comp => new Comparator(comp, this.options))\n  }\n\n  intersects (range, options) {\n    if (!(range instanceof Range)) {\n      throw new TypeError('a Range is required')\n    }\n\n    return this.set.some((thisComparators) => {\n      return (\n        isSatisfiable(thisComparators, options) &&\n        range.set.some((rangeComparators) => {\n          return (\n            isSatisfiable(rangeComparators, options) &&\n            thisComparators.every((thisComparator) => {\n              return rangeComparators.every((rangeComparator) => {\n                return thisComparator.intersects(rangeComparator, options)\n              })\n            })\n          )\n        })\n      )\n    })\n  }\n\n  // if ANY of the sets match ALL of its comparators, then pass\n  test (version) {\n    if (!version) {\n      return false\n    }\n\n    if (typeof version === 'string') {\n      try {\n        version = new SemVer(version, this.options)\n      } catch (er) {\n        return false\n      }\n    }\n\n    for (let i = 0; i < this.set.length; i++) {\n      if (testSet(this.set[i], version, this.options)) {\n        return true\n      }\n    }\n    return false\n  }\n}\nmodule.exports = Range\n\nconst Comparator = require('./comparator')\nconst debug = require('../internal/debug')\nconst SemVer = require('./semver')\nconst {\n  re,\n  t,\n  comparatorTrimReplace,\n  tildeTrimReplace,\n  caretTrimReplace\n} = require('../internal/re')\n\n// take a set of comparators and determine whether there\n// exists a version which can satisfy it\nconst isSatisfiable = (comparators, options) => {\n  let result = true\n  const remainingComparators = comparators.slice()\n  let testComparator = remainingComparators.pop()\n\n  while (result && remainingComparators.length) {\n    result = remainingComparators.every((otherComparator) => {\n      return testComparator.intersects(otherComparator, options)\n    })\n\n    testComparator = remainingComparators.pop()\n  }\n\n  return result\n}\n\n// comprised of xranges, tildes, stars, and gtlt's at this point.\n// already replaced the hyphen ranges\n// turn into a set of JUST comparators.\nconst parseComparator = (comp, options) => {\n  debug('comp', comp, options)\n  comp = replaceCarets(comp, options)\n  debug('caret', comp)\n  comp = replaceTildes(comp, options)\n  debug('tildes', comp)\n  comp = replaceXRanges(comp, options)\n  debug('xrange', comp)\n  comp = replaceStars(comp, options)\n  debug('stars', comp)\n  return comp\n}\n\nconst isX = id => !id || id.toLowerCase() === 'x' || id === '*'\n\n// ~, ~> --> * (any, kinda silly)\n// ~2, ~2.x, ~2.x.x, ~>2, ~>2.x ~>2.x.x --> >=2.0.0 <3.0.0-0\n// ~2.0, ~2.0.x, ~>2.0, ~>2.0.x --> >=2.0.0 <2.1.0-0\n// ~1.2, ~1.2.x, ~>1.2, ~>1.2.x --> >=1.2.0 <1.3.0-0\n// ~1.2.3, ~>1.2.3 --> >=1.2.3 <1.3.0-0\n// ~1.2.0, ~>1.2.0 --> >=1.2.0 <1.3.0-0\nconst replaceTildes = (comp, options) =>\n  comp.trim().split(/\\s+/).map((comp) => {\n    return replaceTilde(comp, options)\n  }).join(' ')\n\nconst replaceTilde = (comp, options) => {\n  const r = options.loose ? re[t.TILDELOOSE] : re[t.TILDE]\n  return comp.replace(r, (_, M, m, p, pr) => {\n    debug('tilde', comp, _, M, m, p, pr)\n    let ret\n\n    if (isX(M)) {\n      ret = ''\n    } else if (isX(m)) {\n      ret = `>=${M}.0.0 <${+M + 1}.0.0-0`\n    } else if (isX(p)) {\n      // ~1.2 == >=1.2.0 <1.3.0-0\n      ret = `>=${M}.${m}.0 <${M}.${+m + 1}.0-0`\n    } else if (pr) {\n      debug('replaceTilde pr', pr)\n      ret = `>=${M}.${m}.${p}-${pr\n      } <${M}.${+m + 1}.0-0`\n    } else {\n      // ~1.2.3 == >=1.2.3 <1.3.0-0\n      ret = `>=${M}.${m}.${p\n      } <${M}.${+m + 1}.0-0`\n    }\n\n    debug('tilde return', ret)\n    return ret\n  })\n}\n\n// ^ --> * (any, kinda silly)\n// ^2, ^2.x, ^2.x.x --> >=2.0.0 <3.0.0-0\n// ^2.0, ^2.0.x --> >=2.0.0 <3.0.0-0\n// ^1.2, ^1.2.x --> >=1.2.0 <2.0.0-0\n// ^1.2.3 --> >=1.2.3 <2.0.0-0\n// ^1.2.0 --> >=1.2.0 <2.0.0-0\nconst replaceCarets = (comp, options) =>\n  comp.trim().split(/\\s+/).map((comp) => {\n    return replaceCaret(comp, options)\n  }).join(' ')\n\nconst replaceCaret = (comp, options) => {\n  debug('caret', comp, options)\n  const r = options.loose ? re[t.CARETLOOSE] : re[t.CARET]\n  const z = options.includePrerelease ? '-0' : ''\n  return comp.replace(r, (_, M, m, p, pr) => {\n    debug('caret', comp, _, M, m, p, pr)\n    let ret\n\n    if (isX(M)) {\n      ret = ''\n    } else if (isX(m)) {\n      ret = `>=${M}.0.0${z} <${+M + 1}.0.0-0`\n    } else if (isX(p)) {\n      if (M === '0') {\n        ret = `>=${M}.${m}.0${z} <${M}.${+m + 1}.0-0`\n      } else {\n        ret = `>=${M}.${m}.0${z} <${+M + 1}.0.0-0`\n      }\n    } else if (pr) {\n      debug('replaceCaret pr', pr)\n      if (M === '0') {\n        if (m === '0') {\n          ret = `>=${M}.${m}.${p}-${pr\n          } <${M}.${m}.${+p + 1}-0`\n        } else {\n          ret = `>=${M}.${m}.${p}-${pr\n          } <${M}.${+m + 1}.0-0`\n        }\n      } else {\n        ret = `>=${M}.${m}.${p}-${pr\n        } <${+M + 1}.0.0-0`\n      }\n    } else {\n      debug('no pr')\n      if (M === '0') {\n        if (m === '0') {\n          ret = `>=${M}.${m}.${p\n          }${z} <${M}.${m}.${+p + 1}-0`\n        } else {\n          ret = `>=${M}.${m}.${p\n          }${z} <${M}.${+m + 1}.0-0`\n        }\n      } else {\n        ret = `>=${M}.${m}.${p\n        } <${+M + 1}.0.0-0`\n      }\n    }\n\n    debug('caret return', ret)\n    return ret\n  })\n}\n\nconst replaceXRanges = (comp, options) => {\n  debug('replaceXRanges', comp, options)\n  return comp.split(/\\s+/).map((comp) => {\n    return replaceXRange(comp, options)\n  }).join(' ')\n}\n\nconst replaceXRange = (comp, options) => {\n  comp = comp.trim()\n  const r = options.loose ? re[t.XRANGELOOSE] : re[t.XRANGE]\n  return comp.replace(r, (ret, gtlt, M, m, p, pr) => {\n    debug('xRange', comp, ret, gtlt, M, m, p, pr)\n    const xM = isX(M)\n    const xm = xM || isX(m)\n    const xp = xm || isX(p)\n    const anyX = xp\n\n    if (gtlt === '=' && anyX) {\n      gtlt = ''\n    }\n\n    // if we're including prereleases in the match, then we need\n    // to fix this to -0, the lowest possible prerelease value\n    pr = options.includePrerelease ? '-0' : ''\n\n    if (xM) {\n      if (gtlt === '>' || gtlt === '<') {\n        // nothing is allowed\n        ret = '<0.0.0-0'\n      } else {\n        // nothing is forbidden\n        ret = '*'\n      }\n    } else if (gtlt && anyX) {\n      // we know patch is an x, because we have any x at all.\n      // replace X with 0\n      if (xm) {\n        m = 0\n      }\n      p = 0\n\n      if (gtlt === '>') {\n        // >1 => >=2.0.0\n        // >1.2 => >=1.3.0\n        gtlt = '>='\n        if (xm) {\n          M = +M + 1\n          m = 0\n          p = 0\n        } else {\n          m = +m + 1\n          p = 0\n        }\n      } else if (gtlt === '<=') {\n        // <=0.7.x is actually <0.8.0, since any 0.7.x should\n        // pass.  Similarly, <=7.x is actually <8.0.0, etc.\n        gtlt = '<'\n        if (xm) {\n          M = +M + 1\n        } else {\n          m = +m + 1\n        }\n      }\n\n      if (gtlt === '<')\n        pr = '-0'\n\n      ret = `${gtlt + M}.${m}.${p}${pr}`\n    } else if (xm) {\n      ret = `>=${M}.0.0${pr} <${+M + 1}.0.0-0`\n    } else if (xp) {\n      ret = `>=${M}.${m}.0${pr\n      } <${M}.${+m + 1}.0-0`\n    }\n\n    debug('xRange return', ret)\n\n    return ret\n  })\n}\n\n// Because * is AND-ed with everything else in the comparator,\n// and '' means \"any version\", just remove the *s entirely.\nconst replaceStars = (comp, options) => {\n  debug('replaceStars', comp, options)\n  // Looseness is ignored here.  star is always as loose as it gets!\n  return comp.trim().replace(re[t.STAR], '')\n}\n\nconst replaceGTE0 = (comp, options) => {\n  debug('replaceGTE0', comp, options)\n  return comp.trim()\n    .replace(re[options.includePrerelease ? t.GTE0PRE : t.GTE0], '')\n}\n\n// This function is passed to string.replace(re[t.HYPHENRANGE])\n// M, m, patch, prerelease, build\n// 1.2 - 3.4.5 => >=1.2.0 <=3.4.5\n// 1.2.3 - 3.4 => >=1.2.0 <3.5.0-0 Any 3.4.x will do\n// 1.2 - 3.4 => >=1.2.0 <3.5.0-0\nconst hyphenReplace = incPr => ($0,\n  from, fM, fm, fp, fpr, fb,\n  to, tM, tm, tp, tpr, tb) => {\n  if (isX(fM)) {\n    from = ''\n  } else if (isX(fm)) {\n    from = `>=${fM}.0.0${incPr ? '-0' : ''}`\n  } else if (isX(fp)) {\n    from = `>=${fM}.${fm}.0${incPr ? '-0' : ''}`\n  } else if (fpr) {\n    from = `>=${from}`\n  } else {\n    from = `>=${from}${incPr ? '-0' : ''}`\n  }\n\n  if (isX(tM)) {\n    to = ''\n  } else if (isX(tm)) {\n    to = `<${+tM + 1}.0.0-0`\n  } else if (isX(tp)) {\n    to = `<${tM}.${+tm + 1}.0-0`\n  } else if (tpr) {\n    to = `<=${tM}.${tm}.${tp}-${tpr}`\n  } else if (incPr) {\n    to = `<${tM}.${tm}.${+tp + 1}-0`\n  } else {\n    to = `<=${to}`\n  }\n\n  return (`${from} ${to}`).trim()\n}\n\nconst testSet = (set, version, options) => {\n  for (let i = 0; i < set.length; i++) {\n    if (!set[i].test(version)) {\n      return false\n    }\n  }\n\n  if (version.prerelease.length && !options.includePrerelease) {\n    // Find the set of versions that are allowed to have prereleases\n    // For example, ^1.2.3-pr.1 desugars to >=1.2.3-pr.1 <2.0.0\n    // That should allow `1.2.3-pr.2` to pass.\n    // However, `1.2.4-alpha.notready` should NOT be allowed,\n    // even though it's within the range set by the comparators.\n    for (let i = 0; i < set.length; i++) {\n      debug(set[i].semver)\n      if (set[i].semver === Comparator.ANY) {\n        continue\n      }\n\n      if (set[i].semver.prerelease.length > 0) {\n        const allowed = set[i].semver\n        if (allowed.major === version.major &&\n            allowed.minor === version.minor &&\n            allowed.patch === version.patch) {\n          return true\n        }\n      }\n    }\n\n    // Version has a -pre, but it's not one of the ones we like.\n    return false\n  }\n\n  return true\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"script"}