{"ast":null,"code":"\"use strict\";Object.defineProperty(exports,\"__esModule\",{value:true});exports.getInfoPlistPathFromPbxproj=getInfoPlistPathFromPbxproj;function _Target(){var data=require(\"../Target\");_Target=function _Target(){return data;};return data;}function _Xcodeproj(){var data=require(\"./Xcodeproj\");_Xcodeproj=function _Xcodeproj(){return data;};return data;}/**\n * Find the Info.plist path linked to a specific build configuration.\n *\n * @param projectRoot\n * @param param1\n * @returns\n */function getInfoPlistPathFromPbxproj(projectRootOrProject){var _ref=arguments.length>1&&arguments[1]!==undefined?arguments[1]:{},targetName=_ref.targetName,_ref$buildConfigurati=_ref.buildConfiguration,buildConfiguration=_ref$buildConfigurati===void 0?'Release':_ref$buildConfigurati;var project=(0,_Xcodeproj().resolvePathOrProject)(projectRootOrProject);if(!project){return null;}var xcBuildConfiguration=(0,_Target().getXCBuildConfigurationFromPbxproj)(project,{targetName:targetName,buildConfiguration:buildConfiguration});if(!xcBuildConfiguration){return null;}// The `INFOPLIST_FILE` is relative to the project folder, ex: app/Info.plist.\nreturn sanitizeInfoPlistBuildProperty(xcBuildConfiguration.buildSettings.INFOPLIST_FILE);}function sanitizeInfoPlistBuildProperty(infoPlist){var _infoPlist$replace$re;return(_infoPlist$replace$re=infoPlist===null||infoPlist===void 0?void 0:infoPlist.replace(/\"/g,'').replace('$(SRCROOT)',''))!==null&&_infoPlist$replace$re!==void 0?_infoPlist$replace$re:null;}","map":{"version":3,"sources":["../../../src/ios/utils/getInfoPlistPath.ts"],"names":["buildConfiguration","project","xcBuildConfiguration","targetName","sanitizeInfoPlistBuildProperty","infoPlist"],"mappings":"sIAEA,QAAA,CAAA,OAAA,EAAA,CAAA,GAAA,CAAA,IAAA,CAAA,OAAA,CAAA,WAAA,CAAA,CAAA,OAAA,CAAA,kBAAA,CAAA,MAAA,CAAA,IAAA,CAAA,CAAA,CAAA,MAAA,CAAA,IAAA,CAAA,CACA,QAAA,CAAA,UAAA,EAAA,CAAA,GAAA,CAAA,IAAA,CAAA,OAAA,CAAA,aAAA,CAAA,CAAA,UAAA,CAAA,qBAAA,CAAA,MAAA,CAAA,IAAA,CAAA,CAAA,CAAA,MAAA,CAAA,IAAA,CAAA,CAEA;AACA;AACA;AACA;AACA;AACA;AACA,GACO,QAAA,CAAA,2BAAA,CAAA,oBAAA,CAMU,oEANV,EAMU,CAJf,UAIe,MAJf,UAIe,4BAFbA,kBAEa,CAFbA,kBAEa,gCAFQ,SAER,uBACf,GAAMC,CAAAA,OAAO,CAAG,CAAA,EAAA,UAAA,GAAA,oBAAA,EAAhB,oBAAgB,CAAhB,CACA,GAAI,CAAJ,OAAA,CAAc,CACZ,MAAA,KAAA,CACD,CAED,GAAMC,CAAAA,oBAAoB,CAAG,CAAA,EAAA,OAAA,GAAA,kCAAA,EAAA,OAAA,CAA4C,CACvEC,UADuE,CACvEA,UADuE,CAEvEH,kBAAAA,CAAAA,kBAFuE,CAA5C,CAA7B,CAIA,GAAI,CAAJ,oBAAA,CAA2B,CACzB,MAAA,KAAA,CAXa,CAaf;AACA,MAAOI,CAAAA,8BAA8B,CAACF,oBAAoB,CAApBA,aAAAA,CAAtC,cAAqC,CAArC,CACD,CAED,QAAA,CAAA,8BAAA,CAAA,SAAA,CAA2E,CAAA,GAAA,CAAA,qBAAA,CACzE,MAAA,CAAA,qBAAA,CAAOG,SAAP,GAAA,IAAOA,EAAAA,SAAP,GAAA,IAAA,EAAOA,CAAP,IAAA,EAAOA,CAAAA,SAAS,CAATA,OAAAA,CAAAA,IAAAA,CAAAA,EAAAA,EAAAA,OAAAA,CAAAA,YAAAA,CAAP,EAAOA,CAAP,IAAA,IAAA,EAAA,qBAAA,GAAA,IAAA,EAAA,CAAA,qBAAA,CAAA,IAAA,CACD","sourcesContent":["import { XcodeProject } from 'xcode';\n\nimport { getXCBuildConfigurationFromPbxproj } from '../Target';\nimport { resolvePathOrProject } from './Xcodeproj';\n\n/**\n * Find the Info.plist path linked to a specific build configuration.\n *\n * @param projectRoot\n * @param param1\n * @returns\n */\nexport function getInfoPlistPathFromPbxproj(\n  projectRootOrProject: string | XcodeProject,\n  {\n    targetName,\n    buildConfiguration = 'Release',\n  }: { targetName?: string; buildConfiguration?: string | 'Release' | 'Debug' } = {}\n): string | null {\n  const project = resolvePathOrProject(projectRootOrProject);\n  if (!project) {\n    return null;\n  }\n\n  const xcBuildConfiguration = getXCBuildConfigurationFromPbxproj(project, {\n    targetName,\n    buildConfiguration,\n  });\n  if (!xcBuildConfiguration) {\n    return null;\n  }\n  // The `INFOPLIST_FILE` is relative to the project folder, ex: app/Info.plist.\n  return sanitizeInfoPlistBuildProperty(xcBuildConfiguration.buildSettings.INFOPLIST_FILE);\n}\n\nfunction sanitizeInfoPlistBuildProperty(infoPlist?: string): string | null {\n  return infoPlist?.replace(/\"/g, '').replace('$(SRCROOT)', '') ?? null;\n}\n"]},"metadata":{},"sourceType":"script"}