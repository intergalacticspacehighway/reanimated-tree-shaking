{"ast":null,"code":"\"use strict\";var _defineProperty=require(\"/Users/fernandorojo/Developer/messing/rea-tree/node_modules/next/dist/compiled/@babel/runtime/helpers/defineProperty\");var _regeneratorRuntime=require(\"/Users/fernandorojo/Developer/messing/rea-tree/node_modules/next/dist/compiled/@babel/runtime/regenerator\");var _asyncToGenerator=require(\"/Users/fernandorojo/Developer/messing/rea-tree/node_modules/next/dist/compiled/@babel/runtime/helpers/asyncToGenerator\");function ownKeys(object,enumerableOnly){var keys=Object.keys(object);if(Object.getOwnPropertySymbols){var symbols=Object.getOwnPropertySymbols(object);enumerableOnly&&(symbols=symbols.filter(function(sym){return Object.getOwnPropertyDescriptor(object,sym).enumerable;})),keys.push.apply(keys,symbols);}return keys;}function _objectSpread(target){for(var i=1;i<arguments.length;i++){var source=null!=arguments[i]?arguments[i]:{};i%2?ownKeys(Object(source),!0).forEach(function(key){_defineProperty(target,key,source[key]);}):Object.getOwnPropertyDescriptors?Object.defineProperties(target,Object.getOwnPropertyDescriptors(source)):ownKeys(Object(source)).forEach(function(key){Object.defineProperty(target,key,Object.getOwnPropertyDescriptor(source,key));});}return target;}var __createBinding=this&&this.__createBinding||(Object.create?function(o,m,k,k2){if(k2===undefined)k2=k;var desc=Object.getOwnPropertyDescriptor(m,k);if(!desc||(\"get\"in desc?!m.__esModule:desc.writable||desc.configurable)){desc={enumerable:true,get:function get(){return m[k];}};}Object.defineProperty(o,k2,desc);}:function(o,m,k,k2){if(k2===undefined)k2=k;o[k2]=m[k];});var __setModuleDefault=this&&this.__setModuleDefault||(Object.create?function(o,v){Object.defineProperty(o,\"default\",{enumerable:true,value:v});}:function(o,v){o[\"default\"]=v;});var __importStar=this&&this.__importStar||function(mod){if(mod&&mod.__esModule)return mod;var result={};if(mod!=null)for(var k in mod){if(k!==\"default\"&&Object.prototype.hasOwnProperty.call(mod,k))__createBinding(result,mod,k);}__setModuleDefault(result,mod);return result;};var __importDefault=this&&this.__importDefault||function(mod){return mod&&mod.__esModule?mod:{\"default\":mod};};Object.defineProperty(exports,\"__esModule\",{value:true});exports.resize=exports.getJimpImageAsync=exports.circleAsync=exports.isFolderAsync=exports.jimpAsync=exports.convertFormat=exports.resizeBufferAsync=void 0;var fs_extra_1=__importDefault(require(\"fs-extra\"));// @ts-ignore\nvar jimp_compact_1=__importDefault(require(\"jimp-compact\"));var path=__importStar(require(\"path\"));function resizeBufferAsync(_x,_x2){return _resizeBufferAsync.apply(this,arguments);}function _resizeBufferAsync(){_resizeBufferAsync=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee2(buffer,sizes){return _regeneratorRuntime.wrap(function _callee2$(_context2){while(1){switch(_context2.prev=_context2.next){case 0:return _context2.abrupt(\"return\",Promise.all(sizes.map(/*#__PURE__*/function(){var _ref5=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(size){var jimpImage,mime;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:_context.next=2;return jimp_compact_1[\"default\"].read(buffer);case 2:jimpImage=_context.sent;mime=jimpImage.getMIME();return _context.abrupt(\"return\",jimpImage.resize(size,size).getBufferAsync(mime));case 5:case\"end\":return _context.stop();}}},_callee);}));return function(_x10){return _ref5.apply(this,arguments);};}())));case 1:case\"end\":return _context2.stop();}}},_callee2);}));return _resizeBufferAsync.apply(this,arguments);}exports.resizeBufferAsync=resizeBufferAsync;function convertFormat(format){if(typeof format==='undefined')return format;var input=format===null||format===void 0?void 0:format.toLowerCase();switch(input){case'png':case'webp':case'jpeg':return\"image/\".concat(input);case'jpg':return\"image/jpeg\";}return undefined;}exports.convertFormat=convertFormat;function jimpAsync(_x3){return _jimpAsync.apply(this,arguments);}function _jimpAsync(){_jimpAsync=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee3(options){var commands,command,input,image,mime,imgBuffer,_args3=arguments;return _regeneratorRuntime.wrap(function _callee3$(_context3){while(1){switch(_context3.prev=_context3.next){case 0:commands=_args3.length>1&&_args3[1]!==undefined?_args3[1]:[];if(!commands.length){_context3.next=18;break;}command=commands.shift();if(!command){_context3.next=18;break;}if(!(command.operation==='resize')){_context3.next=10;break;}_context3.next=7;return resize(options,command);case 7:input=_context3.sent;_context3.next=17;break;case 10:if(!(command.operation==='flatten')){_context3.next=16;break;}_context3.next=13;return flatten(options,command);case 13:input=_context3.sent;_context3.next=17;break;case 16:throw new Error(\"The operation: '\".concat(command.operation,\"' is not supported with Jimp\"));case 17:return _context3.abrupt(\"return\",jimpAsync(_objectSpread(_objectSpread({},options),{},{input:input}),commands));case 18:_context3.next=20;return getJimpImageAsync(options.input);case 20:image=_context3.sent;mime=typeof options.format==='string'?options.format:image.getMIME();_context3.next=24;return image.getBufferAsync(mime);case 24:imgBuffer=_context3.sent;if(!(typeof options.output==='string')){_context3.next=35;break;}_context3.next=28;return isFolderAsync(options.output);case 28:if(!_context3.sent){_context3.next=33;break;}_context3.next=31;return fs_extra_1[\"default\"].writeFile(path.join(options.output,path.basename(options.originalInput)),imgBuffer);case 31:_context3.next=35;break;case 33:_context3.next=35;return fs_extra_1[\"default\"].writeFile(options.output,imgBuffer);case 35:return _context3.abrupt(\"return\",imgBuffer);case 36:case\"end\":return _context3.stop();}}},_callee3);}));return _jimpAsync.apply(this,arguments);}exports.jimpAsync=jimpAsync;function isFolderAsync(_x4){return _isFolderAsync.apply(this,arguments);}function _isFolderAsync(){_isFolderAsync=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee4(path){return _regeneratorRuntime.wrap(function _callee4$(_context4){while(1){switch(_context4.prev=_context4.next){case 0:_context4.prev=0;_context4.next=3;return fs_extra_1[\"default\"].stat(path);case 3:return _context4.abrupt(\"return\",_context4.sent.isDirectory());case 6:_context4.prev=6;_context4.t0=_context4[\"catch\"](0);return _context4.abrupt(\"return\",false);case 9:case\"end\":return _context4.stop();}}},_callee4,null,[[0,6]]);}));return _isFolderAsync.apply(this,arguments);}exports.isFolderAsync=isFolderAsync;function circleAsync(jimp){var radius=Math.min(jimp.bitmap.width,jimp.bitmap.height)/2;var center={x:jimp.bitmap.width/2,y:jimp.bitmap.height/2};return new Promise(function(resolve){jimp.scanQuiet(0,0,jimp.bitmap.width,jimp.bitmap.height,function(x,y,idx){var curR=Math.sqrt(Math.pow(x-center.x,2)+Math.pow(y-center.y,2));if(radius-curR<=0.0){jimp.bitmap.data[idx+3]=0;}else if(radius-curR<1.0){jimp.bitmap.data[idx+3]=255*(radius-curR);}resolve(jimp);});});}exports.circleAsync=circleAsync;function getJimpImageAsync(_x5){return _getJimpImageAsync.apply(this,arguments);}function _getJimpImageAsync(){_getJimpImageAsync=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee5(input){return _regeneratorRuntime.wrap(function _callee5$(_context5){while(1){switch(_context5.prev=_context5.next){case 0:if(!(typeof input==='string'||input instanceof Buffer)){_context5.next=4;break;}_context5.next=3;return jimp_compact_1[\"default\"].read(input);case 3:return _context5.abrupt(\"return\",_context5.sent);case 4:return _context5.abrupt(\"return\",input);case 5:case\"end\":return _context5.stop();}}},_callee5);}));return _getJimpImageAsync.apply(this,arguments);}exports.getJimpImageAsync=getJimpImageAsync;function resize(_x6,_x7){return _resize.apply(this,arguments);}function _resize(){_resize=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee6(_ref,_ref2){var input,_ref$quality,quality,background,position,fit,width,height,initialImage,jimpPosition,jimpQuality;return _regeneratorRuntime.wrap(function _callee6$(_context6){while(1){switch(_context6.prev=_context6.next){case 0:input=_ref.input,_ref$quality=_ref.quality,quality=_ref$quality===void 0?100:_ref$quality;background=_ref2.background,position=_ref2.position,fit=_ref2.fit,width=_ref2.width,height=_ref2.height;_context6.next=4;return getJimpImageAsync(input);case 4:initialImage=_context6.sent;if(width&&!height){height=jimp_compact_1[\"default\"].AUTO;}else if(!width&&height){width=jimp_compact_1[\"default\"].AUTO;}else if(!width&&!height){width=initialImage.bitmap.width;height=initialImage.bitmap.height;}jimpPosition=convertPosition(position);jimpQuality=typeof quality!=='number'?100:quality;if(!(fit==='cover')){_context6.next=12;break;}initialImage=initialImage.cover(width,height,jimpPosition);_context6.next=17;break;case 12:if(!(fit==='contain')){_context6.next=16;break;}initialImage=initialImage.contain(width,height,jimpPosition);_context6.next=17;break;case 16:throw new Error(\"Unsupported fit: \".concat(fit,\". Please choose either 'cover', or 'contain' when using Jimp\"));case 17:if(background){initialImage=initialImage.composite(new jimp_compact_1[\"default\"](width,height,background),0,0,{mode:jimp_compact_1[\"default\"].BLEND_DESTINATION_OVER,opacitySource:1,opacityDest:1});}_context6.next=20;return initialImage.quality(jimpQuality);case 20:return _context6.abrupt(\"return\",_context6.sent);case 21:case\"end\":return _context6.stop();}}},_callee6);}));return _resize.apply(this,arguments);}exports.resize=resize;function flatten(_x8,_x9){return _flatten.apply(this,arguments);}/**\n * Convert sharp position to Jimp position.\n *\n * @param position\n */function _flatten(){_flatten=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee7(_ref3,_ref4){var input,_ref3$quality,quality,background,initialImage,jimpQuality;return _regeneratorRuntime.wrap(function _callee7$(_context7){while(1){switch(_context7.prev=_context7.next){case 0:input=_ref3.input,_ref3$quality=_ref3.quality,quality=_ref3$quality===void 0?100:_ref3$quality;background=_ref4.background;_context7.next=4;return getJimpImageAsync(input);case 4:initialImage=_context7.sent;jimpQuality=typeof quality!=='number'?100:quality;return _context7.abrupt(\"return\",initialImage.quality(jimpQuality).background(jimp_compact_1[\"default\"].cssColorToHex(background)));case 7:case\"end\":return _context7.stop();}}},_callee7);}));return _flatten.apply(this,arguments);}function convertPosition(position){if(!position)return convertPosition('center');switch(position){case'center':case'centre':return jimp_compact_1[\"default\"].VERTICAL_ALIGN_MIDDLE|jimp_compact_1[\"default\"].HORIZONTAL_ALIGN_CENTER;case'north':case'top':return jimp_compact_1[\"default\"].VERTICAL_ALIGN_TOP|jimp_compact_1[\"default\"].HORIZONTAL_ALIGN_CENTER;case'east':case'right':return jimp_compact_1[\"default\"].VERTICAL_ALIGN_MIDDLE|jimp_compact_1[\"default\"].HORIZONTAL_ALIGN_RIGHT;case'south':case'bottom':return jimp_compact_1[\"default\"].VERTICAL_ALIGN_BOTTOM|jimp_compact_1[\"default\"].HORIZONTAL_ALIGN_CENTER;case'west':case'left':return jimp_compact_1[\"default\"].VERTICAL_ALIGN_MIDDLE|jimp_compact_1[\"default\"].HORIZONTAL_ALIGN_LEFT;case'northeast':case'right top':return jimp_compact_1[\"default\"].VERTICAL_ALIGN_TOP|jimp_compact_1[\"default\"].HORIZONTAL_ALIGN_RIGHT;case'southeast':case'right bottom':return jimp_compact_1[\"default\"].VERTICAL_ALIGN_BOTTOM|jimp_compact_1[\"default\"].HORIZONTAL_ALIGN_RIGHT;case'southwest':case'left bottom':return jimp_compact_1[\"default\"].VERTICAL_ALIGN_BOTTOM|jimp_compact_1[\"default\"].HORIZONTAL_ALIGN_LEFT;case'northwest':case'left top':return jimp_compact_1[\"default\"].VERTICAL_ALIGN_TOP|jimp_compact_1[\"default\"].HORIZONTAL_ALIGN_LEFT;case'entropy':case'attention':throw new Error(\"Position: '\".concat(position,\"' is not supported\"));default:throw new Error(\"Unknown position: '\".concat(position,\"'\"));}}","map":{"version":3,"sources":["../src/jimp.ts"],"names":[],"mappings":"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","sourcesContent":["import fs from 'fs-extra';\n// @ts-ignore\nimport Jimp from 'jimp-compact';\nimport * as path from 'path';\n\nimport {\n  FlattenOptions,\n  Position,\n  ResizeOptions,\n  SharpCommandOptions,\n  SharpGlobalOptions,\n} from './sharp.types';\n\ntype JimpGlobalOptions = Omit<SharpGlobalOptions, 'input'> & {\n  input: string | Buffer | Jimp;\n  originalInput: string;\n};\n\nexport async function resizeBufferAsync(buffer: Buffer, sizes: number[]): Promise<Buffer[]> {\n  return Promise.all(\n    sizes.map(async size => {\n      // Parse the buffer each time to prevent mutable copies.\n      // Parse the buffer each time to prevent mutable copies.\n      const jimpImage = await Jimp.read(buffer);\n      const mime = jimpImage.getMIME();\n\n      return jimpImage.resize(size, size).getBufferAsync(mime);\n    })\n  );\n}\n\nexport function convertFormat(format?: string): string | undefined {\n  if (typeof format === 'undefined') return format;\n\n  const input = format?.toLowerCase();\n  switch (input) {\n    case 'png':\n    case 'webp':\n    case 'jpeg':\n      return `image/${input}`;\n    case 'jpg':\n      return `image/jpeg`;\n  }\n  return undefined;\n}\n\nexport async function jimpAsync(\n  options: JimpGlobalOptions,\n  commands: SharpCommandOptions[] = []\n): Promise<Buffer> {\n  if (commands.length) {\n    const command = commands.shift();\n    if (command) {\n      let input: Jimp;\n      if (command.operation === 'resize') {\n        input = await resize(options, command);\n      } else if (command.operation === 'flatten') {\n        input = await flatten(options, command);\n      } else {\n        throw new Error(`The operation: '${command.operation}' is not supported with Jimp`);\n      }\n      // @ts-ignore\n      return jimpAsync({ ...options, input }, commands);\n    }\n  }\n\n  const image = await getJimpImageAsync(options.input);\n  const mime = typeof options.format === 'string' ? options.format : image.getMIME();\n  const imgBuffer = await image.getBufferAsync(mime);\n\n  if (typeof options.output === 'string') {\n    if (await isFolderAsync(options.output)) {\n      await fs.writeFile(\n        path.join(options.output, path.basename(options.originalInput)),\n        imgBuffer\n      );\n    } else {\n      await fs.writeFile(options.output, imgBuffer);\n    }\n  }\n  return imgBuffer;\n}\n\nexport async function isFolderAsync(path: string): Promise<boolean> {\n  try {\n    return (await fs.stat(path)).isDirectory();\n  } catch {\n    return false;\n  }\n}\n\nexport function circleAsync(jimp: Jimp): Promise<Jimp> {\n  const radius = Math.min(jimp.bitmap.width, jimp.bitmap.height) / 2;\n\n  const center = {\n    x: jimp.bitmap.width / 2,\n    y: jimp.bitmap.height / 2,\n  };\n\n  return new Promise(resolve => {\n    jimp.scanQuiet(\n      0,\n      0,\n      jimp.bitmap.width,\n      jimp.bitmap.height,\n      (x: number, y: number, idx: number) => {\n        const curR = Math.sqrt(Math.pow(x - center.x, 2) + Math.pow(y - center.y, 2));\n\n        if (radius - curR <= 0.0) {\n          jimp.bitmap.data[idx + 3] = 0;\n        } else if (radius - curR < 1.0) {\n          jimp.bitmap.data[idx + 3] = 255 * (radius - curR);\n        }\n        resolve(jimp);\n      }\n    );\n  });\n}\n\nexport async function getJimpImageAsync(input: string | Buffer | Jimp): Promise<Jimp> {\n  // @ts-ignore: Jimp types are broken\n  if (typeof input === 'string' || input instanceof Buffer) return await Jimp.read(input);\n\n  return input;\n}\n\nexport async function resize(\n  { input, quality = 100 }: JimpGlobalOptions,\n  { background, position, fit, width, height }: Omit<ResizeOptions, 'operation'>\n): Promise<Jimp> {\n  let initialImage = await getJimpImageAsync(input);\n\n  if (width && !height) {\n    height = Jimp.AUTO;\n  } else if (!width && height) {\n    width = Jimp.AUTO;\n  } else if (!width && !height) {\n    width = initialImage.bitmap.width;\n    height = initialImage.bitmap.height;\n  }\n\n  const jimpPosition = convertPosition(position);\n  const jimpQuality = typeof quality !== 'number' ? 100 : quality;\n  if (fit === 'cover') {\n    initialImage = initialImage.cover(width, height, jimpPosition);\n  } else if (fit === 'contain') {\n    initialImage = initialImage.contain(width, height, jimpPosition);\n  } else {\n    throw new Error(\n      `Unsupported fit: ${fit}. Please choose either 'cover', or 'contain' when using Jimp`\n    );\n  }\n  if (background) {\n    initialImage = initialImage.composite(new Jimp(width, height, background), 0, 0, {\n      mode: Jimp.BLEND_DESTINATION_OVER,\n      opacitySource: 1,\n      opacityDest: 1,\n    });\n  }\n\n  return await initialImage.quality(jimpQuality);\n}\n\nasync function flatten(\n  { input, quality = 100 }: JimpGlobalOptions,\n  { background }: Omit<FlattenOptions, 'operation'>\n): Promise<Jimp> {\n  const initialImage = await getJimpImageAsync(input);\n  const jimpQuality = typeof quality !== 'number' ? 100 : quality;\n  return initialImage.quality(jimpQuality).background(Jimp.cssColorToHex(background));\n}\n\n/**\n * Convert sharp position to Jimp position.\n *\n * @param position\n */\nfunction convertPosition(position?: Position): number {\n  if (!position) return convertPosition('center');\n\n  switch (position) {\n    case 'center':\n    case 'centre':\n      return Jimp.VERTICAL_ALIGN_MIDDLE | Jimp.HORIZONTAL_ALIGN_CENTER;\n    case 'north':\n    case 'top':\n      return Jimp.VERTICAL_ALIGN_TOP | Jimp.HORIZONTAL_ALIGN_CENTER;\n    case 'east':\n    case 'right':\n      return Jimp.VERTICAL_ALIGN_MIDDLE | Jimp.HORIZONTAL_ALIGN_RIGHT;\n    case 'south':\n    case 'bottom':\n      return Jimp.VERTICAL_ALIGN_BOTTOM | Jimp.HORIZONTAL_ALIGN_CENTER;\n    case 'west':\n    case 'left':\n      return Jimp.VERTICAL_ALIGN_MIDDLE | Jimp.HORIZONTAL_ALIGN_LEFT;\n    case 'northeast':\n    case 'right top':\n      return Jimp.VERTICAL_ALIGN_TOP | Jimp.HORIZONTAL_ALIGN_RIGHT;\n    case 'southeast':\n    case 'right bottom':\n      return Jimp.VERTICAL_ALIGN_BOTTOM | Jimp.HORIZONTAL_ALIGN_RIGHT;\n    case 'southwest':\n    case 'left bottom':\n      return Jimp.VERTICAL_ALIGN_BOTTOM | Jimp.HORIZONTAL_ALIGN_LEFT;\n    case 'northwest':\n    case 'left top':\n      return Jimp.VERTICAL_ALIGN_TOP | Jimp.HORIZONTAL_ALIGN_LEFT;\n    case 'entropy':\n    case 'attention':\n      throw new Error(`Position: '${position}' is not supported`);\n    default:\n      throw new Error(`Unknown position: '${position}'`);\n  }\n}\n"],"sourceRoot":""},"metadata":{},"sourceType":"script"}