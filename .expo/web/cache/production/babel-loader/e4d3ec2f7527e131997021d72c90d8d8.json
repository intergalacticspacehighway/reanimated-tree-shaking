{"ast":null,"code":"\"use strict\";var _defineProperty=require(\"/Users/fernandorojo/Developer/messing/rea-tree/node_modules/next/dist/compiled/@babel/runtime/helpers/defineProperty\");function ownKeys(object,enumerableOnly){var keys=Object.keys(object);if(Object.getOwnPropertySymbols){var symbols=Object.getOwnPropertySymbols(object);enumerableOnly&&(symbols=symbols.filter(function(sym){return Object.getOwnPropertyDescriptor(object,sym).enumerable;})),keys.push.apply(keys,symbols);}return keys;}function _objectSpread(target){for(var i=1;i<arguments.length;i++){var source=null!=arguments[i]?arguments[i]:{};i%2?ownKeys(Object(source),!0).forEach(function(key){_defineProperty(target,key,source[key]);}):Object.getOwnPropertyDescriptors?Object.defineProperties(target,Object.getOwnPropertyDescriptors(source)):ownKeys(Object(source)).forEach(function(key){Object.defineProperty(target,key,Object.getOwnPropertyDescriptor(source,key));});}return target;}Object.defineProperty(exports,\"__esModule\",{value:true});exports.createPWAManifestFromWebConfig=exports.getChromeIconConfig=exports.getFaviconIconConfig=exports.getSafariIconConfig=exports.getSafariStartupImageConfig=exports.getConfigForPWA=void 0;var config_1=require(\"@expo/config\");// Use root to work better with create-react-app\nvar DEFAULT_LANGUAGE_ISO_CODE=\"en\";var DEFAULT_DISPLAY='standalone';var DEFAULT_STATUS_BAR='black-translucent';var DEFAULT_PREFER_RELATED_APPLICATIONS=true;// Convert expo value to PWA value\nfunction ensurePWAorientation(orientation){if(orientation&&typeof orientation==='string'){var webOrientation=orientation.toLowerCase();if(webOrientation!=='default'){return webOrientation;}}return undefined;}function sanitizePublicPath(publicPath){if(typeof publicPath!=='string'||!publicPath.length){return'/';}if(publicPath.endsWith('/')){return publicPath;}return publicPath+'/';}function getConfigForPWA(projectRoot){var _ref=(0,config_1.getConfig)(projectRoot,{skipSDKVersionRequirement:true}),exp=_ref.exp;return ensurePWAConfig(exp);}exports.getConfigForPWA=getConfigForPWA;function applyWebDefaults(appJSON){// For RN CLI support\n// @ts-ignore: expo object doesn't exist on ExpoConfig\nvar appManifest=appJSON.expo||appJSON||{};var _appManifest$web=appManifest.web,webManifest=_appManifest$web===void 0?{}:_appManifest$web,_appManifest$splash=appManifest.splash,splash=_appManifest$splash===void 0?{}:_appManifest$splash,_appManifest$ios=appManifest.ios,ios=_appManifest$ios===void 0?{}:_appManifest$ios,_appManifest$android=appManifest.android,android=_appManifest$android===void 0?{}:_appManifest$android;var _webManifest$build=webManifest.build,webBuild=_webManifest$build===void 0?{}:_webManifest$build,_webManifest$webDange=webManifest.webDangerous,webDangerous=_webManifest$webDange===void 0?{}:_webManifest$webDange,_webManifest$meta=webManifest.meta,meta=_webManifest$meta===void 0?{}:_webManifest$meta;var _meta$apple=meta.apple,apple=_meta$apple===void 0?{}:_meta$apple;// rn-cli apps use a displayName value as well.\nvar _ref2=(0,config_1.getNameFromConfig)(appJSON),appName=_ref2.appName,webName=_ref2.webName;var languageISOCode=webManifest.lang||DEFAULT_LANGUAGE_ISO_CODE;var buildOutputPath=(0,config_1.getWebOutputPath)(appJSON);var publicPath=sanitizePublicPath(webManifest.publicPath);var primaryColor=appManifest.primaryColor;var description=appManifest.description;// The theme_color sets the color of the tool bar, and may be reflected in the app's preview in task switchers.\nvar webThemeColor=webManifest.themeColor||primaryColor;var dir=webManifest.dir;var shortName=webManifest.shortName||webName;var display=webManifest.display||DEFAULT_DISPLAY;var startUrl=webManifest.startUrl;var scope=webManifest.scope,crossorigin=webManifest.crossorigin;var barStyle=apple.barStyle||webManifest.barStyle||DEFAULT_STATUS_BAR;var orientation=ensurePWAorientation(webManifest.orientation||appManifest.orientation);/**\n     * **Splash screen background color**\n     * `https://developers.google.com/web/fundamentals/web-app-manifest/#splash-screen`\n     * The background_color should be the same color as the load page,\n     * to provide a smooth transition from the splash screen to your app.\n     */var backgroundColor=webManifest.backgroundColor||splash.backgroundColor;// No default background color\n/**\n     *\n     * https://developer.mozilla.org/en-US/docs/Web/Manifest#prefer_related_applications\n     * Specifies a boolean value that hints for the user agent to indicate\n     * to the user that the specified native applications (see below) are recommended over the website.\n     * This should only be used if the related native apps really do offer something that the website can't... like Expo ;)\n     *\n     * >> The banner won't show up if the app is already installed:\n     * https://github.com/GoogleChrome/samples/issues/384#issuecomment-326387680\n     */var preferRelatedApplications=webManifest.preferRelatedApplications===undefined?DEFAULT_PREFER_RELATED_APPLICATIONS:webManifest.preferRelatedApplications;var relatedApplications=inferWebRelatedApplicationsFromConfig(appManifest);return _objectSpread(_objectSpread({},appManifest),{},{name:appName,description:description,primaryColor:primaryColor,// Ensure these objects exist\nios:_objectSpread({},ios),android:_objectSpread({},android),web:_objectSpread(_objectSpread({},webManifest),{},{meta:_objectSpread(_objectSpread({},meta),{},{apple:_objectSpread(_objectSpread({},apple),{},{formatDetection:apple.formatDetection||'telephone=no',mobileWebAppCapable:apple.mobileWebAppCapable||'yes',touchFullscreen:apple.touchFullscreen||'yes',barStyle:barStyle})}),build:_objectSpread(_objectSpread({},webBuild),{},{output:buildOutputPath,publicPath:publicPath}),dangerous:webDangerous,scope:scope,crossorigin:crossorigin,description:description,preferRelatedApplications:preferRelatedApplications,relatedApplications:relatedApplications,startUrl:startUrl,shortName:shortName,display:display,orientation:orientation,dir:dir,barStyle:barStyle,backgroundColor:backgroundColor,themeColor:webThemeColor,lang:languageISOCode,name:webName})});}/**\n * https://developer.mozilla.org/en-US/docs/Web/Manifest#related_applications\n * An array of native applications that are installable by, or accessible to, the underlying platform\n * for example, a native Android application obtainable through the Google Play Store.\n * Such applications are intended to be alternatives to the\n * website that provides similar/equivalent functionality â€” like the native app version of the website.\n */function inferWebRelatedApplicationsFromConfig(_ref3){var _ref3$web=_ref3.web,web=_ref3$web===void 0?{}:_ref3$web,_ref3$ios=_ref3.ios,ios=_ref3$ios===void 0?{}:_ref3$ios,_ref3$android=_ref3.android,android=_ref3$android===void 0?{}:_ref3$android;var relatedApplications=web.relatedApplications||[];var bundleIdentifier=ios.bundleIdentifier,appStoreUrl=ios.appStoreUrl;if(bundleIdentifier){var PLATFORM_ITUNES='itunes';var iosApp=relatedApplications.some(function(_ref4){var platform=_ref4.platform;return platform===PLATFORM_ITUNES;});if(!iosApp){relatedApplications.push({platform:PLATFORM_ITUNES,url:appStoreUrl,id:bundleIdentifier});}}var androidPackage=android[\"package\"],playStoreUrl=android.playStoreUrl;if(androidPackage){var PLATFORM_PLAY='play';var alreadyHasAndroidApp=relatedApplications.some(function(_ref5){var platform=_ref5.platform;return platform===PLATFORM_PLAY;});if(!alreadyHasAndroidApp){relatedApplications.push({platform:PLATFORM_PLAY,url:playStoreUrl||\"http://play.google.com/store/apps/details?id=\".concat(androidPackage),id:androidPackage});}}return relatedApplications;}function getSafariStartupImageConfig(config){var _a,_b,_c,_d;// enforce no defaults\nvar splashScreenObject=function splashScreenObject(input){if(!input.image)return null;return{resizeMode:input.resizeMode,src:input.image,backgroundColor:input.backgroundColor};};// Allow empty objects\nif(isObject((_a=config.web)===null||_a===void 0?void 0:_a.splash)){return splashScreenObject((_b=config.web)===null||_b===void 0?void 0:_b.splash);}if(isObject((_c=config.ios)===null||_c===void 0?void 0:_c.splash)){return splashScreenObject((_d=config.ios)===null||_d===void 0?void 0:_d.splash);}if(isObject(config.splash)){return splashScreenObject(config.splash);}return null;}exports.getSafariStartupImageConfig=getSafariStartupImageConfig;function getSafariIconConfig(config){var _a;var validate=function validate(input){return{resizeMode:'contain',src:input,backgroundColor:'transparent'};};// Allow empty objects\nif(typeof((_a=config.ios)===null||_a===void 0?void 0:_a.icon)==='string'){return validate(config.ios.icon);}if(typeof config.icon==='string'){return validate(config.icon);}return null;}exports.getSafariIconConfig=getSafariIconConfig;function getFaviconIconConfig(config){var _a,_b;var validate=function validate(input){return{resizeMode:'contain',src:input,backgroundColor:'transparent'};};// If the favicon is set but empty, we assume that the user does not want us to generate a favicon\nif(typeof((_a=config.web)===null||_a===void 0?void 0:_a.favicon)==='string'){// Empty string can be used to disable favicon generation.\nif(!((_b=config.web)===null||_b===void 0?void 0:_b.favicon)){return null;}return validate(config.web.favicon);}if(typeof config.icon==='string'){return validate(config.icon);}return null;}exports.getFaviconIconConfig=getFaviconIconConfig;function getChromeIconConfig(config){var _a;var validate=function validate(input){return{resizeMode:'contain',src:input,backgroundColor:'transparent'};};// Allow empty objects\nif(typeof((_a=config.android)===null||_a===void 0?void 0:_a.icon)==='string'){return validate(config.android.icon);}if(typeof config.icon==='string'){return validate(config.icon);}return null;}exports.getChromeIconConfig=getChromeIconConfig;function ensurePWAConfig(appJSON){var config=applyWebDefaults(appJSON);return config;}function isObject(item){return typeof item==='object'&&!Array.isArray(item)&&item!==null;}function createPWAManifestFromWebConfig(config){if(!isObject(config)){throw new Error('Web config must be a valid object');}var manifest={background_color:config.backgroundColor,description:config.description,display:config.display,lang:config.lang,name:config.name,scope:config.scope,short_name:config.shortName,start_url:typeof config.startUrl==='undefined'?'/?utm_source=web_app_manifest':config.startUrl,theme_color:config.themeColor,crossorigin:config.crossorigin};// Browser will default to auto\nif(config.dir){manifest.dir=config.dir.toLowerCase();}if(config.orientation){manifest.orientation=config.orientation.toLowerCase();}// Avoid defining an empty array, or setting prefer_related_applications to true when no applications are defined.\nif(Array.isArray(config.relatedApplications)&&config.relatedApplications.length>0){manifest.related_applications=config.relatedApplications;manifest.prefer_related_applications=config.preferRelatedApplications;}return manifest;}exports.createPWAManifestFromWebConfig=createPWAManifestFromWebConfig;","map":{"version":3,"sources":["../src/Manifest.ts"],"names":[],"mappings":"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","sourcesContent":["import {\n  AppJSONConfig,\n  ExpoConfig,\n  getConfig,\n  getNameFromConfig,\n  getWebOutputPath,\n} from '@expo/config';\n\nimport { IconOptions, Manifest, PWAConfig } from './Manifest.types';\n\n// Use root to work better with create-react-app\nconst DEFAULT_LANGUAGE_ISO_CODE = `en`;\nconst DEFAULT_DISPLAY = 'standalone';\nconst DEFAULT_STATUS_BAR = 'black-translucent';\nconst DEFAULT_PREFER_RELATED_APPLICATIONS = true;\n\n// Convert expo value to PWA value\nfunction ensurePWAorientation(orientation: string): string | undefined {\n  if (orientation && typeof orientation === 'string') {\n    const webOrientation = orientation.toLowerCase();\n    if (webOrientation !== 'default') {\n      return webOrientation;\n    }\n  }\n  return undefined;\n}\n\nfunction sanitizePublicPath(publicPath: unknown): string {\n  if (typeof publicPath !== 'string' || !publicPath.length) {\n    return '/';\n  }\n\n  if (publicPath.endsWith('/')) {\n    return publicPath;\n  }\n  return publicPath + '/';\n}\n\nexport function getConfigForPWA(projectRoot: string): PWAConfig {\n  const { exp } = getConfig(projectRoot, { skipSDKVersionRequirement: true });\n  return ensurePWAConfig(exp);\n}\n\nfunction applyWebDefaults(appJSON: AppJSONConfig | ExpoConfig): PWAConfig {\n  // For RN CLI support\n  // @ts-ignore: expo object doesn't exist on ExpoConfig\n  const appManifest = appJSON.expo || appJSON || {};\n  const { web: webManifest = {}, splash = {}, ios = {}, android = {} } = appManifest;\n  const { build: webBuild = {}, webDangerous = {}, meta = {} } = webManifest;\n  const { apple = {} } = meta;\n\n  // rn-cli apps use a displayName value as well.\n  const { appName, webName } = getNameFromConfig(appJSON);\n\n  const languageISOCode = webManifest.lang || DEFAULT_LANGUAGE_ISO_CODE;\n  const buildOutputPath = getWebOutputPath(appJSON);\n  const publicPath = sanitizePublicPath(webManifest.publicPath);\n  const primaryColor = appManifest.primaryColor;\n  const description = appManifest.description;\n  // The theme_color sets the color of the tool bar, and may be reflected in the app's preview in task switchers.\n  const webThemeColor = webManifest.themeColor || primaryColor;\n  const dir = webManifest.dir;\n  const shortName = webManifest.shortName || webName;\n  const display = webManifest.display || DEFAULT_DISPLAY;\n  const startUrl = webManifest.startUrl;\n  const { scope, crossorigin } = webManifest;\n  const barStyle = apple.barStyle || webManifest.barStyle || DEFAULT_STATUS_BAR;\n\n  const orientation = ensurePWAorientation(webManifest.orientation || appManifest.orientation);\n\n  /**\n   * **Splash screen background color**\n   * `https://developers.google.com/web/fundamentals/web-app-manifest/#splash-screen`\n   * The background_color should be the same color as the load page,\n   * to provide a smooth transition from the splash screen to your app.\n   */\n  const backgroundColor = webManifest.backgroundColor || splash.backgroundColor; // No default background color\n\n  /**\n   *\n   * https://developer.mozilla.org/en-US/docs/Web/Manifest#prefer_related_applications\n   * Specifies a boolean value that hints for the user agent to indicate\n   * to the user that the specified native applications (see below) are recommended over the website.\n   * This should only be used if the related native apps really do offer something that the website can't... like Expo ;)\n   *\n   * >> The banner won't show up if the app is already installed:\n   * https://github.com/GoogleChrome/samples/issues/384#issuecomment-326387680\n   */\n  const preferRelatedApplications =\n    webManifest.preferRelatedApplications === undefined\n      ? DEFAULT_PREFER_RELATED_APPLICATIONS\n      : webManifest.preferRelatedApplications;\n\n  const relatedApplications = inferWebRelatedApplicationsFromConfig(appManifest);\n\n  return {\n    ...appManifest,\n    name: appName,\n    description,\n    primaryColor,\n    // Ensure these objects exist\n    ios: {\n      ...ios,\n    },\n    android: {\n      ...android,\n    },\n    web: {\n      ...webManifest,\n      meta: {\n        ...meta,\n        apple: {\n          ...apple,\n          formatDetection: apple.formatDetection || 'telephone=no',\n          mobileWebAppCapable: apple.mobileWebAppCapable || 'yes',\n          touchFullscreen: apple.touchFullscreen || 'yes',\n          barStyle,\n        },\n      },\n      build: {\n        ...webBuild,\n        output: buildOutputPath,\n        publicPath,\n      },\n      dangerous: webDangerous,\n      scope,\n      crossorigin,\n      description,\n      preferRelatedApplications,\n      relatedApplications,\n      startUrl,\n      shortName,\n      display,\n      orientation,\n      dir,\n      barStyle,\n      backgroundColor,\n      themeColor: webThemeColor,\n      lang: languageISOCode,\n      name: webName,\n    },\n  };\n}\n\n/**\n * https://developer.mozilla.org/en-US/docs/Web/Manifest#related_applications\n * An array of native applications that are installable by, or accessible to, the underlying platform\n * for example, a native Android application obtainable through the Google Play Store.\n * Such applications are intended to be alternatives to the\n * website that provides similar/equivalent functionality â€” like the native app version of the website.\n */\nfunction inferWebRelatedApplicationsFromConfig({ web = {}, ios = {}, android = {} }: any) {\n  const relatedApplications = web.relatedApplications || [];\n\n  const { bundleIdentifier, appStoreUrl } = ios;\n  if (bundleIdentifier) {\n    const PLATFORM_ITUNES = 'itunes';\n    const iosApp = relatedApplications.some(\n      ({ platform }: { platform: string }) => platform === PLATFORM_ITUNES\n    );\n    if (!iosApp) {\n      relatedApplications.push({\n        platform: PLATFORM_ITUNES,\n        url: appStoreUrl,\n        id: bundleIdentifier,\n      });\n    }\n  }\n\n  const { package: androidPackage, playStoreUrl } = android;\n  if (androidPackage) {\n    const PLATFORM_PLAY = 'play';\n    const alreadyHasAndroidApp = relatedApplications.some(\n      ({ platform }: { platform: string }) => platform === PLATFORM_PLAY\n    );\n    if (!alreadyHasAndroidApp) {\n      relatedApplications.push({\n        platform: PLATFORM_PLAY,\n        url: playStoreUrl || `http://play.google.com/store/apps/details?id=${androidPackage}`,\n        id: androidPackage,\n      });\n    }\n  }\n\n  return relatedApplications;\n}\n\nexport function getSafariStartupImageConfig(config: ExpoConfig): IconOptions | null {\n  // enforce no defaults\n  const splashScreenObject = (input: any): IconOptions | null => {\n    if (!input.image) return null;\n    return {\n      resizeMode: input.resizeMode,\n      src: input.image,\n      backgroundColor: input.backgroundColor,\n    };\n  };\n\n  // Allow empty objects\n  if (isObject(config.web?.splash)) {\n    return splashScreenObject(config.web?.splash);\n  }\n  if (isObject(config.ios?.splash)) {\n    return splashScreenObject(config.ios?.splash);\n  }\n  if (isObject(config.splash)) {\n    return splashScreenObject(config.splash);\n  }\n  return null;\n}\n\nexport function getSafariIconConfig(config: ExpoConfig): IconOptions | null {\n  const validate = (input: string): IconOptions => ({\n    resizeMode: 'contain',\n    src: input,\n    backgroundColor: 'transparent',\n  });\n\n  // Allow empty objects\n  if (typeof config.ios?.icon === 'string') {\n    return validate(config.ios.icon);\n  }\n  if (typeof config.icon === 'string') {\n    return validate(config.icon);\n  }\n  return null;\n}\n\nexport function getFaviconIconConfig(config: ExpoConfig): IconOptions | null {\n  const validate = (input: string): IconOptions => ({\n    resizeMode: 'contain',\n    src: input,\n    backgroundColor: 'transparent',\n  });\n\n  // If the favicon is set but empty, we assume that the user does not want us to generate a favicon\n  if (typeof config.web?.favicon === 'string') {\n    // Empty string can be used to disable favicon generation.\n    if (!config.web?.favicon) {\n      return null;\n    }\n    return validate(config.web.favicon);\n  }\n  if (typeof config.icon === 'string') {\n    return validate(config.icon);\n  }\n  return null;\n}\n\nexport function getChromeIconConfig(config: ExpoConfig): IconOptions | null {\n  const validate = (input: string): IconOptions => ({\n    resizeMode: 'contain',\n    src: input,\n    backgroundColor: 'transparent',\n  });\n\n  // Allow empty objects\n  if (typeof config.android?.icon === 'string') {\n    return validate(config.android.icon);\n  }\n  if (typeof config.icon === 'string') {\n    return validate(config.icon);\n  }\n  return null;\n}\n\nfunction ensurePWAConfig(appJSON: AppJSONConfig | ExpoConfig): PWAConfig {\n  const config = applyWebDefaults(appJSON);\n  return config;\n}\n\nfunction isObject(item: any): item is Record<any, any> {\n  return typeof item === 'object' && !Array.isArray(item) && item !== null;\n}\n\nexport function createPWAManifestFromWebConfig(config?: ExpoConfig['web']): Manifest {\n  if (!isObject(config)) {\n    throw new Error('Web config must be a valid object');\n  }\n\n  const manifest: Manifest = {\n    background_color: config.backgroundColor,\n    description: config.description,\n    display: config.display,\n    lang: config.lang,\n    name: config.name,\n    scope: config.scope,\n    short_name: config.shortName,\n    start_url:\n      typeof config.startUrl === 'undefined' ? '/?utm_source=web_app_manifest' : config.startUrl,\n    theme_color: config.themeColor,\n    crossorigin: config.crossorigin,\n  };\n\n  // Browser will default to auto\n  if (config.dir) {\n    manifest.dir = config.dir.toLowerCase() as any;\n  }\n\n  if (config.orientation) {\n    manifest.orientation = config.orientation.toLowerCase() as any;\n  }\n\n  // Avoid defining an empty array, or setting prefer_related_applications to true when no applications are defined.\n  if (Array.isArray(config.relatedApplications) && config.relatedApplications.length > 0) {\n    manifest.related_applications = config.relatedApplications;\n    manifest.prefer_related_applications = config.preferRelatedApplications;\n  }\n\n  return manifest;\n}\n"],"sourceRoot":""},"metadata":{},"sourceType":"script"}