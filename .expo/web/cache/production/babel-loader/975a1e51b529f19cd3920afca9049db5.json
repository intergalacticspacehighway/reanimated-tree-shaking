{"ast":null,"code":"import useCode from'../derived/useCode';import AnimatedNode from'./AnimatedNode';function assertNodesNotNull(code,children,exec){if(!code){var error=!children?\"Got \\\"\".concat(typeof children,\"\\\" type passed to children\"):\"Got \\\"\".concat(typeof exec,\"\\\" type passed to exec\");throw new Error(\"<Animated.Code /> expects the 'exec' prop or children to be an animated node or a function returning an animated node. \".concat(error));}}function Code(_ref){var exec=_ref.exec,children=_ref.children,dependencies=_ref.dependencies;var nodes=children||exec;var code=null;if(nodes instanceof AnimatedNode){code=function code(){return nodes;};}else if(typeof nodes==='function'){code=nodes;}assertNodesNotNull(code,children,exec);useCode(code,dependencies);return null;}export default Code;","map":{"version":3,"names":["useCode","AnimatedNode","assertNodesNotNull","code","children","exec","error","concat","Error","Code","_ref","dependencies","nodes"],"sources":["/Users/fernandorojo/Developer/messing/rea-tree/node_modules/react-native-reanimated/lib/reanimated1/core/AnimatedCode.js"],"sourcesContent":["import useCode from '../derived/useCode';\nimport AnimatedNode from './AnimatedNode';\n\nfunction assertNodesNotNull(code, children, exec) {\n  if (!code) {\n    var error = !children ? \"Got \\\"\".concat(typeof children, \"\\\" type passed to children\") : \"Got \\\"\".concat(typeof exec, \"\\\" type passed to exec\");\n    throw new Error(\"<Animated.Code /> expects the 'exec' prop or children to be an animated node or a function returning an animated node. \".concat(error));\n  }\n}\n\nfunction Code(_ref) {\n  var exec = _ref.exec,\n      children = _ref.children,\n      dependencies = _ref.dependencies;\n  var nodes = children || exec;\n  var code = null;\n\n  if (nodes instanceof AnimatedNode) {\n    code = function code() {\n      return nodes;\n    };\n  } else if (typeof nodes === 'function') {\n    code = nodes;\n  }\n\n  assertNodesNotNull(code, children, exec);\n  useCode(code, dependencies);\n  return null;\n}\n\nexport default Code;"],"mappings":"AAAA,MAAOA,CAAAA,OAAP,KAAoB,oBAApB,CACA,MAAOC,CAAAA,YAAP,KAAyB,gBAAzB,CAEA,QAASC,CAAAA,kBAAT,CAA4BC,IAA5B,CAAkCC,QAAlC,CAA4CC,IAA5C,CAAkD,CAChD,GAAI,CAACF,IAAL,CAAW,CACT,GAAIG,CAAAA,KAAK,CAAG,CAACF,QAAD,CAAY,SAASG,MAAT,CAAgB,MAAOH,CAAAA,QAAvB,CAAiC,4BAAjC,CAAZ,CAA6E,SAASG,MAAT,CAAgB,MAAOF,CAAAA,IAAvB,CAA6B,wBAA7B,CAAzF,CACA,KAAM,IAAIG,CAAAA,KAAJ,CAAU,0HAA0HD,MAA1H,CAAiID,KAAjI,CAAV,CAAN,CACD,CACF,CAED,QAASG,CAAAA,IAAT,CAAcC,IAAd,CAAoB,CAClB,GAAIL,CAAAA,IAAI,CAAGK,IAAI,CAACL,IAAhB,CACID,QAAQ,CAAGM,IAAI,CAACN,QADpB,CAEIO,YAAY,CAAGD,IAAI,CAACC,YAFxB,CAGA,GAAIC,CAAAA,KAAK,CAAGR,QAAQ,EAAIC,IAAxB,CACA,GAAIF,CAAAA,IAAI,CAAG,IAAX,CAEA,GAAIS,KAAK,WAAYX,CAAAA,YAArB,CAAmC,CACjCE,IAAI,CAAG,QAASA,CAAAA,IAAT,EAAgB,CACrB,MAAOS,CAAAA,KAAP,CACD,CAFD,CAGD,CAJD,IAIO,IAAI,MAAOA,CAAAA,KAAP,GAAiB,UAArB,CAAiC,CACtCT,IAAI,CAAGS,KAAP,CACD,CAEDV,kBAAkB,CAACC,IAAD,CAAOC,QAAP,CAAiBC,IAAjB,CAAlB,CACAL,OAAO,CAACG,IAAD,CAAOQ,YAAP,CAAP,CACA,MAAO,KAAP,CACD,CAED,cAAeF,CAAAA,IAAf"},"metadata":{},"sourceType":"module"}