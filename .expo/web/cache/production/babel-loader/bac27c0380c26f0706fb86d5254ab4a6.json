{"ast":null,"code":"\"use strict\";var _defineProperty=require(\"/Users/fernandorojo/Developer/messing/rea-tree/node_modules/next/dist/compiled/@babel/runtime/helpers/defineProperty\");function ownKeys(object,enumerableOnly){var keys=Object.keys(object);if(Object.getOwnPropertySymbols){var symbols=Object.getOwnPropertySymbols(object);enumerableOnly&&(symbols=symbols.filter(function(sym){return Object.getOwnPropertyDescriptor(object,sym).enumerable;})),keys.push.apply(keys,symbols);}return keys;}function _objectSpread(target){for(var i=1;i<arguments.length;i++){var source=null!=arguments[i]?arguments[i]:{};i%2?ownKeys(Object(source),!0).forEach(function(key){_defineProperty(target,key,source[key]);}):Object.getOwnPropertyDescriptors?Object.defineProperties(target,Object.getOwnPropertyDescriptors(source)):ownKeys(Object(source)).forEach(function(key){Object.defineProperty(target,key,Object.getOwnPropertyDescriptor(source,key));});}return target;}var Range=require('./Range');/** @typedef {import(\"../validate\").Schema} Schema */ /**\n * @param {Schema} schema\n * @param {boolean} logic\n * @return {string[]}\n */module.exports.stringHints=function stringHints(schema,logic){var hints=[];var type='string';var currentSchema=_objectSpread({},schema);if(!logic){var tmpLength=currentSchema.minLength;var tmpFormat=currentSchema.formatMinimum;var tmpExclusive=currentSchema.formatExclusiveMaximum;currentSchema.minLength=currentSchema.maxLength;currentSchema.maxLength=tmpLength;currentSchema.formatMinimum=currentSchema.formatMaximum;currentSchema.formatMaximum=tmpFormat;currentSchema.formatExclusiveMaximum=!currentSchema.formatExclusiveMinimum;currentSchema.formatExclusiveMinimum=!tmpExclusive;}if(typeof currentSchema.minLength==='number'){if(currentSchema.minLength===1){type='non-empty string';}else{var length=Math.max(currentSchema.minLength-1,0);hints.push(\"should be longer than \".concat(length,\" character\").concat(length>1?'s':''));}}if(typeof currentSchema.maxLength==='number'){if(currentSchema.maxLength===0){type='empty string';}else{var _length=currentSchema.maxLength+1;hints.push(\"should be shorter than \".concat(_length,\" character\").concat(_length>1?'s':''));}}if(currentSchema.pattern){hints.push(\"should\".concat(logic?'':' not',\" match pattern \").concat(JSON.stringify(currentSchema.pattern)));}if(currentSchema.format){hints.push(\"should\".concat(logic?'':' not',\" match format \").concat(JSON.stringify(currentSchema.format)));}if(currentSchema.formatMinimum){hints.push(\"should be \".concat(currentSchema.formatExclusiveMinimum?'>':'>=',\" \").concat(JSON.stringify(currentSchema.formatMinimum)));}if(currentSchema.formatMaximum){hints.push(\"should be \".concat(currentSchema.formatExclusiveMaximum?'<':'<=',\" \").concat(JSON.stringify(currentSchema.formatMaximum)));}return[type].concat(hints);};/**\n * @param {Schema} schema\n * @param {boolean} logic\n * @return {string[]}\n */module.exports.numberHints=function numberHints(schema,logic){var hints=[schema.type==='integer'?'integer':'number'];var range=new Range();if(typeof schema.minimum==='number'){range.left(schema.minimum);}if(typeof schema.exclusiveMinimum==='number'){range.left(schema.exclusiveMinimum,true);}if(typeof schema.maximum==='number'){range.right(schema.maximum);}if(typeof schema.exclusiveMaximum==='number'){range.right(schema.exclusiveMaximum,true);}var rangeFormat=range.format(logic);if(rangeFormat){hints.push(rangeFormat);}if(typeof schema.multipleOf==='number'){hints.push(\"should\".concat(logic?'':' not',\" be multiple of \").concat(schema.multipleOf));}return hints;};","map":{"version":3,"names":["Range","require","module","exports","stringHints","schema","logic","hints","type","currentSchema","tmpLength","minLength","tmpFormat","formatMinimum","tmpExclusive","formatExclusiveMaximum","maxLength","formatMaximum","formatExclusiveMinimum","length","Math","max","push","pattern","JSON","stringify","format","concat","numberHints","range","minimum","left","exclusiveMinimum","maximum","right","exclusiveMaximum","rangeFormat","multipleOf"],"sources":["/Users/fernandorojo/Developer/messing/rea-tree/node_modules/@expo/webpack-config/node_modules/babel-loader/node_modules/schema-utils/dist/util/hints.js"],"sourcesContent":["\"use strict\";\n\nconst Range = require('./Range');\n/** @typedef {import(\"../validate\").Schema} Schema */\n\n/**\n * @param {Schema} schema\n * @param {boolean} logic\n * @return {string[]}\n */\n\n\nmodule.exports.stringHints = function stringHints(schema, logic) {\n  const hints = [];\n  let type = 'string';\n  const currentSchema = { ...schema\n  };\n\n  if (!logic) {\n    const tmpLength = currentSchema.minLength;\n    const tmpFormat = currentSchema.formatMinimum;\n    const tmpExclusive = currentSchema.formatExclusiveMaximum;\n    currentSchema.minLength = currentSchema.maxLength;\n    currentSchema.maxLength = tmpLength;\n    currentSchema.formatMinimum = currentSchema.formatMaximum;\n    currentSchema.formatMaximum = tmpFormat;\n    currentSchema.formatExclusiveMaximum = !currentSchema.formatExclusiveMinimum;\n    currentSchema.formatExclusiveMinimum = !tmpExclusive;\n  }\n\n  if (typeof currentSchema.minLength === 'number') {\n    if (currentSchema.minLength === 1) {\n      type = 'non-empty string';\n    } else {\n      const length = Math.max(currentSchema.minLength - 1, 0);\n      hints.push(`should be longer than ${length} character${length > 1 ? 's' : ''}`);\n    }\n  }\n\n  if (typeof currentSchema.maxLength === 'number') {\n    if (currentSchema.maxLength === 0) {\n      type = 'empty string';\n    } else {\n      const length = currentSchema.maxLength + 1;\n      hints.push(`should be shorter than ${length} character${length > 1 ? 's' : ''}`);\n    }\n  }\n\n  if (currentSchema.pattern) {\n    hints.push(`should${logic ? '' : ' not'} match pattern ${JSON.stringify(currentSchema.pattern)}`);\n  }\n\n  if (currentSchema.format) {\n    hints.push(`should${logic ? '' : ' not'} match format ${JSON.stringify(currentSchema.format)}`);\n  }\n\n  if (currentSchema.formatMinimum) {\n    hints.push(`should be ${currentSchema.formatExclusiveMinimum ? '>' : '>='} ${JSON.stringify(currentSchema.formatMinimum)}`);\n  }\n\n  if (currentSchema.formatMaximum) {\n    hints.push(`should be ${currentSchema.formatExclusiveMaximum ? '<' : '<='} ${JSON.stringify(currentSchema.formatMaximum)}`);\n  }\n\n  return [type].concat(hints);\n};\n/**\n * @param {Schema} schema\n * @param {boolean} logic\n * @return {string[]}\n */\n\n\nmodule.exports.numberHints = function numberHints(schema, logic) {\n  const hints = [schema.type === 'integer' ? 'integer' : 'number'];\n  const range = new Range();\n\n  if (typeof schema.minimum === 'number') {\n    range.left(schema.minimum);\n  }\n\n  if (typeof schema.exclusiveMinimum === 'number') {\n    range.left(schema.exclusiveMinimum, true);\n  }\n\n  if (typeof schema.maximum === 'number') {\n    range.right(schema.maximum);\n  }\n\n  if (typeof schema.exclusiveMaximum === 'number') {\n    range.right(schema.exclusiveMaximum, true);\n  }\n\n  const rangeFormat = range.format(logic);\n\n  if (rangeFormat) {\n    hints.push(rangeFormat);\n  }\n\n  if (typeof schema.multipleOf === 'number') {\n    hints.push(`should${logic ? '' : ' not'} be multiple of ${schema.multipleOf}`);\n  }\n\n  return hints;\n};"],"mappings":"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"},"metadata":{},"sourceType":"script"}