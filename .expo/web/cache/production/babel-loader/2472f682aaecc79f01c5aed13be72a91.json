{"ast":null,"code":"\"use strict\";var _defineProperty=require(\"/Users/fernandorojo/Developer/messing/rea-tree/node_modules/next/dist/compiled/@babel/runtime/helpers/defineProperty\");function ownKeys(object,enumerableOnly){var keys=Object.keys(object);if(Object.getOwnPropertySymbols){var symbols=Object.getOwnPropertySymbols(object);enumerableOnly&&(symbols=symbols.filter(function(sym){return Object.getOwnPropertyDescriptor(object,sym).enumerable;})),keys.push.apply(keys,symbols);}return keys;}function _objectSpread(target){for(var i=1;i<arguments.length;i++){var source=null!=arguments[i]?arguments[i]:{};i%2?ownKeys(Object(source),!0).forEach(function(key){_defineProperty(target,key,source[key]);}):Object.getOwnPropertyDescriptors?Object.defineProperties(target,Object.getOwnPropertyDescriptors(source)):ownKeys(Object(source)).forEach(function(key){Object.defineProperty(target,key,Object.getOwnPropertyDescriptor(source,key));});}return target;}Object.defineProperty(exports,\"__esModule\",{value:true});var paths_1=require(\"@expo/config/paths\");var addons_1=require(\"@expo/webpack-config/addons\");function withExpo(){var nextConfig=arguments.length>0&&arguments[0]!==undefined?arguments[0]:{};return _objectSpread(_objectSpread({},nextConfig),{},{pageExtensions:(0,paths_1.getBareExtensions)(['web']),webpack:function webpack(config,options){// Prevent define plugin from overwriting Next.js environment.\nprocess.env.EXPO_WEBPACK_DEFINE_ENVIRONMENT_AS_KEYS='true';var webpack5=(options.config||{}).webpack5;var expoConfig=(0,addons_1.withUnimodules)(config,{projectRoot:nextConfig.projectRoot||process.cwd()},{supportsFontLoading:false,webpack5:webpack5!==false});// Use original public path\n(expoConfig.output||{}).publicPath=(config.output||{}).publicPath;// TODO: Bacon: use commonjs for RNW babel maybe...\nif(typeof nextConfig.webpack==='function'){return nextConfig.webpack(expoConfig,options);}return expoConfig;}});}exports[\"default\"]=withExpo;","map":{"version":3,"sources":["../src/withExpo.ts"],"names":[],"mappings":"+9BAAA,GAAA,CAAA,OAAA,CAAA,OAAA,CAAA,oBAAA,CAAA,CACA,GAAA,CAAA,QAAA,CAAA,OAAA,CAAA,6BAAA,CAAA,CAGA,QAAwB,CAAA,QAAxB,EAAqD,IAApB,CAAA,UAAoB,2DAAF,EAAE,CACnD,sCACK,UADL,MAEE,cAAc,CAAE,CAAA,EAAA,OAAA,CAAA,iBAAA,EAAkB,CAAC,KAAD,CAAlB,CAFlB,CAGE,OAHF,kBAGU,MAHV,CAGoC,OAHpC,CAGgD,CAC5C;AACA,OAAO,CAAC,GAAR,CAAY,uCAAZ,CAAsD,MAAtD,CAEA,GAAM,CAAA,QAAQ,CAAG,CAAC,OAAO,CAAC,MAAR,EAAkB,EAAnB,EAAuB,QAAxC,CAEA,GAAM,CAAA,UAAU,CAAG,CAAA,EAAA,QAAA,CAAA,cAAA,EACjB,MADiB,CAEjB,CACE,WAAW,CAAE,UAAU,CAAC,WAAX,EAA0B,OAAO,CAAC,GAAR,EADzC,CAFiB,CAKjB,CACE,mBAAmB,CAAE,KADvB,CAEE,QAAQ,CAAE,QAAQ,GAAK,KAFzB,CALiB,CAAnB,CAUA;AACA,CAAC,UAAU,CAAC,MAAX,EAAqB,EAAtB,EAA0B,UAA1B,CAAuC,CAAC,MAAM,CAAC,MAAP,EAAiB,EAAlB,EAAsB,UAA7D,CAEA;AACA,GAAI,MAAO,CAAA,UAAU,CAAC,OAAlB,GAA8B,UAAlC,CAA8C,CAC5C,MAAO,CAAA,UAAU,CAAC,OAAX,CAAmB,UAAnB,CAA+B,OAA/B,CAAP,CACD,CAED,MAAO,CAAA,UAAP,CACD,CA5BH,GA8BD,CA/BD,OAAA,WAAA,CAAA,QAAA","sourcesContent":["import { getBareExtensions } from '@expo/config/paths';\nimport { withUnimodules } from '@expo/webpack-config/addons';\nimport { AnyConfiguration } from '@expo/webpack-config/webpack/types';\n\nexport default function withExpo(nextConfig: any = {}): any {\n  return {\n    ...nextConfig,\n    pageExtensions: getBareExtensions(['web']),\n    webpack(config: AnyConfiguration, options: any): AnyConfiguration {\n      // Prevent define plugin from overwriting Next.js environment.\n      process.env.EXPO_WEBPACK_DEFINE_ENVIRONMENT_AS_KEYS = 'true';\n\n      const webpack5 = (options.config || {}).webpack5;\n\n      const expoConfig = withUnimodules(\n        config,\n        {\n          projectRoot: nextConfig.projectRoot || process.cwd(),\n        },\n        {\n          supportsFontLoading: false,\n          webpack5: webpack5 !== false,\n        }\n      );\n      // Use original public path\n      (expoConfig.output || {}).publicPath = (config.output || {}).publicPath;\n\n      // TODO: Bacon: use commonjs for RNW babel maybe...\n      if (typeof nextConfig.webpack === 'function') {\n        return nextConfig.webpack(expoConfig, options);\n      }\n\n      return expoConfig;\n    },\n  };\n}\n"],"sourceRoot":""},"metadata":{},"sourceType":"script"}