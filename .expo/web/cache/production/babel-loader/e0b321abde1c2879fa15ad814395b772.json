{"ast":null,"code":"\"use strict\";var _defineProperty=require(\"/Users/fernandorojo/Developer/messing/rea-tree/node_modules/next/dist/compiled/@babel/runtime/helpers/defineProperty\");function ownKeys(object,enumerableOnly){var keys=Object.keys(object);if(Object.getOwnPropertySymbols){var symbols=Object.getOwnPropertySymbols(object);enumerableOnly&&(symbols=symbols.filter(function(sym){return Object.getOwnPropertyDescriptor(object,sym).enumerable;})),keys.push.apply(keys,symbols);}return keys;}function _objectSpread(target){for(var i=1;i<arguments.length;i++){var source=null!=arguments[i]?arguments[i]:{};i%2?ownKeys(Object(source),!0).forEach(function(key){_defineProperty(target,key,source[key]);}):Object.getOwnPropertyDescriptors?Object.defineProperties(target,Object.getOwnPropertyDescriptors(source)):ownKeys(Object(source)).forEach(function(key){Object.defineProperty(target,key,Object.getOwnPropertyDescriptor(source,key));});}return target;}Object.defineProperty(exports,\"__esModule\",{value:true});var webpack_1=require(\"webpack\");function isNative(env){return!!env.platform&&['ios','android'].includes(env.platform);}function createSourceMapPlugin(webpackConfig){var env=arguments.length>1&&arguments[1]!==undefined?arguments[1]:{};var _a,_b,_c,_d;var mode=(_a=env.mode)!==null&&_a!==void 0?_a:webpackConfig.mode;var isDev=mode!=='production';return(// This is a hack that we use in place of devtool because the index.bundle is not index.js on native.\n// The default devtool won't test for .bundle and there's no way to set it there.\n// This doesn't support inline source maps.\nnew webpack_1.SourceMapDevToolPlugin(_objectSpread({test:/\\.(js|tsx?|(js)?bundle)($|\\?)/i,exclude:/\\.chunk\\.(js)?bundle$/,filename:(_c=(_b=webpackConfig.output)===null||_b===void 0?void 0:_b.sourceMapFilename)!==null&&_c!==void 0?_c:'[file].map',append:\"//# sourceMappingURL=[url]?platform=\".concat(env.platform),// @ts-ignore: this is how webpack works internally\nmoduleFilenameTemplate:(_d=webpackConfig.output)===null||_d===void 0?void 0:_d.devtoolModuleFilenameTemplate},isDev?{// `module: false` = cheap-module-source-map -- less accurate but faster\n// `module: true` = more accurate but some paths are non existent\nmodule:true,columns:false}:{// source-map\n})));}/**\n * Because webpack doesn't support `.bundle` extensions (why should they).\n * We need to extract the default settings for source maps and create a native source map plugin.\n * This does nothing if the env.platform is not ios or android.\n *\n * @param webpackConfig\n * @param env\n */function withPlatformSourceMaps(webpackConfig){var env=arguments.length>1&&arguments[1]!==undefined?arguments[1]:{};if(!isNative(env)){return webpackConfig;}if(!webpackConfig.plugins)webpackConfig.plugins=[];webpackConfig.plugins.push(createSourceMapPlugin(webpackConfig,env));webpackConfig.devtool=false;return webpackConfig;}exports[\"default\"]=withPlatformSourceMaps;","map":{"version":3,"sources":["../../src/addons/withSourceMaps.ts"],"names":[],"mappings":"+9BAAA,GAAA,CAAA,SAAA,CAAA,OAAA,CAAA,SAAA,CAAA,CAIA,QAAS,CAAA,QAAT,CAAkB,GAAlB,CAAyD,CACvD,MAAO,CAAC,CAAC,GAAG,CAAC,QAAN,EAAkB,CAAC,KAAD,CAAQ,SAAR,EAAmB,QAAnB,CAA4B,GAAG,CAAC,QAAhC,CAAzB,CACD,CAED,QAAS,CAAA,qBAAT,CACE,aADF,CAEuD,IAArD,CAAA,GAAqD,2DAAF,EAAE,C,gBAErD,GAAM,CAAA,IAAI,CAAG,CAAA,EAAA,CAAA,GAAG,CAAC,IAAJ,IAAQ,IAAR,EAAQ,EAAA,GAAA,IAAA,EAAR,CAAQ,EAAR,CAAY,aAAa,CAAC,IAAvC,CACA,GAAM,CAAA,KAAK,CAAG,IAAI,GAAK,YAAvB,CAEA,MACE;AACA;AACA;AACA,GAAI,CAAA,SAAA,CAAA,sBAAJ,gBACE,IAAI,CAAE,gCADR,CAEE,OAAO,CAAE,uBAFX,CAGE,QAAQ,CAAE,CAAA,EAAA,CAAA,CAAA,EAAA,CAAA,aAAa,CAAC,MAAd,IAAoB,IAApB,EAAoB,EAAA,GAAA,IAAA,EAApB,CAAoB,IAAA,EAApB,CAAoB,EAAA,CAAE,iBAAtB,IAAuC,IAAvC,EAAuC,EAAA,GAAA,IAAA,EAAvC,CAAuC,EAAvC,CAA2C,YAHvD,CAIE,MAAM,+CAAyC,GAAG,CAAC,QAA7C,CAJR,CAKE;AACA,sBAAsB,CAAE,CAAA,EAAA,CAAA,aAAa,CAAC,MAAd,IAAoB,IAApB,EAAoB,EAAA,GAAA,IAAA,EAApB,CAAoB,IAAA,EAApB,CAAoB,EAAA,CAAE,6BANhD,EAQM,KAAK,CACL,CACE;AACA;AACA,MAAM,CAAE,IAHV,CAIE,OAAO,CAAE,KAJX,CADK,CAOL,CACE;AADF,CAfN,EAJF,EAwBD,CAED;;;;;;;AAOG,GACH,QAAwB,CAAA,sBAAxB,CACE,aADF,CAEuD,IAArD,CAAA,GAAqD,2DAAF,EAAE,CAErD,GAAI,CAAC,QAAQ,CAAC,GAAD,CAAb,CAAoB,CAClB,MAAO,CAAA,aAAP,CACD,CAED,GAAI,CAAC,aAAa,CAAC,OAAnB,CAA4B,aAAa,CAAC,OAAd,CAAwB,EAAxB,CAE5B,aAAa,CAAC,OAAd,CAAsB,IAAtB,CAA2B,qBAAqB,CAAC,aAAD,CAAgB,GAAhB,CAAhD,EACA,aAAa,CAAC,OAAd,CAAwB,KAAxB,CAEA,MAAO,CAAA,aAAP,CACD,CAdD,OAAA,WAAA,CAAA,sBAAA","sourcesContent":["import { SourceMapDevToolPlugin } from 'webpack';\n\nimport { AnyConfiguration, InputEnvironment } from '../types';\n\nfunction isNative(env: Pick<InputEnvironment, 'platform'>): boolean {\n  return !!env.platform && ['ios', 'android'].includes(env.platform);\n}\n\nfunction createSourceMapPlugin(\n  webpackConfig: AnyConfiguration,\n  env: Pick<InputEnvironment, 'mode' | 'platform'> = {}\n) {\n  const mode = env.mode ?? webpackConfig.mode;\n  const isDev = mode !== 'production';\n\n  return (\n    // This is a hack that we use in place of devtool because the index.bundle is not index.js on native.\n    // The default devtool won't test for .bundle and there's no way to set it there.\n    // This doesn't support inline source maps.\n    new SourceMapDevToolPlugin({\n      test: /\\.(js|tsx?|(js)?bundle)($|\\?)/i,\n      exclude: /\\.chunk\\.(js)?bundle$/,\n      filename: webpackConfig.output?.sourceMapFilename ?? '[file].map',\n      append: `//# sourceMappingURL=[url]?platform=${env.platform!}`,\n      // @ts-ignore: this is how webpack works internally\n      moduleFilenameTemplate: webpackConfig.output?.devtoolModuleFilenameTemplate,\n      // Emulate the `devtool` settings based on CRA defaults\n      ...(isDev\n        ? {\n            // `module: false` = cheap-module-source-map -- less accurate but faster\n            // `module: true` = more accurate but some paths are non existent\n            module: true,\n            columns: false,\n          }\n        : {\n            // source-map\n          }),\n    })\n  );\n}\n\n/**\n * Because webpack doesn't support `.bundle` extensions (why should they).\n * We need to extract the default settings for source maps and create a native source map plugin.\n * This does nothing if the env.platform is not ios or android.\n *\n * @param webpackConfig\n * @param env\n */\nexport default function withPlatformSourceMaps(\n  webpackConfig: AnyConfiguration,\n  env: Pick<InputEnvironment, 'platform' | 'mode'> = {}\n): AnyConfiguration {\n  if (!isNative(env)) {\n    return webpackConfig;\n  }\n\n  if (!webpackConfig.plugins) webpackConfig.plugins = [];\n\n  webpackConfig.plugins.push(createSourceMapPlugin(webpackConfig, env));\n  webpackConfig.devtool = false;\n\n  return webpackConfig;\n}\n"],"sourceRoot":""},"metadata":{},"sourceType":"script"}