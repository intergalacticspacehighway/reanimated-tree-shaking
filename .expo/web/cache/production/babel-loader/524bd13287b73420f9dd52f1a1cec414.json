{"ast":null,"code":"\"use strict\";var _defineProperty=require(\"/Users/fernandorojo/Developer/messing/rea-tree/node_modules/next/dist/compiled/@babel/runtime/helpers/defineProperty\");function ownKeys(object,enumerableOnly){var keys=Object.keys(object);if(Object.getOwnPropertySymbols){var symbols=Object.getOwnPropertySymbols(object);enumerableOnly&&(symbols=symbols.filter(function(sym){return Object.getOwnPropertyDescriptor(object,sym).enumerable;})),keys.push.apply(keys,symbols);}return keys;}function _objectSpread(target){for(var i=1;i<arguments.length;i++){var source=null!=arguments[i]?arguments[i]:{};i%2?ownKeys(Object(source),!0).forEach(function(key){_defineProperty(target,key,source[key]);}):Object.getOwnPropertyDescriptors?Object.defineProperties(target,Object.getOwnPropertyDescriptors(source)):ownKeys(Object(source)).forEach(function(key){Object.defineProperty(target,key,Object.getOwnPropertyDescriptor(source,key));});}return target;}Object.defineProperty(exports,\"__esModule\",{value:true});/**\n * Apply aliases to a Webpack config\n *\n * @param webpackConfig Existing Webpack config to modify.\n * @param alias Extra aliases to inject\n * @category addons\n */function withAlias(webpackConfig){var alias=arguments.length>1&&arguments[1]!==undefined?arguments[1]:{};// Mix in aliases\nif(!webpackConfig.resolve)webpackConfig.resolve={};webpackConfig.resolve.alias=_objectSpread(_objectSpread({},webpackConfig.resolve.alias||{}),alias);return webpackConfig;}exports[\"default\"]=withAlias;","map":{"version":3,"sources":["../../src/addons/withAlias.ts"],"names":[],"mappings":"+9BAEA;;;;;;AAMG,GACH,QAAwB,CAAA,SAAxB,CACE,aADF,CAEuC,IAArC,CAAA,KAAqC,2DAAF,EAAE,CAErC;AACA,GAAI,CAAC,aAAa,CAAC,OAAnB,CAA4B,aAAa,CAAC,OAAd,CAAwB,EAAxB,CAC5B,aAAa,CAAC,OAAd,CAAsB,KAAtB,gCACM,aAAa,CAAC,OAAd,CAAsB,KAAtB,EAA+B,EADrC,EAEK,KAFL,EAKA,MAAO,CAAA,aAAP,CACD,CAZD,OAAA,WAAA,CAAA,SAAA","sourcesContent":["import { AnyConfiguration } from '../types';\n\n/**\n * Apply aliases to a Webpack config\n *\n * @param webpackConfig Existing Webpack config to modify.\n * @param alias Extra aliases to inject\n * @category addons\n */\nexport default function withAlias(\n  webpackConfig: AnyConfiguration,\n  alias: { [key: string]: string } = {}\n): AnyConfiguration {\n  // Mix in aliases\n  if (!webpackConfig.resolve) webpackConfig.resolve = {};\n  webpackConfig.resolve.alias = {\n    ...(webpackConfig.resolve.alias || {}),\n    ...alias,\n  };\n\n  return webpackConfig;\n}\n"],"sourceRoot":""},"metadata":{},"sourceType":"script"}