{"ast":null,"code":"\"use strict\";var _defineProperty=require(\"/Users/fernandorojo/Developer/messing/rea-tree/node_modules/next/dist/compiled/@babel/runtime/helpers/defineProperty\");function ownKeys(object,enumerableOnly){var keys=Object.keys(object);if(Object.getOwnPropertySymbols){var symbols=Object.getOwnPropertySymbols(object);enumerableOnly&&(symbols=symbols.filter(function(sym){return Object.getOwnPropertyDescriptor(object,sym).enumerable;})),keys.push.apply(keys,symbols);}return keys;}function _objectSpread(target){for(var i=1;i<arguments.length;i++){var source=null!=arguments[i]?arguments[i]:{};i%2?ownKeys(Object(source),!0).forEach(function(key){_defineProperty(target,key,source[key]);}):Object.getOwnPropertyDescriptors?Object.defineProperties(target,Object.getOwnPropertyDescriptors(source)):ownKeys(Object(source)).forEach(function(key){Object.defineProperty(target,key,Object.getOwnPropertyDescriptor(source,key));});}return target;}Object.defineProperty(exports,\"__esModule\",{value:true});exports.withInternal=exports.EXPO_DEBUG=void 0;function _getenv(){var data=require(\"getenv\");_getenv=function _getenv(){return data;};return data;}var EXPO_DEBUG=(0,_getenv().boolish)('EXPO_DEBUG',false);/**\n * Adds the _internal object.\n *\n * @param config\n * @param projectRoot\n */exports.EXPO_DEBUG=EXPO_DEBUG;var withInternal=function withInternal(config,internals){if(!config._internal){config._internal={};}config._internal=_objectSpread(_objectSpread({isDebug:EXPO_DEBUG},config._internal),internals);return config;};exports.withInternal=withInternal;","map":{"version":3,"sources":["../../src/plugins/withInternal.ts"],"names":["EXPO_DEBUG","withInternal","config","isDebug","internals"],"mappings":"8gCACA,QAAA,CAAA,OAAA,EAAA,CAAA,GAAA,CAAA,IAAA,CAAA,OAAA,CAAA,QAAA,CAAA,CAAA,OAAA,CAAA,kBAAA,CAAA,MAAA,CAAA,IAAA,CAAA,CAAA,CAAA,MAAA,CAAA,IAAA,CAAA,CAIO,GAAMA,CAAAA,UAAU,CAAG,CAAA,EAAA,OAAA,GAAA,OAAA,EAAA,YAAA,CAAnB,KAAmB,CAAnB,CAEP;AACA;AACA;AACA;AACA;AACA,G,8BACO,GAAMC,CAAAA,YAEZ,CAAG,QAFSA,CAAAA,YAET,CAAA,MAAA,CAAA,SAAA,CAAuB,CACzB,GAAI,CAACC,MAAM,CAAX,SAAA,CAAuB,CACrBA,MAAM,CAANA,SAAAA,CAAAA,EAAAA,CACD,CAEDA,MAAM,CAANA,SAAAA,8BACEC,OAAO,CADU,UAAnBD,EAEKA,MAAM,CAFQ,SAAnBA,EAGKE,SAHLF,EAMA,MAAA,CAAA,MAAA,CAbK,CAAA,C","sourcesContent":["import { ConfigPlugin } from '@expo/config-plugins';\nimport { boolish } from 'getenv';\n\nimport { ConfigFilePaths } from '../Config.types';\n\nexport const EXPO_DEBUG = boolish('EXPO_DEBUG', false);\n\n/**\n * Adds the _internal object.\n *\n * @param config\n * @param projectRoot\n */\nexport const withInternal: ConfigPlugin<\n  { projectRoot: string; packageJsonPath?: string } & Partial<ConfigFilePaths>\n> = (config, internals) => {\n  if (!config._internal) {\n    config._internal = {};\n  }\n\n  config._internal = {\n    isDebug: EXPO_DEBUG,\n    ...config._internal,\n    ...internals,\n  };\n\n  return config;\n};\n"]},"metadata":{},"sourceType":"script"}