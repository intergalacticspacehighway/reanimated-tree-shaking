{"ast":null,"code":"import processColor from\"react-native-web/dist/cjs/exports/processColor\";import{round}from'../base';import color from'./color';import interpolate,{Extrapolate}from'./interpolate';function red(c){return c>>16&255;}function green(c){return c>>8&255;}function blue(c){return c&255;}function opacity(c){return(c>>24&255)/255;}/**\n * Use this if you want to interpolate an `Animated.Value` into color values.\n *\n * #### Why is this needed?\n *\n * Unfortunately, if you'll pass color values directly into the `outputRange` option\n * of `interpolate()` function, that won't really work (at least at the moment).\n * See https://github.com/software-mansion/react-native-reanimated/issues/181 .\n *\n * So, for now you can just use this helper instead.\n */export default function interpolateColors(animationValue,options){var inputRange=options.inputRange,outputColorRange=options.outputColorRange;var colors=outputColorRange.map(processColor);var r=round(interpolate(animationValue,{inputRange:inputRange,outputRange:colors.map(red),extrapolate:Extrapolate.CLAMP}));var g=round(interpolate(animationValue,{inputRange:inputRange,outputRange:colors.map(green),extrapolate:Extrapolate.CLAMP}));var b=round(interpolate(animationValue,{inputRange:inputRange,outputRange:colors.map(blue),extrapolate:Extrapolate.CLAMP}));var a=interpolate(animationValue,{inputRange:inputRange,outputRange:colors.map(opacity),extrapolate:Extrapolate.CLAMP});return color(r,g,b,a);}","map":{"version":3,"names":["processColor","round","color","interpolate","Extrapolate","red","c","green","blue","opacity","interpolateColors","animationValue","options","inputRange","outputColorRange","colors","map","r","outputRange","extrapolate","CLAMP","g","b","a"],"sources":["/Users/fernandorojo/Developer/messing/rea-tree/node_modules/react-native-reanimated/lib/reanimated1/derived/interpolateColors.js"],"sourcesContent":["import processColor from \"react-native-web/dist/cjs/exports/processColor\";\nimport { round } from '../base';\nimport color from './color';\nimport interpolate, { Extrapolate } from './interpolate';\n\nfunction red(c) {\n  return c >> 16 & 255;\n}\n\nfunction green(c) {\n  return c >> 8 & 255;\n}\n\nfunction blue(c) {\n  return c & 255;\n}\n\nfunction opacity(c) {\n  return (c >> 24 & 255) / 255;\n}\n/**\n * Use this if you want to interpolate an `Animated.Value` into color values.\n *\n * #### Why is this needed?\n *\n * Unfortunately, if you'll pass color values directly into the `outputRange` option\n * of `interpolate()` function, that won't really work (at least at the moment).\n * See https://github.com/software-mansion/react-native-reanimated/issues/181 .\n *\n * So, for now you can just use this helper instead.\n */\n\n\nexport default function interpolateColors(animationValue, options) {\n  var inputRange = options.inputRange,\n      outputColorRange = options.outputColorRange;\n  var colors = outputColorRange.map(processColor);\n  var r = round(interpolate(animationValue, {\n    inputRange: inputRange,\n    outputRange: colors.map(red),\n    extrapolate: Extrapolate.CLAMP\n  }));\n  var g = round(interpolate(animationValue, {\n    inputRange: inputRange,\n    outputRange: colors.map(green),\n    extrapolate: Extrapolate.CLAMP\n  }));\n  var b = round(interpolate(animationValue, {\n    inputRange: inputRange,\n    outputRange: colors.map(blue),\n    extrapolate: Extrapolate.CLAMP\n  }));\n  var a = interpolate(animationValue, {\n    inputRange: inputRange,\n    outputRange: colors.map(opacity),\n    extrapolate: Extrapolate.CLAMP\n  });\n  return color(r, g, b, a);\n}"],"mappings":"AAAA,MAAOA,CAAAA,YAAP,KAAyB,gDAAzB,CACA,OAASC,KAAT,KAAsB,SAAtB,CACA,MAAOC,CAAAA,KAAP,KAAkB,SAAlB,CACA,MAAOC,CAAAA,WAAP,EAAsBC,WAAtB,KAAyC,eAAzC,CAEA,QAASC,CAAAA,GAAT,CAAaC,CAAb,CAAgB,CACd,MAAOA,CAAAA,CAAC,EAAI,EAAL,CAAU,GAAjB,CACD,CAED,QAASC,CAAAA,KAAT,CAAeD,CAAf,CAAkB,CAChB,MAAOA,CAAAA,CAAC,EAAI,CAAL,CAAS,GAAhB,CACD,CAED,QAASE,CAAAA,IAAT,CAAcF,CAAd,CAAiB,CACf,MAAOA,CAAAA,CAAC,CAAG,GAAX,CACD,CAED,QAASG,CAAAA,OAAT,CAAiBH,CAAjB,CAAoB,CAClB,MAAO,CAACA,CAAC,EAAI,EAAL,CAAU,GAAX,EAAkB,GAAzB,CACD,CACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAGA,cAAe,SAASI,CAAAA,iBAAT,CAA2BC,cAA3B,CAA2CC,OAA3C,CAAoD,CACjE,GAAIC,CAAAA,UAAU,CAAGD,OAAO,CAACC,UAAzB,CACIC,gBAAgB,CAAGF,OAAO,CAACE,gBAD/B,CAEA,GAAIC,CAAAA,MAAM,CAAGD,gBAAgB,CAACE,GAAjB,CAAqBhB,YAArB,CAAb,CACA,GAAIiB,CAAAA,CAAC,CAAGhB,KAAK,CAACE,WAAW,CAACQ,cAAD,CAAiB,CACxCE,UAAU,CAAEA,UAD4B,CAExCK,WAAW,CAAEH,MAAM,CAACC,GAAP,CAAWX,GAAX,CAF2B,CAGxCc,WAAW,CAAEf,WAAW,CAACgB,KAHe,CAAjB,CAAZ,CAAb,CAKA,GAAIC,CAAAA,CAAC,CAAGpB,KAAK,CAACE,WAAW,CAACQ,cAAD,CAAiB,CACxCE,UAAU,CAAEA,UAD4B,CAExCK,WAAW,CAAEH,MAAM,CAACC,GAAP,CAAWT,KAAX,CAF2B,CAGxCY,WAAW,CAAEf,WAAW,CAACgB,KAHe,CAAjB,CAAZ,CAAb,CAKA,GAAIE,CAAAA,CAAC,CAAGrB,KAAK,CAACE,WAAW,CAACQ,cAAD,CAAiB,CACxCE,UAAU,CAAEA,UAD4B,CAExCK,WAAW,CAAEH,MAAM,CAACC,GAAP,CAAWR,IAAX,CAF2B,CAGxCW,WAAW,CAAEf,WAAW,CAACgB,KAHe,CAAjB,CAAZ,CAAb,CAKA,GAAIG,CAAAA,CAAC,CAAGpB,WAAW,CAACQ,cAAD,CAAiB,CAClCE,UAAU,CAAEA,UADsB,CAElCK,WAAW,CAAEH,MAAM,CAACC,GAAP,CAAWP,OAAX,CAFqB,CAGlCU,WAAW,CAAEf,WAAW,CAACgB,KAHS,CAAjB,CAAnB,CAKA,MAAOlB,CAAAA,KAAK,CAACe,CAAD,CAAII,CAAJ,CAAOC,CAAP,CAAUC,CAAV,CAAZ,CACD"},"metadata":{},"sourceType":"module"}